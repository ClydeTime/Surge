import { Any } from "../../../../google/protobuf/any";
import { PlayerArgs } from "../../archive/middleware/v1/preload";
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.AddButtonBgStyle
 */
export var AddButtonBgStyle;
(function (AddButtonBgStyle) {
    /**
     * 默认填充
     *
     * @generated from protobuf enum value: fill = 0;
     */
    AddButtonBgStyle[AddButtonBgStyle["fill"] = 0] = "fill";
    /**
     * 描边
     *
     * @generated from protobuf enum value: stroke = 1;
     */
    AddButtonBgStyle[AddButtonBgStyle["stroke"] = 1] = "stroke";
    /**
     * 置灰
     *
     * @generated from protobuf enum value: gray = 2;
     */
    AddButtonBgStyle[AddButtonBgStyle["gray"] = 2] = "gray";
})(AddButtonBgStyle || (AddButtonBgStyle = {}));
/**
 * 按钮类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AddButtonType
 */
export var AddButtonType;
(function (AddButtonType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: bt_none = 0;
     */
    AddButtonType[AddButtonType["bt_none"] = 0] = "bt_none";
    /**
     * 跳转
     *
     * @generated from protobuf enum value: bt_jump = 1;
     */
    AddButtonType[AddButtonType["bt_jump"] = 1] = "bt_jump";
    /**
     * 按钮
     *
     * @generated from protobuf enum value: bt_button = 2;
     */
    AddButtonType[AddButtonType["bt_button"] = 2] = "bt_button";
})(AddButtonType || (AddButtonType = {}));
/**
 * 投票状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionVoteState
 */
export var AdditionVoteState;
(function (AdditionVoteState) {
    /**
     * @generated from protobuf enum value: addition_vote_state_none = 0;
     */
    AdditionVoteState[AdditionVoteState["addition_vote_state_none"] = 0] = "addition_vote_state_none";
    /**
     * @generated from protobuf enum value: addition_vote_state_open = 1;
     */
    AdditionVoteState[AdditionVoteState["addition_vote_state_open"] = 1] = "addition_vote_state_open";
    /**
     * @generated from protobuf enum value: addition_vote_state_close = 2;
     */
    AdditionVoteState[AdditionVoteState["addition_vote_state_close"] = 2] = "addition_vote_state_close";
})(AdditionVoteState || (AdditionVoteState = {}));
/**
 * 投票类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionVoteType
 */
export var AdditionVoteType;
(function (AdditionVoteType) {
    /**
     * @generated from protobuf enum value: addition_vote_type_none = 0;
     */
    AdditionVoteType[AdditionVoteType["addition_vote_type_none"] = 0] = "addition_vote_type_none";
    /**
     * @generated from protobuf enum value: addition_vote_type_word = 1;
     */
    AdditionVoteType[AdditionVoteType["addition_vote_type_word"] = 1] = "addition_vote_type_word";
    /**
     * @generated from protobuf enum value: addition_vote_type_pic = 2;
     */
    AdditionVoteType[AdditionVoteType["addition_vote_type_pic"] = 2] = "addition_vote_type_pic";
    /**
     * @generated from protobuf enum value: addition_vote_type_default = 3;
     */
    AdditionVoteType[AdditionVoteType["addition_vote_type_default"] = 3] = "addition_vote_type_default";
})(AdditionVoteType || (AdditionVoteType = {}));
/**
 * 附加卡按钮点击类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionalButtonClickType
 */
export var AdditionalButtonClickType;
(function (AdditionalButtonClickType) {
    /**
     * 通用按钮
     *
     * @generated from protobuf enum value: click_none = 0;
     */
    AdditionalButtonClickType[AdditionalButtonClickType["click_none"] = 0] = "click_none";
    /**
     * 预约卡按钮
     *
     * @generated from protobuf enum value: click_up = 1;
     */
    AdditionalButtonClickType[AdditionalButtonClickType["click_up"] = 1] = "click_up";
})(AdditionalButtonClickType || (AdditionalButtonClickType = {}));
/**
 * 附加卡按钮状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionalButtonStatus
 */
export var AdditionalButtonStatus;
(function (AdditionalButtonStatus) {
    /**
     * @generated from protobuf enum value: none = 0;
     */
    AdditionalButtonStatus[AdditionalButtonStatus["none"] = 0] = "none";
    /**
     * @generated from protobuf enum value: uncheck = 1;
     */
    AdditionalButtonStatus[AdditionalButtonStatus["uncheck"] = 1] = "uncheck";
    /**
     * @generated from protobuf enum value: check = 2;
     */
    AdditionalButtonStatus[AdditionalButtonStatus["check"] = 2] = "check";
})(AdditionalButtonStatus || (AdditionalButtonStatus = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionalShareShowType
 */
export var AdditionalShareShowType;
(function (AdditionalShareShowType) {
    /**
     * @generated from protobuf enum value: st_none = 0;
     */
    AdditionalShareShowType[AdditionalShareShowType["st_none"] = 0] = "st_none";
    /**
     * @generated from protobuf enum value: st_show = 1;
     */
    AdditionalShareShowType[AdditionalShareShowType["st_show"] = 1] = "st_show";
})(AdditionalShareShowType || (AdditionalShareShowType = {}));
/**
 * 枚举-动态附加卡
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.AdditionalType
 */
export var AdditionalType;
(function (AdditionalType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: additional_none = 0;
     */
    AdditionalType[AdditionalType["additional_none"] = 0] = "additional_none";
    /**
     * 附加卡-追番
     *
     * @generated from protobuf enum value: additional_type_pgc = 1;
     */
    AdditionalType[AdditionalType["additional_type_pgc"] = 1] = "additional_type_pgc";
    /**
     * 附加卡-商品
     *
     * @generated from protobuf enum value: additional_type_goods = 2;
     */
    AdditionalType[AdditionalType["additional_type_goods"] = 2] = "additional_type_goods";
    /**
     * 附加卡投票
     *
     * @generated from protobuf enum value: additional_type_vote = 3;
     */
    AdditionalType[AdditionalType["additional_type_vote"] = 3] = "additional_type_vote";
    /**
     * 附加通用卡
     *
     * @generated from protobuf enum value: additional_type_common = 4;
     */
    AdditionalType[AdditionalType["additional_type_common"] = 4] = "additional_type_common";
    /**
     * 附加电竞卡
     *
     * @generated from protobuf enum value: additional_type_esport = 5;
     */
    AdditionalType[AdditionalType["additional_type_esport"] = 5] = "additional_type_esport";
    /**
     * 附加UP主推荐卡
     *
     * @generated from protobuf enum value: additional_type_up_rcmd = 6;
     */
    AdditionalType[AdditionalType["additional_type_up_rcmd"] = 6] = "additional_type_up_rcmd";
    /**
     * 附加卡-ugc
     *
     * @generated from protobuf enum value: additional_type_ugc = 7;
     */
    AdditionalType[AdditionalType["additional_type_ugc"] = 7] = "additional_type_ugc";
    /**
     * UP主预约卡
     *
     * @generated from protobuf enum value: additional_type_up_reservation = 8;
     */
    AdditionalType[AdditionalType["additional_type_up_reservation"] = 8] = "additional_type_up_reservation";
})(AdditionalType || (AdditionalType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.CampusTabType
 */
export var CampusTabType;
(function (CampusTabType) {
    /**
     * @generated from protobuf enum value: campus_none = 0;
     */
    CampusTabType[CampusTabType["campus_none"] = 0] = "campus_none";
    /**
     * @generated from protobuf enum value: campus_school = 1;
     */
    CampusTabType[CampusTabType["campus_school"] = 1] = "campus_school";
    /**
     * @generated from protobuf enum value: campus_dynamic = 2;
     */
    CampusTabType[CampusTabType["campus_dynamic"] = 2] = "campus_dynamic";
    /**
     * @generated from protobuf enum value: campus_account = 3;
     */
    CampusTabType[CampusTabType["campus_account"] = 3] = "campus_account";
    /**
     * @generated from protobuf enum value: campus_billboard = 4;
     */
    CampusTabType[CampusTabType["campus_billboard"] = 4] = "campus_billboard";
    /**
     * @generated from protobuf enum value: campus_topic = 5;
     */
    CampusTabType[CampusTabType["campus_topic"] = 5] = "campus_topic";
})(CampusTabType || (CampusTabType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.CoverIcon
 */
export var CoverIcon;
(function (CoverIcon) {
    /**
     * 占位 啥都不展示
     *
     * @generated from protobuf enum value: cover_icon_none = 0;
     */
    CoverIcon[CoverIcon["cover_icon_none"] = 0] = "cover_icon_none";
    /**
     * 播放icon
     *
     * @generated from protobuf enum value: cover_icon_play = 1;
     */
    CoverIcon[CoverIcon["cover_icon_play"] = 1] = "cover_icon_play";
})(CoverIcon || (CoverIcon = {}));
/**
 * 文本类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DescType
 */
export var DescType;
(function (DescType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: desc_type_none = 0;
     */
    DescType[DescType["desc_type_none"] = 0] = "desc_type_none";
    /**
     * 文本
     *
     * @generated from protobuf enum value: desc_type_text = 1;
     */
    DescType[DescType["desc_type_text"] = 1] = "desc_type_text";
    /**
     * @
     *
     * @generated from protobuf enum value: desc_type_aite = 2;
     */
    DescType[DescType["desc_type_aite"] = 2] = "desc_type_aite";
    /**
     * 抽奖
     *
     * @generated from protobuf enum value: desc_type_lottery = 3;
     */
    DescType[DescType["desc_type_lottery"] = 3] = "desc_type_lottery";
    /**
     * 投票
     *
     * @generated from protobuf enum value: desc_type_vote = 4;
     */
    DescType[DescType["desc_type_vote"] = 4] = "desc_type_vote";
    /**
     * 话题
     *
     * @generated from protobuf enum value: desc_type_topic = 5;
     */
    DescType[DescType["desc_type_topic"] = 5] = "desc_type_topic";
    /**
     * 商品
     *
     * @generated from protobuf enum value: desc_type_goods = 6;
     */
    DescType[DescType["desc_type_goods"] = 6] = "desc_type_goods";
    /**
     * bv
     *
     * @generated from protobuf enum value: desc_type_bv = 7;
     */
    DescType[DescType["desc_type_bv"] = 7] = "desc_type_bv";
    /**
     * av
     *
     * @generated from protobuf enum value: desc_type_av = 8;
     */
    DescType[DescType["desc_type_av"] = 8] = "desc_type_av";
    /**
     * 表情
     *
     * @generated from protobuf enum value: desc_type_emoji = 9;
     */
    DescType[DescType["desc_type_emoji"] = 9] = "desc_type_emoji";
    /**
     * 外露用户
     *
     * @generated from protobuf enum value: desc_type_user = 10;
     */
    DescType[DescType["desc_type_user"] = 10] = "desc_type_user";
    /**
     * 专栏
     *
     * @generated from protobuf enum value: desc_type_cv = 11;
     */
    DescType[DescType["desc_type_cv"] = 11] = "desc_type_cv";
    /**
     * 小视频
     *
     * @generated from protobuf enum value: desc_type_vc = 12;
     */
    DescType[DescType["desc_type_vc"] = 12] = "desc_type_vc";
    /**
     * 网址
     *
     * @generated from protobuf enum value: desc_type_web = 13;
     */
    DescType[DescType["desc_type_web"] = 13] = "desc_type_web";
    /**
     * 淘宝
     *
     * @generated from protobuf enum value: desc_type_taobao = 14;
     */
    DescType[DescType["desc_type_taobao"] = 14] = "desc_type_taobao";
    /**
     * 邮箱
     *
     * @generated from protobuf enum value: desc_type_mail = 15;
     */
    DescType[DescType["desc_type_mail"] = 15] = "desc_type_mail";
    /**
     * 番剧season
     *
     * @generated from protobuf enum value: desc_type_ogv_season = 16;
     */
    DescType[DescType["desc_type_ogv_season"] = 16] = "desc_type_ogv_season";
    /**
     * 番剧ep
     *
     * @generated from protobuf enum value: desc_type_ogv_ep = 17;
     */
    DescType[DescType["desc_type_ogv_ep"] = 17] = "desc_type_ogv_ep";
    /**
     * @generated from protobuf enum value: desc_type_search_word = 18;
     */
    DescType[DescType["desc_type_search_word"] = 18] = "desc_type_search_word";
})(DescType || (DescType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.DisableState
 */
export var DisableState;
(function (DisableState) {
    /**
     * 高亮
     *
     * @generated from protobuf enum value: highlight = 0;
     */
    DisableState[DisableState["highlight"] = 0] = "highlight";
    /**
     * 置灰(按钮不可点击)
     *
     * @generated from protobuf enum value: gary = 1;
     */
    DisableState[DisableState["gary"] = 1] = "gary";
})(DisableState || (DisableState = {}));
/**
 * 动态小卡类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynExtendType
 */
export var DynExtendType;
(function (DynExtendType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: dyn_ext_type_none = 0;
     */
    DynExtendType[DynExtendType["dyn_ext_type_none"] = 0] = "dyn_ext_type_none";
    /**
     * 话题小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_topic = 1;
     */
    DynExtendType[DynExtendType["dyn_ext_type_topic"] = 1] = "dyn_ext_type_topic";
    /**
     * lbs小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_lbs = 2;
     */
    DynExtendType[DynExtendType["dyn_ext_type_lbs"] = 2] = "dyn_ext_type_lbs";
    /**
     * 热门小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_hot = 3;
     */
    DynExtendType[DynExtendType["dyn_ext_type_hot"] = 3] = "dyn_ext_type_hot";
    /**
     * 游戏小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_game = 4;
     */
    DynExtendType[DynExtendType["dyn_ext_type_game"] = 4] = "dyn_ext_type_game";
    /**
     * 通用小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_common = 5;
     */
    DynExtendType[DynExtendType["dyn_ext_type_common"] = 5] = "dyn_ext_type_common";
    /**
     * 必剪小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_biliCut = 6;
     */
    DynExtendType[DynExtendType["dyn_ext_type_biliCut"] = 6] = "dyn_ext_type_biliCut";
    /**
     * ogv小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_ogv = 7;
     */
    DynExtendType[DynExtendType["dyn_ext_type_ogv"] = 7] = "dyn_ext_type_ogv";
    /**
     * 自动附加ogv小卡
     *
     * @generated from protobuf enum value: dyn_ext_type_auto_ogv = 8;
     */
    DynExtendType[DynExtendType["dyn_ext_type_auto_ogv"] = 8] = "dyn_ext_type_auto_ogv";
})(DynExtendType || (DynExtendType = {}));
/**
 * 动态模块类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynModuleType
 */
export var DynModuleType;
(function (DynModuleType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: module_none = 0;
     */
    DynModuleType[DynModuleType["module_none"] = 0] = "module_none";
    /**
     * 发布人模块
     *
     * @generated from protobuf enum value: module_author = 1;
     */
    DynModuleType[DynModuleType["module_author"] = 1] = "module_author";
    /**
     * 争议小黄条
     *
     * @generated from protobuf enum value: module_dispute = 2;
     */
    DynModuleType[DynModuleType["module_dispute"] = 2] = "module_dispute";
    /**
     * 描述文案
     *
     * @generated from protobuf enum value: module_desc = 3;
     */
    DynModuleType[DynModuleType["module_desc"] = 3] = "module_desc";
    /**
     * 动态卡片
     *
     * @generated from protobuf enum value: module_dynamic = 4;
     */
    DynModuleType[DynModuleType["module_dynamic"] = 4] = "module_dynamic";
    /**
     * 转发模块
     *
     * @generated from protobuf enum value: module_forward = 5;
     */
    DynModuleType[DynModuleType["module_forward"] = 5] = "module_forward";
    /**
     * 点赞用户(废弃)
     *
     * @generated from protobuf enum value: module_likeUser = 6;
     */
    DynModuleType[DynModuleType["module_likeUser"] = 6] = "module_likeUser";
    /**
     * 小卡模块
     *
     * @generated from protobuf enum value: module_extend = 7;
     */
    DynModuleType[DynModuleType["module_extend"] = 7] = "module_extend";
    /**
     * 附加卡
     *
     * @generated from protobuf enum value: module_additional = 8;
     */
    DynModuleType[DynModuleType["module_additional"] = 8] = "module_additional";
    /**
     * 计数信息
     *
     * @generated from protobuf enum value: module_stat = 9;
     */
    DynModuleType[DynModuleType["module_stat"] = 9] = "module_stat";
    /**
     * 折叠
     *
     * @generated from protobuf enum value: module_fold = 10;
     */
    DynModuleType[DynModuleType["module_fold"] = 10] = "module_fold";
    /**
     * 评论外露(废弃)
     *
     * @generated from protobuf enum value: module_comment = 11;
     */
    DynModuleType[DynModuleType["module_comment"] = 11] = "module_comment";
    /**
     * 外露交互模块(点赞、评论)
     *
     * @generated from protobuf enum value: module_interaction = 12;
     */
    DynModuleType[DynModuleType["module_interaction"] = 12] = "module_interaction";
    /**
     * 转发卡的发布人模块
     *
     * @generated from protobuf enum value: module_author_forward = 13;
     */
    DynModuleType[DynModuleType["module_author_forward"] = 13] = "module_author_forward";
    /**
     * 广告卡模块
     *
     * @generated from protobuf enum value: module_ad = 14;
     */
    DynModuleType[DynModuleType["module_ad"] = 14] = "module_ad";
    /**
     * 通栏模块
     *
     * @generated from protobuf enum value: module_banner = 15;
     */
    DynModuleType[DynModuleType["module_banner"] = 15] = "module_banner";
    /**
     * 获取物料失败模块
     *
     * @generated from protobuf enum value: module_item_null = 16;
     */
    DynModuleType[DynModuleType["module_item_null"] = 16] = "module_item_null";
    /**
     * 分享组件
     *
     * @generated from protobuf enum value: module_share_info = 17;
     */
    DynModuleType[DynModuleType["module_share_info"] = 17] = "module_share_info";
    /**
     * 相关推荐模块
     *
     * @generated from protobuf enum value: module_recommend = 18;
     */
    DynModuleType[DynModuleType["module_recommend"] = 18] = "module_recommend";
    /**
     * 转发卡计数信息
     *
     * @generated from protobuf enum value: module_stat_forward = 19;
     */
    DynModuleType[DynModuleType["module_stat_forward"] = 19] = "module_stat_forward";
    /**
     * 顶部模块
     *
     * @generated from protobuf enum value: module_top = 20;
     */
    DynModuleType[DynModuleType["module_top"] = 20] = "module_top";
    /**
     * 底部模块
     *
     * @generated from protobuf enum value: module_bottom = 21;
     */
    DynModuleType[DynModuleType["module_bottom"] = 21] = "module_bottom";
    /**
     * @generated from protobuf enum value: module_story = 22;
     */
    DynModuleType[DynModuleType["module_story"] = 22] = "module_story";
    /**
     * @generated from protobuf enum value: module_topic = 23;
     */
    DynModuleType[DynModuleType["module_topic"] = 23] = "module_topic";
    /**
     * @generated from protobuf enum value: module_topic_details_ext = 24;
     */
    DynModuleType[DynModuleType["module_topic_details_ext"] = 24] = "module_topic_details_ext";
    /**
     * @generated from protobuf enum value: module_top_tag = 25;
     */
    DynModuleType[DynModuleType["module_top_tag"] = 25] = "module_top_tag";
    /**
     * @generated from protobuf enum value: module_topic_brief = 26;
     */
    DynModuleType[DynModuleType["module_topic_brief"] = 26] = "module_topic_brief";
    /**
     * @generated from protobuf enum value: module_title = 27;
     */
    DynModuleType[DynModuleType["module_title"] = 27] = "module_title";
})(DynModuleType || (DynModuleType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynUriType
 */
export var DynUriType;
(function (DynUriType) {
    /**
     * @generated from protobuf enum value: dyn_uri_type_none = 0;
     */
    DynUriType[DynUriType["dyn_uri_type_none"] = 0] = "dyn_uri_type_none";
    /**
     * 直接跳转对应uri
     *
     * @generated from protobuf enum value: dyn_uri_type_direct = 1;
     */
    DynUriType[DynUriType["dyn_uri_type_direct"] = 1] = "dyn_uri_type_direct";
    /**
     * 作为后缀拼接
     *
     * @generated from protobuf enum value: dyn_uri_type_suffix = 2;
     */
    DynUriType[DynUriType["dyn_uri_type_suffix"] = 2] = "dyn_uri_type_suffix";
})(DynUriType || (DynUriType = {}));
/**
 * 枚举-动态类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.DynamicType
 */
export var DynamicType;
(function (DynamicType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: dyn_none = 0;
     */
    DynamicType[DynamicType["dyn_none"] = 0] = "dyn_none";
    /**
     * 转发
     *
     * @generated from protobuf enum value: forward = 1;
     */
    DynamicType[DynamicType["forward"] = 1] = "forward";
    /**
     * 稿件: ugc、小视频、短视频、UGC转PGC
     *
     * @generated from protobuf enum value: av = 2;
     */
    DynamicType[DynamicType["av"] = 2] = "av";
    /**
     * pgc：番剧、PGC番剧、PGC电影、PGC电视剧、PGC国创、PGC纪录片
     *
     * @generated from protobuf enum value: pgc = 3;
     */
    DynamicType[DynamicType["pgc"] = 3] = "pgc";
    /**
     * 付费更新批次
     *
     * @generated from protobuf enum value: courses = 4;
     */
    DynamicType[DynamicType["courses"] = 4] = "courses";
    /**
     * 折叠
     *
     * @generated from protobuf enum value: fold = 5;
     */
    DynamicType[DynamicType["fold"] = 5] = "fold";
    /**
     * 纯文字
     *
     * @generated from protobuf enum value: word = 6;
     */
    DynamicType[DynamicType["word"] = 6] = "word";
    /**
     * 图文
     *
     * @generated from protobuf enum value: draw = 7;
     */
    DynamicType[DynamicType["draw"] = 7] = "draw";
    /**
     * 专栏 原仅phone端
     *
     * @generated from protobuf enum value: article = 8;
     */
    DynamicType[DynamicType["article"] = 8] = "article";
    /**
     * 音频 原仅phone端
     *
     * @generated from protobuf enum value: music = 9;
     */
    DynamicType[DynamicType["music"] = 9] = "music";
    /**
     * 通用卡 方形
     *
     * @generated from protobuf enum value: common_square = 10;
     */
    DynamicType[DynamicType["common_square"] = 10] = "common_square";
    /**
     * 通用卡 竖形
     *
     * @generated from protobuf enum value: common_vertical = 11;
     */
    DynamicType[DynamicType["common_vertical"] = 11] = "common_vertical";
    /**
     * 直播卡 只有转发态
     *
     * @generated from protobuf enum value: live = 12;
     */
    DynamicType[DynamicType["live"] = 12] = "live";
    /**
     * 播单 原仅phone端 只有转发态
     *
     * @generated from protobuf enum value: medialist = 13;
     */
    DynamicType[DynamicType["medialist"] = 13] = "medialist";
    /**
     * 付费更新批次 只有转发态
     *
     * @generated from protobuf enum value: courses_season = 14;
     */
    DynamicType[DynamicType["courses_season"] = 14] = "courses_season";
    /**
     * 广告卡
     *
     * @generated from protobuf enum value: ad = 15;
     */
    DynamicType[DynamicType["ad"] = 15] = "ad";
    /**
     * 小程序卡
     *
     * @generated from protobuf enum value: applet = 16;
     */
    DynamicType[DynamicType["applet"] = 16] = "applet";
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: subscription = 17;
     */
    DynamicType[DynamicType["subscription"] = 17] = "subscription";
    /**
     * 直播推荐卡
     *
     * @generated from protobuf enum value: live_rcmd = 18;
     */
    DynamicType[DynamicType["live_rcmd"] = 18] = "live_rcmd";
    /**
     * 通栏
     *
     * @generated from protobuf enum value: banner = 19;
     */
    DynamicType[DynamicType["banner"] = 19] = "banner";
    /**
     * 合集卡
     *
     * @generated from protobuf enum value: ugc_season = 20;
     */
    DynamicType[DynamicType["ugc_season"] = 20] = "ugc_season";
    /**
     * 新订阅卡
     *
     * @generated from protobuf enum value: subscription_new = 21;
     */
    DynamicType[DynamicType["subscription_new"] = 21] = "subscription_new";
    /**
     * @generated from protobuf enum value: story = 22;
     */
    DynamicType[DynamicType["story"] = 22] = "story";
    /**
     * @generated from protobuf enum value: topic_rcmd = 23;
     */
    DynamicType[DynamicType["topic_rcmd"] = 23] = "topic_rcmd";
})(DynamicType || (DynamicType = {}));
/**
 * 表情包类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.EmojiType
 */
export var EmojiType;
(function (EmojiType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: emoji_none = 0;
     */
    EmojiType[EmojiType["emoji_none"] = 0] = "emoji_none";
    /**
     * emoji旧类型
     *
     * @generated from protobuf enum value: emoji_old = 1;
     */
    EmojiType[EmojiType["emoji_old"] = 1] = "emoji_old";
    /**
     * emoji新类型
     *
     * @generated from protobuf enum value: emoji_new = 2;
     */
    EmojiType[EmojiType["emoji_new"] = 2] = "emoji_new";
    /**
     * 大会员表情
     *
     * @generated from protobuf enum value: vip = 3;
     */
    EmojiType[EmojiType["vip"] = 3] = "vip";
})(EmojiType || (EmojiType = {}));
/**
 * 附加大卡-电竞卡样式
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.EspaceStyle
 */
export var EspaceStyle;
(function (EspaceStyle) {
    /**
     * moba类
     *
     * @generated from protobuf enum value: moba = 0;
     */
    EspaceStyle[EspaceStyle["moba"] = 0] = "moba";
})(EspaceStyle || (EspaceStyle = {}));
/**
 * 折叠类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.FoldType
 */
export var FoldType;
(function (FoldType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: FoldTypeZore = 0;
     */
    FoldType[FoldType["FoldTypeZore"] = 0] = "FoldTypeZore";
    /**
     * 用户发布折叠
     *
     * @generated from protobuf enum value: FoldTypePublish = 1;
     */
    FoldType[FoldType["FoldTypePublish"] = 1] = "FoldTypePublish";
    /**
     * 转发超频折叠
     *
     * @generated from protobuf enum value: FoldTypeFrequent = 2;
     */
    FoldType[FoldType["FoldTypeFrequent"] = 2] = "FoldTypeFrequent";
    /**
     * 联合投稿折叠
     *
     * @generated from protobuf enum value: FoldTypeUnite = 3;
     */
    FoldType[FoldType["FoldTypeUnite"] = 3] = "FoldTypeUnite";
    /**
     * 动态受限折叠
     *
     * @generated from protobuf enum value: FoldTypeLimit = 4;
     */
    FoldType[FoldType["FoldTypeLimit"] = 4] = "FoldTypeLimit";
})(FoldType || (FoldType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.FollowType
 */
export var FollowType;
(function (FollowType) {
    /**
     * @generated from protobuf enum value: ft_not_follow = 0;
     */
    FollowType[FollowType["ft_not_follow"] = 0] = "ft_not_follow";
    /**
     * @generated from protobuf enum value: ft_follow = 1;
     */
    FollowType[FollowType["ft_follow"] = 1] = "ft_follow";
})(FollowType || (FollowType = {}));
/**
 * 文本高亮枚举
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.HighlightTextStyle
 */
export var HighlightTextStyle;
(function (HighlightTextStyle) {
    /**
     * 默认
     *
     * @generated from protobuf enum value: style_none = 0;
     */
    HighlightTextStyle[HighlightTextStyle["style_none"] = 0] = "style_none";
    /**
     * 高亮
     *
     * @generated from protobuf enum value: style_highlight = 1;
     */
    HighlightTextStyle[HighlightTextStyle["style_highlight"] = 1] = "style_highlight";
})(HighlightTextStyle || (HighlightTextStyle = {}));
/**
 * 枚举-附加卡样式
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ImageStyle
 */
export var ImageStyle;
(function (ImageStyle) {
    /**
     * @generated from protobuf enum value: add_style_vertical = 0;
     */
    ImageStyle[ImageStyle["add_style_vertical"] = 0] = "add_style_vertical";
    /**
     * @generated from protobuf enum value: add_style_square = 1;
     */
    ImageStyle[ImageStyle["add_style_square"] = 1] = "add_style_square";
})(ImageStyle || (ImageStyle = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.LightFromType
 */
export var LightFromType;
(function (LightFromType) {
    /**
     * @generated from protobuf enum value: from_login = 0;
     */
    LightFromType[LightFromType["from_login"] = 0] = "from_login";
    /**
     * @generated from protobuf enum value: from_unlogin = 1;
     */
    LightFromType[LightFromType["from_unlogin"] = 1] = "from_unlogin";
})(LightFromType || (LightFromType = {}));
/**
 * 直播状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.LiveState
 */
export var LiveState;
(function (LiveState) {
    /**
     * 未直播
     *
     * @generated from protobuf enum value: live_none = 0;
     */
    LiveState[LiveState["live_none"] = 0] = "live_none";
    /**
     * 直播中
     *
     * @generated from protobuf enum value: live_live = 1;
     */
    LiveState[LiveState["live_live"] = 1] = "live_live";
    /**
     * 轮播中
     *
     * @generated from protobuf enum value: live_rotation = 2;
     */
    LiveState[LiveState["live_rotation"] = 2] = "live_rotation";
})(LiveState || (LiveState = {}));
/**
 * 外露模块类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.LocalIconType
 */
export var LocalIconType;
(function (LocalIconType) {
    /**
     * @generated from protobuf enum value: local_icon_comment = 0;
     */
    LocalIconType[LocalIconType["local_icon_comment"] = 0] = "local_icon_comment";
    /**
     * @generated from protobuf enum value: local_icon_like = 1;
     */
    LocalIconType[LocalIconType["local_icon_like"] = 1] = "local_icon_like";
})(LocalIconType || (LocalIconType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.MdlDynCommonType
 */
export var MdlDynCommonType;
(function (MdlDynCommonType) {
    /**
     * @generated from protobuf enum value: mdl_dyn_common_none = 0;
     */
    MdlDynCommonType[MdlDynCommonType["mdl_dyn_common_none"] = 0] = "mdl_dyn_common_none";
    /**
     * @generated from protobuf enum value: mdl_dyn_common_square = 1;
     */
    MdlDynCommonType[MdlDynCommonType["mdl_dyn_common_square"] = 1] = "mdl_dyn_common_square";
    /**
     * @generated from protobuf enum value: mdl_dyn_common_vertica = 2;
     */
    MdlDynCommonType[MdlDynCommonType["mdl_dyn_common_vertica"] = 2] = "mdl_dyn_common_vertica";
})(MdlDynCommonType || (MdlDynCommonType = {}));
/**
 * 图文标签类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.MdlDynDrawTagType
 */
export var MdlDynDrawTagType;
(function (MdlDynDrawTagType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: mdl_draw_tag_none = 0;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_none"] = 0] = "mdl_draw_tag_none";
    /**
     * 普通标签
     *
     * @generated from protobuf enum value: mdl_draw_tag_common = 1;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_common"] = 1] = "mdl_draw_tag_common";
    /**
     * 商品标签
     *
     * @generated from protobuf enum value: mdl_draw_tag_goods = 2;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_goods"] = 2] = "mdl_draw_tag_goods";
    /**
     * 用户昵称
     *
     * @generated from protobuf enum value: mdl_draw_tag_user = 3;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_user"] = 3] = "mdl_draw_tag_user";
    /**
     * 话题名称
     *
     * @generated from protobuf enum value: mdl_draw_tag_topic = 4;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_topic"] = 4] = "mdl_draw_tag_topic";
    /**
     * lbs标签
     *
     * @generated from protobuf enum value: mdl_draw_tag_lbs = 5;
     */
    MdlDynDrawTagType[MdlDynDrawTagType["mdl_draw_tag_lbs"] = 5] = "mdl_draw_tag_lbs";
})(MdlDynDrawTagType || (MdlDynDrawTagType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle
 */
export var MdlDynSubscriptionNewStyle;
(function (MdlDynSubscriptionNewStyle) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: mdl_dyn_subscription_new_style_nont = 0;
     */
    MdlDynSubscriptionNewStyle[MdlDynSubscriptionNewStyle["mdl_dyn_subscription_new_style_nont"] = 0] = "mdl_dyn_subscription_new_style_nont";
    /**
     * 直播
     *
     * @generated from protobuf enum value: mdl_dyn_subscription_new_style_live = 1;
     */
    MdlDynSubscriptionNewStyle[MdlDynSubscriptionNewStyle["mdl_dyn_subscription_new_style_live"] = 1] = "mdl_dyn_subscription_new_style_live";
    /**
     * 图文
     *
     * @generated from protobuf enum value: mdl_dyn_subscription_new_style_draw = 2;
     */
    MdlDynSubscriptionNewStyle[MdlDynSubscriptionNewStyle["mdl_dyn_subscription_new_style_draw"] = 2] = "mdl_dyn_subscription_new_style_draw";
})(MdlDynSubscriptionNewStyle || (MdlDynSubscriptionNewStyle = {}));
/**
 * 播放器类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.MediaType
 */
export var MediaType;
(function (MediaType) {
    /**
     * 本地
     *
     * @generated from protobuf enum value: MediaTypeNone = 0;
     */
    MediaType[MediaType["MediaTypeNone"] = 0] = "MediaTypeNone";
    /**
     * UGC
     *
     * @generated from protobuf enum value: MediaTypeUGC = 1;
     */
    MediaType[MediaType["MediaTypeUGC"] = 1] = "MediaTypeUGC";
    /**
     * PGC
     *
     * @generated from protobuf enum value: MediaTypePGC = 2;
     */
    MediaType[MediaType["MediaTypePGC"] = 2] = "MediaTypePGC";
    /**
     * 直播
     *
     * @generated from protobuf enum value: MediaTypeLive = 3;
     */
    MediaType[MediaType["MediaTypeLive"] = 3] = "MediaTypeLive";
    /**
     * 小视频
     *
     * @generated from protobuf enum value: MediaTypeVCS = 4;
     */
    MediaType[MediaType["MediaTypeVCS"] = 4] = "MediaTypeVCS";
})(MediaType || (MediaType = {}));
/**
 * 右侧操作区域样式枚举
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ModuleAuthorBadgeType
 */
export var ModuleAuthorBadgeType;
(function (ModuleAuthorBadgeType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: module_author_badge_type_none = 0;
     */
    ModuleAuthorBadgeType[ModuleAuthorBadgeType["module_author_badge_type_none"] = 0] = "module_author_badge_type_none";
    /**
     * 三点
     *
     * @generated from protobuf enum value: module_author_badge_type_threePoint = 1;
     */
    ModuleAuthorBadgeType[ModuleAuthorBadgeType["module_author_badge_type_threePoint"] = 1] = "module_author_badge_type_threePoint";
    /**
     * 按钮类型
     *
     * @generated from protobuf enum value: module_author_badge_type_button = 2;
     */
    ModuleAuthorBadgeType[ModuleAuthorBadgeType["module_author_badge_type_button"] = 2] = "module_author_badge_type_button";
    /**
     * 提权
     *
     * @generated from protobuf enum value: module_author_badge_type_weight = 3;
     */
    ModuleAuthorBadgeType[ModuleAuthorBadgeType["module_author_badge_type_weight"] = 3] = "module_author_badge_type_weight";
})(ModuleAuthorBadgeType || (ModuleAuthorBadgeType = {}));
/**
 * 动态列表-通栏类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ModuleBannerType
 */
export var ModuleBannerType;
(function (ModuleBannerType) {
    /**
     * @generated from protobuf enum value: module_banner_type_none = 0;
     */
    ModuleBannerType[ModuleBannerType["module_banner_type_none"] = 0] = "module_banner_type_none";
    /**
     * @generated from protobuf enum value: module_banner_type_user = 1;
     */
    ModuleBannerType[ModuleBannerType["module_banner_type_user"] = 1] = "module_banner_type_user";
})(ModuleBannerType || (ModuleBannerType = {}));
/**
 * 动态详情模块类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ModuleDynamicType
 */
export var ModuleDynamicType;
(function (ModuleDynamicType) {
    /**
     * 稿件
     *
     * @generated from protobuf enum value: mdl_dyn_archive = 0;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_archive"] = 0] = "mdl_dyn_archive";
    /**
     * pgc
     *
     * @generated from protobuf enum value: mdl_dyn_pgc = 1;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_pgc"] = 1] = "mdl_dyn_pgc";
    /**
     * 付费课程-系列
     *
     * @generated from protobuf enum value: mdl_dyn_cour_season = 2;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_cour_season"] = 2] = "mdl_dyn_cour_season";
    /**
     * 付费课程-批次
     *
     * @generated from protobuf enum value: mdl_dyn_cour_batch = 3;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_cour_batch"] = 3] = "mdl_dyn_cour_batch";
    /**
     * 转发卡
     *
     * @generated from protobuf enum value: mdl_dyn_forward = 4;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_forward"] = 4] = "mdl_dyn_forward";
    /**
     * 图文
     *
     * @generated from protobuf enum value: mdl_dyn_draw = 5;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_draw"] = 5] = "mdl_dyn_draw";
    /**
     * 专栏
     *
     * @generated from protobuf enum value: mdl_dyn_article = 6;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_article"] = 6] = "mdl_dyn_article";
    /**
     * 音频
     *
     * @generated from protobuf enum value: mdl_dyn_music = 7;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_music"] = 7] = "mdl_dyn_music";
    /**
     * 通用卡方
     *
     * @generated from protobuf enum value: mdl_dyn_common = 8;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_common"] = 8] = "mdl_dyn_common";
    /**
     * 直播卡
     *
     * @generated from protobuf enum value: mdl_dyn_live = 9;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_live"] = 9] = "mdl_dyn_live";
    /**
     * 播单
     *
     * @generated from protobuf enum value: mdl_dyn_medialist = 10;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_medialist"] = 10] = "mdl_dyn_medialist";
    /**
     * 小程序卡
     *
     * @generated from protobuf enum value: mdl_dyn_applet = 11;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_applet"] = 11] = "mdl_dyn_applet";
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: mdl_dyn_subscription = 12;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_subscription"] = 12] = "mdl_dyn_subscription";
    /**
     * 直播推荐卡
     *
     * @generated from protobuf enum value: mdl_dyn_live_rcmd = 13;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_live_rcmd"] = 13] = "mdl_dyn_live_rcmd";
    /**
     * UGC合集
     *
     * @generated from protobuf enum value: mdl_dyn_ugc_season = 14;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_ugc_season"] = 14] = "mdl_dyn_ugc_season";
    /**
     * 订阅卡
     *
     * @generated from protobuf enum value: mdl_dyn_subscription_new = 15;
     */
    ModuleDynamicType[ModuleDynamicType["mdl_dyn_subscription_new"] = 15] = "mdl_dyn_subscription_new";
})(ModuleDynamicType || (ModuleDynamicType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.NetworkType
 */
export var NetworkType;
(function (NetworkType) {
    /**
     * @generated from protobuf enum value: NT_UNKNOWN = 0;
     */
    NetworkType[NetworkType["NT_UNKNOWN"] = 0] = "NT_UNKNOWN";
    /**
     * @generated from protobuf enum value: WIFI = 1;
     */
    NetworkType[NetworkType["WIFI"] = 1] = "WIFI";
    /**
     * @generated from protobuf enum value: CELLULAR = 2;
     */
    NetworkType[NetworkType["CELLULAR"] = 2] = "CELLULAR";
    /**
     * @generated from protobuf enum value: OFFLINE = 3;
     */
    NetworkType[NetworkType["OFFLINE"] = 3] = "OFFLINE";
    /**
     * @generated from protobuf enum value: OTHERNET = 4;
     */
    NetworkType[NetworkType["OTHERNET"] = 4] = "OTHERNET";
    /**
     * @generated from protobuf enum value: ETHERNET = 5;
     */
    NetworkType[NetworkType["ETHERNET"] = 5] = "ETHERNET";
})(NetworkType || (NetworkType = {}));
/**
 * 推荐模块数据类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.RcmdType
 */
export var RcmdType;
(function (RcmdType) {
    /**
     * 稿件
     *
     * @generated from protobuf enum value: rcmd_archive = 0;
     */
    RcmdType[RcmdType["rcmd_archive"] = 0] = "rcmd_archive";
    /**
     * 动态
     *
     * @generated from protobuf enum value: rcmd_dynamic = 1;
     */
    RcmdType[RcmdType["rcmd_dynamic"] = 1] = "rcmd_dynamic";
})(RcmdType || (RcmdType = {}));
/**
 * 刷新方式
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.Refresh
 */
export var Refresh;
(function (Refresh) {
    /**
     * 刷新列表
     *
     * @generated from protobuf enum value: refresh_new = 0;
     */
    Refresh[Refresh["refresh_new"] = 0] = "refresh_new";
    /**
     * 请求历史
     *
     * @generated from protobuf enum value: refresh_history = 1;
     */
    Refresh[Refresh["refresh_history"] = 1] = "refresh_history";
})(Refresh || (Refresh = {}));
/**
 * 关注关系 枚举
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.RelationStatus
 */
export var RelationStatus;
(function (RelationStatus) {
    /**
     * 1-未关注 2-关注 3-被关注 4-互相关注 5-特别关注
     *
     * @generated from protobuf enum value: relation_status_none = 0;
     */
    RelationStatus[RelationStatus["relation_status_none"] = 0] = "relation_status_none";
    /**
     * @generated from protobuf enum value: relation_status_nofollow = 1;
     */
    RelationStatus[RelationStatus["relation_status_nofollow"] = 1] = "relation_status_nofollow";
    /**
     * @generated from protobuf enum value: relation_status_follow = 2;
     */
    RelationStatus[RelationStatus["relation_status_follow"] = 2] = "relation_status_follow";
    /**
     * @generated from protobuf enum value: relation_status_followed = 3;
     */
    RelationStatus[RelationStatus["relation_status_followed"] = 3] = "relation_status_followed";
    /**
     * @generated from protobuf enum value: relation_status_mutual_concern = 4;
     */
    RelationStatus[RelationStatus["relation_status_mutual_concern"] = 4] = "relation_status_mutual_concern";
    /**
     * @generated from protobuf enum value: relation_status_special = 5;
     */
    RelationStatus[RelationStatus["relation_status_special"] = 5] = "relation_status_special";
})(RelationStatus || (RelationStatus = {}));
/**
 * 评论类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.RepostType
 */
export var RepostType;
(function (RepostType) {
    /**
     * 热门评论
     *
     * @generated from protobuf enum value: repost_hot = 0;
     */
    RepostType[RepostType["repost_hot"] = 0] = "repost_hot";
    /**
     * 普通评论
     *
     * @generated from protobuf enum value: repost_general = 1;
     */
    RepostType[RepostType["repost_general"] = 1] = "repost_general";
})(RepostType || (RepostType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.ReserveRelationLotteryType
 */
export var ReserveRelationLotteryType;
(function (ReserveRelationLotteryType) {
    /**
     * @generated from protobuf enum value: reserve_relation_lottery_type_default = 0;
     */
    ReserveRelationLotteryType[ReserveRelationLotteryType["reserve_relation_lottery_type_default"] = 0] = "reserve_relation_lottery_type_default";
    /**
     * @generated from protobuf enum value: reserve_relation_lottery_type_cron = 1;
     */
    ReserveRelationLotteryType[ReserveRelationLotteryType["reserve_relation_lottery_type_cron"] = 1] = "reserve_relation_lottery_type_cron";
})(ReserveRelationLotteryType || (ReserveRelationLotteryType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.ReserveType
 */
export var ReserveType;
(function (ReserveType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: reserve_none = 0;
     */
    ReserveType[ReserveType["reserve_none"] = 0] = "reserve_none";
    /**
     * 预约召回
     *
     * @generated from protobuf enum value: reserve_recall = 1;
     */
    ReserveType[ReserveType["reserve_recall"] = 1] = "reserve_recall";
})(ReserveType || (ReserveType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.ShowType
 */
export var ShowType;
(function (ShowType) {
    /**
     * @generated from protobuf enum value: show_type_none = 0;
     */
    ShowType[ShowType["show_type_none"] = 0] = "show_type_none";
    /**
     * @generated from protobuf enum value: show_type_backup = 1;
     */
    ShowType[ShowType["show_type_backup"] = 1] = "show_type_backup";
})(ShowType || (ShowType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.StyleType
 */
export var StyleType;
(function (StyleType) {
    /**
     * @generated from protobuf enum value: STYLE_TYPE_NONE = 0;
     */
    StyleType[StyleType["NONE"] = 0] = "NONE";
    /**
     * @generated from protobuf enum value: STYLE_TYPE_LIVE = 1;
     */
    StyleType[StyleType["LIVE"] = 1] = "LIVE";
    /**
     * @generated from protobuf enum value: STYLE_TYPE_DYN_UP = 2;
     */
    StyleType[StyleType["DYN_UP"] = 2] = "DYN_UP";
})(StyleType || (StyleType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.TFType
 */
export var TFType;
(function (TFType) {
    /**
     * @generated from protobuf enum value: U_CARD = 0;
     */
    TFType[TFType["U_CARD"] = 0] = "U_CARD";
    /**
     * @generated from protobuf enum value: U_PKG = 1;
     */
    TFType[TFType["U_PKG"] = 1] = "U_PKG";
    /**
     * @generated from protobuf enum value: C_CARD = 2;
     */
    TFType[TFType["C_CARD"] = 2] = "C_CARD";
    /**
     * @generated from protobuf enum value: C_PKG = 3;
     */
    TFType[TFType["C_PKG"] = 3] = "C_PKG";
    /**
     * @generated from protobuf enum value: T_CARD = 4;
     */
    TFType[TFType["T_CARD"] = 4] = "T_CARD";
    /**
     * @generated from protobuf enum value: T_PKG = 5;
     */
    TFType[TFType["T_PKG"] = 5] = "T_PKG";
})(TFType || (TFType = {}));
/**
 * 枚举-三点关注状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ThreePointAttentionStatus
 */
export var ThreePointAttentionStatus;
(function (ThreePointAttentionStatus) {
    /**
     * @generated from protobuf enum value: tp_not_attention = 0;
     */
    ThreePointAttentionStatus[ThreePointAttentionStatus["tp_not_attention"] = 0] = "tp_not_attention";
    /**
     * @generated from protobuf enum value: tp_attention = 1;
     */
    ThreePointAttentionStatus[ThreePointAttentionStatus["tp_attention"] = 1] = "tp_attention";
})(ThreePointAttentionStatus || (ThreePointAttentionStatus = {}));
/**
 * 三点类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.ThreePointType
 */
export var ThreePointType;
(function (ThreePointType) {
    /**
     * 占位
     *
     * @generated from protobuf enum value: tp_none = 0;
     */
    ThreePointType[ThreePointType["tp_none"] = 0] = "tp_none";
    /**
     * 使用此背景
     *
     * @generated from protobuf enum value: background = 1;
     */
    ThreePointType[ThreePointType["background"] = 1] = "background";
    /**
     * 自动播放
     *
     * @generated from protobuf enum value: auto_play = 2;
     */
    ThreePointType[ThreePointType["auto_play"] = 2] = "auto_play";
    /**
     * 分享
     *
     * @generated from protobuf enum value: share = 3;
     */
    ThreePointType[ThreePointType["share"] = 3] = "share";
    /**
     * 稍后再播
     *
     * @generated from protobuf enum value: wait = 4;
     */
    ThreePointType[ThreePointType["wait"] = 4] = "wait";
    /**
     * 关注
     *
     * @generated from protobuf enum value: attention = 5;
     */
    ThreePointType[ThreePointType["attention"] = 5] = "attention";
    /**
     * 举报
     *
     * @generated from protobuf enum value: report = 6;
     */
    ThreePointType[ThreePointType["report"] = 6] = "report";
    /**
     * 删除
     *
     * @generated from protobuf enum value: delete = 7;
     */
    ThreePointType[ThreePointType["delete"] = 7] = "delete";
    /**
     * 不感兴趣
     *
     * @generated from protobuf enum value: dislike = 8;
     */
    ThreePointType[ThreePointType["dislike"] = 8] = "dislike";
    /**
     * 收藏
     *
     * @generated from protobuf enum value: favorite = 9;
     */
    ThreePointType[ThreePointType["favorite"] = 9] = "favorite";
    /**
     * 置顶
     *
     * @generated from protobuf enum value: top = 10;
     */
    ThreePointType[ThreePointType["top"] = 10] = "top";
    /**
     * 评论
     *
     * @generated from protobuf enum value: comment = 11;
     */
    ThreePointType[ThreePointType["comment"] = 11] = "comment";
    /**
     * @generated from protobuf enum value: hide = 12;
     */
    ThreePointType[ThreePointType["hide"] = 12] = "hide";
    /**
     * @generated from protobuf enum value: campus_delete = 13;
     */
    ThreePointType[ThreePointType["campus_delete"] = 13] = "campus_delete";
    /**
     * @generated from protobuf enum value: topic_irrelevant = 14;
     */
    ThreePointType[ThreePointType["topic_irrelevant"] = 14] = "topic_irrelevant";
})(ThreePointType || (ThreePointType = {}));
/**
 * @generated from protobuf enum bilibili.app.dynamic.v2.ThumbType
 */
export var ThumbType;
(function (ThumbType) {
    /**
     * @generated from protobuf enum value: cancel = 0;
     */
    ThumbType[ThumbType["cancel"] = 0] = "cancel";
    /**
     * @generated from protobuf enum value: thumb = 1;
     */
    ThumbType[ThumbType["thumb"] = 1] = "thumb";
})(ThumbType || (ThumbType = {}));
/**
 * 状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.TopType
 */
export var TopType;
(function (TopType) {
    /**
     * 默认 置顶
     *
     * @generated from protobuf enum value: top_none = 0;
     */
    TopType[TopType["top_none"] = 0] = "top_none";
    /**
     * 取消置顶
     *
     * @generated from protobuf enum value: top_cancel = 1;
     */
    TopType[TopType["top_cancel"] = 1] = "top_cancel";
})(TopType || (TopType = {}));
/**
 * 用户类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.UserItemType
 */
export var UserItemType;
(function (UserItemType) {
    /**
     * @generated from protobuf enum value: user_item_type_none = 0;
     */
    UserItemType[UserItemType["user_item_type_none"] = 0] = "user_item_type_none";
    /**
     * @generated from protobuf enum value: user_item_type_live = 1;
     */
    UserItemType[UserItemType["user_item_type_live"] = 1] = "user_item_type_live";
    /**
     * @generated from protobuf enum value: user_item_type_live_custom = 2;
     */
    UserItemType[UserItemType["user_item_type_live_custom"] = 2] = "user_item_type_live_custom";
    /**
     * @generated from protobuf enum value: user_item_type_normal = 3;
     */
    UserItemType[UserItemType["user_item_type_normal"] = 3] = "user_item_type_normal";
    /**
     * @generated from protobuf enum value: user_item_type_extend = 4;
     */
    UserItemType[UserItemType["user_item_type_extend"] = 4] = "user_item_type_extend";
})(UserItemType || (UserItemType = {}));
/**
 * 番剧类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.VideoSubType
 */
export var VideoSubType;
(function (VideoSubType) {
    /**
     * 没有子类型
     *
     * @generated from protobuf enum value: VideoSubTypeNone = 0;
     */
    VideoSubType[VideoSubType["VideoSubTypeNone"] = 0] = "VideoSubTypeNone";
    /**
     * 番剧
     *
     * @generated from protobuf enum value: VideoSubTypeBangumi = 1;
     */
    VideoSubType[VideoSubType["VideoSubTypeBangumi"] = 1] = "VideoSubTypeBangumi";
    /**
     * 电影
     *
     * @generated from protobuf enum value: VideoSubTypeMovie = 2;
     */
    VideoSubType[VideoSubType["VideoSubTypeMovie"] = 2] = "VideoSubTypeMovie";
    /**
     * 纪录片
     *
     * @generated from protobuf enum value: VideoSubTypeDocumentary = 3;
     */
    VideoSubType[VideoSubType["VideoSubTypeDocumentary"] = 3] = "VideoSubTypeDocumentary";
    /**
     * 国创
     *
     * @generated from protobuf enum value: VideoSubTypeDomestic = 4;
     */
    VideoSubType[VideoSubType["VideoSubTypeDomestic"] = 4] = "VideoSubTypeDomestic";
    /**
     * 电视剧
     *
     * @generated from protobuf enum value: VideoSubTypeTeleplay = 5;
     */
    VideoSubType[VideoSubType["VideoSubTypeTeleplay"] = 5] = "VideoSubTypeTeleplay";
})(VideoSubType || (VideoSubType = {}));
/**
 * 视频类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.VideoType
 */
export var VideoType;
(function (VideoType) {
    /**
     * 普通视频
     *
     * @generated from protobuf enum value: video_type_general = 0;
     */
    VideoType[VideoType["video_type_general"] = 0] = "video_type_general";
    /**
     * 动态视频
     *
     * @generated from protobuf enum value: video_type_dynamic = 1;
     */
    VideoType[VideoType["video_type_dynamic"] = 1] = "video_type_dynamic";
    /**
     * 直播回放视频
     *
     * @generated from protobuf enum value: video_type_playback = 2;
     */
    VideoType[VideoType["video_type_playback"] = 2] = "video_type_playback";
    /**
     * @generated from protobuf enum value: video_type_story = 3;
     */
    VideoType[VideoType["video_type_story"] = 3] = "video_type_story";
})(VideoType || (VideoType = {}));
/**
 * 状态
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.VoteStatus
 */
export var VoteStatus;
(function (VoteStatus) {
    /**
     * 正常
     *
     * @generated from protobuf enum value: normal = 0;
     */
    VoteStatus[VoteStatus["normal"] = 0] = "normal";
    /**
     * 匿名
     *
     * @generated from protobuf enum value: anonymous = 1;
     */
    VoteStatus[VoteStatus["anonymous"] = 1] = "anonymous";
})(VoteStatus || (VoteStatus = {}));
/**
 * 枚举-提权类型
 *
 * @generated from protobuf enum bilibili.app.dynamic.v2.WeightType
 */
export var WeightType;
(function (WeightType) {
    /**
     * 默认 占位
     *
     * @generated from protobuf enum value: weight_none = 0;
     */
    WeightType[WeightType["weight_none"] = 0] = "weight_none";
    /**
     * 不感兴趣
     *
     * @generated from protobuf enum value: weight_dislike = 1;
     */
    WeightType[WeightType["weight_dislike"] = 1] = "weight_dislike";
    /**
     * 跳链
     *
     * @generated from protobuf enum value: weight_jump = 2;
     */
    WeightType[WeightType["weight_jump"] = 2] = "weight_jump";
})(WeightType || (WeightType = {}));
// @generated message type with reflection information, may provide speed optimized methods
class AdParam$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdParam", [
            { no: 1, name: "ad_extra", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "request_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { adExtra: "", requestId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string ad_extra */ 1:
                    message.adExtra = reader.string();
                    break;
                case /* string request_id */ 2:
                    message.requestId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string ad_extra = 1; */
        if (message.adExtra !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.adExtra);
        /* string request_id = 2; */
        if (message.requestId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.requestId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdParam
 */
export const AdParam = new AdParam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionCommon$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionCommon", [
            { no: 1, name: "head_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "desc_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 8, name: "head_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ImageStyle", ImageStyle] },
            { no: 10, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { headText: "", title: "", imageUrl: "", descText1: "", descText2: "", url: "", headIcon: "", style: 0, type: "", cardType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string head_text */ 1:
                    message.headText = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string image_url */ 3:
                    message.imageUrl = reader.string();
                    break;
                case /* string desc_text_1 */ 4:
                    message.descText1 = reader.string();
                    break;
                case /* string desc_text_2 */ 5:
                    message.descText2 = reader.string();
                    break;
                case /* string url */ 6:
                    message.url = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 7:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string head_icon */ 8:
                    message.headIcon = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ImageStyle style */ 9:
                    message.style = reader.int32();
                    break;
                case /* string type */ 10:
                    message.type = reader.string();
                    break;
                case /* string card_type */ 11:
                    message.cardType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string head_text = 1; */
        if (message.headText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.headText);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string image_url = 3; */
        if (message.imageUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.imageUrl);
        /* string desc_text_1 = 4; */
        if (message.descText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.descText1);
        /* string desc_text_2 = 5; */
        if (message.descText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText2);
        /* string url = 6; */
        if (message.url !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.url);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 7; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string head_icon = 8; */
        if (message.headIcon !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.headIcon);
        /* bilibili.app.dynamic.v2.ImageStyle style = 9; */
        if (message.style !== 0)
            writer.tag(9, WireType.Varint).int32(message.style);
        /* string type = 10; */
        if (message.type !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.type);
        /* string card_type = 11; */
        if (message.cardType !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.cardType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionCommon
 */
export const AdditionCommon = new AdditionCommon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionEsport$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionEsport", [
            { no: 1, name: "style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.EspaceStyle", EspaceStyle] },
            { no: 2, name: "addition_esport_moba", kind: "message", oneof: "item", T: () => AdditionEsportMoba },
            { no: 3, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { style: 0, item: { oneofKind: undefined }, type: "", cardType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.EspaceStyle style */ 1:
                    message.style = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionEsportMoba addition_esport_moba */ 2:
                    message.item = {
                        oneofKind: "additionEsportMoba",
                        additionEsportMoba: AdditionEsportMoba.internalBinaryRead(reader, reader.uint32(), options, message.item.additionEsportMoba)
                    };
                    break;
                case /* string type */ 3:
                    message.type = reader.string();
                    break;
                case /* string card_type */ 4:
                    message.cardType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.EspaceStyle style = 1; */
        if (message.style !== 0)
            writer.tag(1, WireType.Varint).int32(message.style);
        /* bilibili.app.dynamic.v2.AdditionEsportMoba addition_esport_moba = 2; */
        if (message.item.oneofKind === "additionEsportMoba")
            AdditionEsportMoba.internalBinaryWrite(message.item.additionEsportMoba, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string type = 3; */
        if (message.type !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.type);
        /* string card_type = 4; */
        if (message.cardType !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.cardType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionEsport
 */
export const AdditionEsport = new AdditionEsport$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionEsportMoba$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionEsportMoba", [
            { no: 1, name: "head_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "match_team", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MatchTeam },
            { no: 4, name: "addition_esport_moba_status", kind: "message", T: () => AdditionEsportMobaStatus },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 7, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "head_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { headText: "", title: "", matchTeam: [], uri: "", subTitle: "", type: "", cardType: "", headIcon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string head_text */ 1:
                    message.headText = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.MatchTeam match_team */ 3:
                    message.matchTeam.push(MatchTeam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.AdditionEsportMobaStatus addition_esport_moba_status */ 4:
                    message.additionEsportMobaStatus = AdditionEsportMobaStatus.internalBinaryRead(reader, reader.uint32(), options, message.additionEsportMobaStatus);
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 6:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string sub_title */ 7:
                    message.subTitle = reader.string();
                    break;
                case /* string type */ 10:
                    message.type = reader.string();
                    break;
                case /* string card_type */ 11:
                    message.cardType = reader.string();
                    break;
                case /* string head_icon */ 12:
                    message.headIcon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string head_text = 1; */
        if (message.headText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.headText);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.MatchTeam match_team = 3; */
        for (let i = 0; i < message.matchTeam.length; i++)
            MatchTeam.internalBinaryWrite(message.matchTeam[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionEsportMobaStatus addition_esport_moba_status = 4; */
        if (message.additionEsportMobaStatus)
            AdditionEsportMobaStatus.internalBinaryWrite(message.additionEsportMobaStatus, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 6; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string sub_title = 7; */
        if (message.subTitle !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.subTitle);
        /* string type = 10; */
        if (message.type !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.type);
        /* string card_type = 11; */
        if (message.cardType !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.cardType);
        /* string head_icon = 12; */
        if (message.headIcon !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.headIcon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionEsportMoba
 */
export const AdditionEsportMoba = new AdditionEsportMoba$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionEsportMobaStatus$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionEsportMobaStatus", [
            { no: 1, name: "addition_esport_moba_status_desc", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AdditionEsportMobaStatusDesc },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "night_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { additionEsportMobaStatusDesc: [], title: "", status: 0, color: "", nightColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc addition_esport_moba_status_desc */ 1:
                    message.additionEsportMobaStatusDesc.push(AdditionEsportMobaStatusDesc.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int32 status */ 3:
                    message.status = reader.int32();
                    break;
                case /* string color */ 4:
                    message.color = reader.string();
                    break;
                case /* string night_color */ 5:
                    message.nightColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc addition_esport_moba_status_desc = 1; */
        for (let i = 0; i < message.additionEsportMobaStatusDesc.length; i++)
            AdditionEsportMobaStatusDesc.internalBinaryWrite(message.additionEsportMobaStatusDesc[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int32 status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        /* string color = 4; */
        if (message.color !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.color);
        /* string night_color = 5; */
        if (message.nightColor !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.nightColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionEsportMobaStatus
 */
export const AdditionEsportMobaStatus = new AdditionEsportMobaStatus$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionEsportMobaStatusDesc$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "night_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", color: "", nightColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string color */ 2:
                    message.color = reader.string();
                    break;
                case /* string night_color */ 3:
                    message.nightColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string color = 2; */
        if (message.color !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.color);
        /* string night_color = 3; */
        if (message.nightColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.nightColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionEsportMobaStatusDesc
 */
export const AdditionEsportMobaStatusDesc = new AdditionEsportMobaStatusDesc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionGoods$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionGoods", [
            { no: 1, name: "rcmd_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "goods_items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => GoodsItem },
            { no: 3, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "source_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { rcmdDesc: "", goodsItems: [], cardType: "", icon: "", uri: "", sourceType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string rcmd_desc */ 1:
                    message.rcmdDesc = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.GoodsItem goods_items */ 2:
                    message.goodsItems.push(GoodsItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string card_type */ 3:
                    message.cardType = reader.string();
                    break;
                case /* string icon */ 4:
                    message.icon = reader.string();
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* int32 source_type */ 6:
                    message.sourceType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string rcmd_desc = 1; */
        if (message.rcmdDesc !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rcmdDesc);
        /* repeated bilibili.app.dynamic.v2.GoodsItem goods_items = 2; */
        for (let i = 0; i < message.goodsItems.length; i++)
            GoodsItem.internalBinaryWrite(message.goodsItems[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string card_type = 3; */
        if (message.cardType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cardType);
        /* string icon = 4; */
        if (message.icon !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.icon);
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* int32 source_type = 6; */
        if (message.sourceType !== 0)
            writer.tag(6, WireType.Varint).int32(message.sourceType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionGoods
 */
export const AdditionGoods = new AdditionGoods$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionUP$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionUP", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc_text_1", kind: "message", T: () => HighlightText },
            { no: 3, name: "desc_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 6, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "reserve_total", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "act_skin", kind: "message", T: () => AdditionalActSkin },
            { no: 9, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "lottery_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "desc_text3", kind: "message", T: () => HighlightText },
            { no: 12, name: "up_mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "user_info", kind: "message", T: () => AdditionUserInfo },
            { no: 14, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "show_text2", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 16, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "business_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", descText2: "", url: "", cardType: "", reserveTotal: 0n, rid: 0n, lotteryType: 0, upMid: 0n, dynamicId: "", showText2: false, dynType: 0n, businessId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.HighlightText desc_text_1 */ 2:
                    message.descText1 = HighlightText.internalBinaryRead(reader, reader.uint32(), options, message.descText1);
                    break;
                case /* string desc_text_2 */ 3:
                    message.descText2 = reader.string();
                    break;
                case /* string url */ 4:
                    message.url = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 5:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string card_type */ 6:
                    message.cardType = reader.string();
                    break;
                case /* int64 reserve_total */ 7:
                    message.reserveTotal = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalActSkin act_skin */ 8:
                    message.actSkin = AdditionalActSkin.internalBinaryRead(reader, reader.uint32(), options, message.actSkin);
                    break;
                case /* int64 rid */ 9:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* int32 lottery_type */ 10:
                    message.lotteryType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.HighlightText desc_text3 */ 11:
                    message.descText3 = HighlightText.internalBinaryRead(reader, reader.uint32(), options, message.descText3);
                    break;
                case /* int64 up_mid */ 12:
                    message.upMid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionUserInfo user_info */ 13:
                    message.userInfo = AdditionUserInfo.internalBinaryRead(reader, reader.uint32(), options, message.userInfo);
                    break;
                case /* string dynamic_id */ 14:
                    message.dynamicId = reader.string();
                    break;
                case /* bool show_text2 */ 15:
                    message.showText2 = reader.bool();
                    break;
                case /* int64 dyn_type */ 16:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* string business_id */ 17:
                    message.businessId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.HighlightText desc_text_1 = 2; */
        if (message.descText1)
            HighlightText.internalBinaryWrite(message.descText1, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string desc_text_2 = 3; */
        if (message.descText2 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.descText2);
        /* string url = 4; */
        if (message.url !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.url);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 5; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string card_type = 6; */
        if (message.cardType !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.cardType);
        /* int64 reserve_total = 7; */
        if (message.reserveTotal !== 0n)
            writer.tag(7, WireType.Varint).int64(message.reserveTotal);
        /* bilibili.app.dynamic.v2.AdditionalActSkin act_skin = 8; */
        if (message.actSkin)
            AdditionalActSkin.internalBinaryWrite(message.actSkin, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int64 rid = 9; */
        if (message.rid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.rid);
        /* int32 lottery_type = 10; */
        if (message.lotteryType !== 0)
            writer.tag(10, WireType.Varint).int32(message.lotteryType);
        /* bilibili.app.dynamic.v2.HighlightText desc_text3 = 11; */
        if (message.descText3)
            HighlightText.internalBinaryWrite(message.descText3, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* int64 up_mid = 12; */
        if (message.upMid !== 0n)
            writer.tag(12, WireType.Varint).int64(message.upMid);
        /* bilibili.app.dynamic.v2.AdditionUserInfo user_info = 13; */
        if (message.userInfo)
            AdditionUserInfo.internalBinaryWrite(message.userInfo, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* string dynamic_id = 14; */
        if (message.dynamicId !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.dynamicId);
        /* bool show_text2 = 15; */
        if (message.showText2 !== false)
            writer.tag(15, WireType.Varint).bool(message.showText2);
        /* int64 dyn_type = 16; */
        if (message.dynType !== 0n)
            writer.tag(16, WireType.Varint).int64(message.dynType);
        /* string business_id = 17; */
        if (message.businessId !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.businessId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionUP
 */
export const AdditionUP = new AdditionUP$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionUgc$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionUgc", [
            { no: 1, name: "head_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "desc_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "duration", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "line_feed", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { headText: "", title: "", cover: "", descText1: "", descText2: "", uri: "", duration: "", lineFeed: false, cardType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string head_text */ 1:
                    message.headText = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                case /* string desc_text_1 */ 4:
                    message.descText1 = reader.string();
                    break;
                case /* string desc_text_2 */ 5:
                    message.descText2 = reader.string();
                    break;
                case /* string uri */ 6:
                    message.uri = reader.string();
                    break;
                case /* string duration */ 7:
                    message.duration = reader.string();
                    break;
                case /* bool line_feed */ 8:
                    message.lineFeed = reader.bool();
                    break;
                case /* string card_type */ 9:
                    message.cardType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string head_text = 1; */
        if (message.headText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.headText);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        /* string desc_text_1 = 4; */
        if (message.descText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.descText1);
        /* string desc_text_2 = 5; */
        if (message.descText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText2);
        /* string uri = 6; */
        if (message.uri !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.uri);
        /* string duration = 7; */
        if (message.duration !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.duration);
        /* bool line_feed = 8; */
        if (message.lineFeed !== false)
            writer.tag(8, WireType.Varint).bool(message.lineFeed);
        /* string card_type = 9; */
        if (message.cardType !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.cardType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionUgc
 */
export const AdditionUgc = new AdditionUgc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionUserInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionUserInfo", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { name: "", face: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string face */ 2:
                    message.face = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string face = 2; */
        if (message.face !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.face);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionUserInfo
 */
export const AdditionUserInfo = new AdditionUserInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVote$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVote", [
            { no: 1, name: "image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "button_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { imageUrl: "", title: "", text1: "", buttonText: "", url: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string image_url */ 1:
                    message.imageUrl = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string text_1 */ 3:
                    message.text1 = reader.string();
                    break;
                case /* string button_text */ 4:
                    message.buttonText = reader.string();
                    break;
                case /* string url */ 5:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string image_url = 1; */
        if (message.imageUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.imageUrl);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string text_1 = 3; */
        if (message.text1 !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.text1);
        /* string button_text = 4; */
        if (message.buttonText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.buttonText);
        /* string url = 5; */
        if (message.url !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVote
 */
export const AdditionVote = new AdditionVote$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVote2$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVote2", [
            { no: 1, name: "addition_vote_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionVoteType", AdditionVoteType] },
            { no: 2, name: "vote_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "deadline", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "open_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "close_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "voted_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionVoteState", AdditionVoteState] },
            { no: 10, name: "addition_vote_word", kind: "message", oneof: "item", T: () => AdditionVoteWord },
            { no: 11, name: "addition_vote_pic", kind: "message", oneof: "item", T: () => AdditionVotePic },
            { no: 12, name: "addition_vote_defaule", kind: "message", oneof: "item", T: () => AdditionVoteDefaule },
            { no: 13, name: "biz_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "total", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "tips", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 17, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "is_voted", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 19, name: "choice_cnt", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 20, name: "defaule_select_share", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { additionVoteType: 0, voteId: 0n, title: "", label: "", deadline: 0n, openText: "", closeText: "", votedText: "", state: 0, item: { oneofKind: undefined }, bizType: 0, total: 0n, cardType: "", tips: "", uri: "", isVoted: false, choiceCnt: 0, defauleSelectShare: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AdditionVoteType addition_vote_type */ 1:
                    message.additionVoteType = reader.int32();
                    break;
                case /* int64 vote_id */ 2:
                    message.voteId = reader.int64().toBigInt();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string label */ 4:
                    message.label = reader.string();
                    break;
                case /* int64 deadline */ 5:
                    message.deadline = reader.int64().toBigInt();
                    break;
                case /* string open_text */ 6:
                    message.openText = reader.string();
                    break;
                case /* string close_text */ 7:
                    message.closeText = reader.string();
                    break;
                case /* string voted_text */ 8:
                    message.votedText = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVoteState state */ 9:
                    message.state = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVoteWord addition_vote_word */ 10:
                    message.item = {
                        oneofKind: "additionVoteWord",
                        additionVoteWord: AdditionVoteWord.internalBinaryRead(reader, reader.uint32(), options, message.item.additionVoteWord)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVotePic addition_vote_pic */ 11:
                    message.item = {
                        oneofKind: "additionVotePic",
                        additionVotePic: AdditionVotePic.internalBinaryRead(reader, reader.uint32(), options, message.item.additionVotePic)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVoteDefaule addition_vote_defaule */ 12:
                    message.item = {
                        oneofKind: "additionVoteDefaule",
                        additionVoteDefaule: AdditionVoteDefaule.internalBinaryRead(reader, reader.uint32(), options, message.item.additionVoteDefaule)
                    };
                    break;
                case /* int32 biz_type */ 13:
                    message.bizType = reader.int32();
                    break;
                case /* int64 total */ 14:
                    message.total = reader.int64().toBigInt();
                    break;
                case /* string card_type */ 15:
                    message.cardType = reader.string();
                    break;
                case /* string tips */ 16:
                    message.tips = reader.string();
                    break;
                case /* string uri */ 17:
                    message.uri = reader.string();
                    break;
                case /* bool is_voted */ 18:
                    message.isVoted = reader.bool();
                    break;
                case /* int32 choice_cnt */ 19:
                    message.choiceCnt = reader.int32();
                    break;
                case /* bool defaule_select_share */ 20:
                    message.defauleSelectShare = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AdditionVoteType addition_vote_type = 1; */
        if (message.additionVoteType !== 0)
            writer.tag(1, WireType.Varint).int32(message.additionVoteType);
        /* int64 vote_id = 2; */
        if (message.voteId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.voteId);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string label = 4; */
        if (message.label !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.label);
        /* int64 deadline = 5; */
        if (message.deadline !== 0n)
            writer.tag(5, WireType.Varint).int64(message.deadline);
        /* string open_text = 6; */
        if (message.openText !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.openText);
        /* string close_text = 7; */
        if (message.closeText !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.closeText);
        /* string voted_text = 8; */
        if (message.votedText !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.votedText);
        /* bilibili.app.dynamic.v2.AdditionVoteState state = 9; */
        if (message.state !== 0)
            writer.tag(9, WireType.Varint).int32(message.state);
        /* bilibili.app.dynamic.v2.AdditionVoteWord addition_vote_word = 10; */
        if (message.item.oneofKind === "additionVoteWord")
            AdditionVoteWord.internalBinaryWrite(message.item.additionVoteWord, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionVotePic addition_vote_pic = 11; */
        if (message.item.oneofKind === "additionVotePic")
            AdditionVotePic.internalBinaryWrite(message.item.additionVotePic, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionVoteDefaule addition_vote_defaule = 12; */
        if (message.item.oneofKind === "additionVoteDefaule")
            AdditionVoteDefaule.internalBinaryWrite(message.item.additionVoteDefaule, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* int32 biz_type = 13; */
        if (message.bizType !== 0)
            writer.tag(13, WireType.Varint).int32(message.bizType);
        /* int64 total = 14; */
        if (message.total !== 0n)
            writer.tag(14, WireType.Varint).int64(message.total);
        /* string card_type = 15; */
        if (message.cardType !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.cardType);
        /* string tips = 16; */
        if (message.tips !== "")
            writer.tag(16, WireType.LengthDelimited).string(message.tips);
        /* string uri = 17; */
        if (message.uri !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.uri);
        /* bool is_voted = 18; */
        if (message.isVoted !== false)
            writer.tag(18, WireType.Varint).bool(message.isVoted);
        /* int32 choice_cnt = 19; */
        if (message.choiceCnt !== 0)
            writer.tag(19, WireType.Varint).int32(message.choiceCnt);
        /* bool defaule_select_share = 20; */
        if (message.defauleSelectShare !== false)
            writer.tag(20, WireType.Varint).bool(message.defauleSelectShare);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVote2
 */
export const AdditionVote2 = new AdditionVote2$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVoteDefaule$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVoteDefaule", [
            { no: 1, name: "cover", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { cover: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string cover */ 1:
                    message.cover.push(reader.string());
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string cover = 1; */
        for (let i = 0; i < message.cover.length; i++)
            writer.tag(1, WireType.LengthDelimited).string(message.cover[i]);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVoteDefaule
 */
export const AdditionVoteDefaule = new AdditionVoteDefaule$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVotePic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVotePic", [
            { no: 1, name: "item", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AdditionVotePicItem }
        ]);
    }
    create(value) {
        const message = { item: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.AdditionVotePicItem item */ 1:
                    message.item.push(AdditionVotePicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.AdditionVotePicItem item = 1; */
        for (let i = 0; i < message.item.length; i++)
            AdditionVotePicItem.internalBinaryWrite(message.item[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVotePic
 */
export const AdditionVotePic = new AdditionVotePic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVotePicItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVotePicItem", [
            { no: 1, name: "opt_idx", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_vote", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "persent", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "is_max_option", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { optIdx: 0, cover: "", isVote: false, total: 0, persent: 0, title: "", isMaxOption: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 opt_idx */ 1:
                    message.optIdx = reader.int32();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bool is_vote */ 3:
                    message.isVote = reader.bool();
                    break;
                case /* int32 total */ 4:
                    message.total = reader.int32();
                    break;
                case /* double persent */ 5:
                    message.persent = reader.double();
                    break;
                case /* string title */ 6:
                    message.title = reader.string();
                    break;
                case /* bool is_max_option */ 7:
                    message.isMaxOption = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 opt_idx = 1; */
        if (message.optIdx !== 0)
            writer.tag(1, WireType.Varint).int32(message.optIdx);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bool is_vote = 3; */
        if (message.isVote !== false)
            writer.tag(3, WireType.Varint).bool(message.isVote);
        /* int32 total = 4; */
        if (message.total !== 0)
            writer.tag(4, WireType.Varint).int32(message.total);
        /* double persent = 5; */
        if (message.persent !== 0)
            writer.tag(5, WireType.Bit64).double(message.persent);
        /* string title = 6; */
        if (message.title !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.title);
        /* bool is_max_option = 7; */
        if (message.isMaxOption !== false)
            writer.tag(7, WireType.Varint).bool(message.isMaxOption);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVotePicItem
 */
export const AdditionVotePicItem = new AdditionVotePicItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVoteWord$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVoteWord", [
            { no: 1, name: "item", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AdditionVoteWordItem }
        ]);
    }
    create(value) {
        const message = { item: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.AdditionVoteWordItem item */ 1:
                    message.item.push(AdditionVoteWordItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.AdditionVoteWordItem item = 1; */
        for (let i = 0; i < message.item.length; i++)
            AdditionVoteWordItem.internalBinaryWrite(message.item[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVoteWord
 */
export const AdditionVoteWord = new AdditionVoteWord$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionVoteWordItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionVoteWordItem", [
            { no: 1, name: "opt_idx", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_vote", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "total", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "persent", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 6, name: "is_max_option", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { optIdx: 0, title: "", isVote: false, total: 0, persent: 0, isMaxOption: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 opt_idx */ 1:
                    message.optIdx = reader.int32();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* bool is_vote */ 3:
                    message.isVote = reader.bool();
                    break;
                case /* int32 total */ 4:
                    message.total = reader.int32();
                    break;
                case /* double persent */ 5:
                    message.persent = reader.double();
                    break;
                case /* bool is_max_option */ 6:
                    message.isMaxOption = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 opt_idx = 1; */
        if (message.optIdx !== 0)
            writer.tag(1, WireType.Varint).int32(message.optIdx);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* bool is_vote = 3; */
        if (message.isVote !== false)
            writer.tag(3, WireType.Varint).bool(message.isVote);
        /* int32 total = 4; */
        if (message.total !== 0)
            writer.tag(4, WireType.Varint).int32(message.total);
        /* double persent = 5; */
        if (message.persent !== 0)
            writer.tag(5, WireType.Bit64).double(message.persent);
        /* bool is_max_option = 6; */
        if (message.isMaxOption !== false)
            writer.tag(6, WireType.Varint).bool(message.isMaxOption);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionVoteWordItem
 */
export const AdditionVoteWordItem = new AdditionVoteWordItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalActSkin$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalActSkin", [
            { no: 1, name: "svga", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "last_image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "play_times", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { svga: "", lastImage: "", playTimes: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string svga */ 1:
                    message.svga = reader.string();
                    break;
                case /* string last_image */ 2:
                    message.lastImage = reader.string();
                    break;
                case /* int64 play_times */ 3:
                    message.playTimes = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string svga = 1; */
        if (message.svga !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.svga);
        /* string last_image = 2; */
        if (message.lastImage !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.lastImage);
        /* int64 play_times = 3; */
        if (message.playTimes !== 0n)
            writer.tag(3, WireType.Varint).int64(message.playTimes);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalActSkin
 */
export const AdditionalActSkin = new AdditionalActSkin$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalButton", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AddButtonType", AddButtonType] },
            { no: 2, name: "jump_style", kind: "message", T: () => AdditionalButtonStyle },
            { no: 3, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "uncheck", kind: "message", T: () => AdditionalButtonStyle },
            { no: 5, name: "check", kind: "message", T: () => AdditionalButtonStyle },
            { no: 6, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionalButtonStatus", AdditionalButtonStatus] },
            { no: 7, name: "click_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionalButtonClickType", AdditionalButtonClickType] }
        ]);
    }
    create(value) {
        const message = { type: 0, jumpUrl: "", status: 0, clickType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AddButtonType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonStyle jump_style */ 2:
                    message.jumpStyle = AdditionalButtonStyle.internalBinaryRead(reader, reader.uint32(), options, message.jumpStyle);
                    break;
                case /* string jump_url */ 3:
                    message.jumpUrl = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonStyle uncheck */ 4:
                    message.uncheck = AdditionalButtonStyle.internalBinaryRead(reader, reader.uint32(), options, message.uncheck);
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonStyle check */ 5:
                    message.check = AdditionalButtonStyle.internalBinaryRead(reader, reader.uint32(), options, message.check);
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonStatus status */ 6:
                    message.status = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonClickType click_type */ 7:
                    message.clickType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AddButtonType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.AdditionalButtonStyle jump_style = 2; */
        if (message.jumpStyle)
            AdditionalButtonStyle.internalBinaryWrite(message.jumpStyle, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string jump_url = 3; */
        if (message.jumpUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.jumpUrl);
        /* bilibili.app.dynamic.v2.AdditionalButtonStyle uncheck = 4; */
        if (message.uncheck)
            AdditionalButtonStyle.internalBinaryWrite(message.uncheck, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionalButtonStyle check = 5; */
        if (message.check)
            AdditionalButtonStyle.internalBinaryWrite(message.check, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionalButtonStatus status = 6; */
        if (message.status !== 0)
            writer.tag(6, WireType.Varint).int32(message.status);
        /* bilibili.app.dynamic.v2.AdditionalButtonClickType click_type = 7; */
        if (message.clickType !== 0)
            writer.tag(7, WireType.Varint).int32(message.clickType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalButton
 */
export const AdditionalButton = new AdditionalButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalButtonInteractive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalButtonInteractive", [
            { no: 1, name: "popups", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "confirm", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cancel", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { popups: "", confirm: "", cancel: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string popups */ 1:
                    message.popups = reader.string();
                    break;
                case /* string confirm */ 2:
                    message.confirm = reader.string();
                    break;
                case /* string cancel */ 3:
                    message.cancel = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string popups = 1; */
        if (message.popups !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.popups);
        /* string confirm = 2; */
        if (message.confirm !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.confirm);
        /* string cancel = 3; */
        if (message.cancel !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cancel);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalButtonInteractive
 */
export const AdditionalButtonInteractive = new AdditionalButtonInteractive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalButtonShare$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalButtonShare", [
            { no: 1, name: "show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { show: 0, icon: "", text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 show */ 1:
                    message.show = reader.int32();
                    break;
                case /* string icon */ 2:
                    message.icon = reader.string();
                    break;
                case /* string text */ 3:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 show = 1; */
        if (message.show !== 0)
            writer.tag(1, WireType.Varint).int32(message.show);
        /* string icon = 2; */
        if (message.icon !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.icon);
        /* string text = 3; */
        if (message.text !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalButtonShare
 */
export const AdditionalButtonShare = new AdditionalButtonShare$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalButtonStyle$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalButtonStyle", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "interactive", kind: "message", T: () => AdditionalButtonInteractive },
            { no: 4, name: "bg_style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AddButtonBgStyle", AddButtonBgStyle] },
            { no: 5, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "disable", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DisableState", DisableState] },
            { no: 7, name: "share", kind: "message", T: () => AdditionalButtonShare }
        ]);
    }
    create(value) {
        const message = { icon: "", text: "", bgStyle: 0, toast: "", disable: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonInteractive interactive */ 3:
                    message.interactive = AdditionalButtonInteractive.internalBinaryRead(reader, reader.uint32(), options, message.interactive);
                    break;
                case /* bilibili.app.dynamic.v2.AddButtonBgStyle bg_style */ 4:
                    message.bgStyle = reader.int32();
                    break;
                case /* string toast */ 5:
                    message.toast = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.DisableState disable */ 6:
                    message.disable = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButtonShare share */ 7:
                    message.share = AdditionalButtonShare.internalBinaryRead(reader, reader.uint32(), options, message.share);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* bilibili.app.dynamic.v2.AdditionalButtonInteractive interactive = 3; */
        if (message.interactive)
            AdditionalButtonInteractive.internalBinaryWrite(message.interactive, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AddButtonBgStyle bg_style = 4; */
        if (message.bgStyle !== 0)
            writer.tag(4, WireType.Varint).int32(message.bgStyle);
        /* string toast = 5; */
        if (message.toast !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.toast);
        /* bilibili.app.dynamic.v2.DisableState disable = 6; */
        if (message.disable !== 0)
            writer.tag(6, WireType.Varint).int32(message.disable);
        /* bilibili.app.dynamic.v2.AdditionalButtonShare share = 7; */
        if (message.share)
            AdditionalButtonShare.internalBinaryWrite(message.share, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalButtonStyle
 */
export const AdditionalButtonStyle = new AdditionalButtonStyle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AdditionalPGC$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AdditionalPGC", [
            { no: 1, name: "head_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "image_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "desc_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 8, name: "head_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ImageStyle", ImageStyle] },
            { no: 10, name: "type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { headText: "", title: "", imageUrl: "", descText1: "", descText2: "", url: "", headIcon: "", style: 0, type: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string head_text */ 1:
                    message.headText = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string image_url */ 3:
                    message.imageUrl = reader.string();
                    break;
                case /* string desc_text_1 */ 4:
                    message.descText1 = reader.string();
                    break;
                case /* string desc_text_2 */ 5:
                    message.descText2 = reader.string();
                    break;
                case /* string url */ 6:
                    message.url = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 7:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string head_icon */ 8:
                    message.headIcon = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ImageStyle style */ 9:
                    message.style = reader.int32();
                    break;
                case /* string type */ 10:
                    message.type = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string head_text = 1; */
        if (message.headText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.headText);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string image_url = 3; */
        if (message.imageUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.imageUrl);
        /* string desc_text_1 = 4; */
        if (message.descText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.descText1);
        /* string desc_text_2 = 5; */
        if (message.descText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText2);
        /* string url = 6; */
        if (message.url !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.url);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 7; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string head_icon = 8; */
        if (message.headIcon !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.headIcon);
        /* bilibili.app.dynamic.v2.ImageStyle style = 9; */
        if (message.style !== 0)
            writer.tag(9, WireType.Varint).int32(message.style);
        /* string type = 10; */
        if (message.type !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AdditionalPGC
 */
export const AdditionalPGC = new AdditionalPGC$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AlumniDynamicsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AlumniDynamicsReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { list: [], toast: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string toast */ 2:
                    message.toast = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string toast = 2; */
        if (message.toast !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.toast);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AlumniDynamicsReply
 */
export const AlumniDynamicsReply = new AlumniDynamicsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class AlumniDynamicsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.AlumniDynamicsReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "first_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, firstTime: 0, localTime: 0, page: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* int32 first_time */ 2:
                    message.firstTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 4:
                    message.localTime = reader.int32();
                    break;
                case /* int32 page */ 5:
                    message.page = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* int32 first_time = 2; */
        if (message.firstTime !== 0)
            writer.tag(2, WireType.Varint).int32(message.firstTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 4; */
        if (message.localTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.localTime);
        /* int32 page = 5; */
        if (message.page !== 0)
            writer.tag(5, WireType.Varint).int32(message.page);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.AlumniDynamicsReq
 */
export const AlumniDynamicsReq = new AlumniDynamicsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusBannerInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusBannerInfo", [
            { no: 1, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { image: "", jumpUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string image */ 1:
                    message.image = reader.string();
                    break;
                case /* string jump_url */ 2:
                    message.jumpUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string image = 1; */
        if (message.image !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.image);
        /* string jump_url = 2; */
        if (message.jumpUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.jumpUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusBannerInfo
 */
export const CampusBannerInfo = new CampusBannerInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusBillBoardReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusBillBoardReply", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "help_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "build_time", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "version_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OfficialItem },
            { no: 7, name: "share_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "bind_notice", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "update_toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", helpUri: "", campusName: "", buildTime: 0n, versionCode: "", list: [], shareUri: "", bindNotice: 0, updateToast: "", campusId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string help_uri */ 2:
                    message.helpUri = reader.string();
                    break;
                case /* string campus_name */ 3:
                    message.campusName = reader.string();
                    break;
                case /* int64 build_time */ 4:
                    message.buildTime = reader.int64().toBigInt();
                    break;
                case /* string version_code */ 5:
                    message.versionCode = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.OfficialItem list */ 6:
                    message.list.push(OfficialItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string share_uri */ 7:
                    message.shareUri = reader.string();
                    break;
                case /* int32 bind_notice */ 8:
                    message.bindNotice = reader.int32();
                    break;
                case /* string update_toast */ 9:
                    message.updateToast = reader.string();
                    break;
                case /* int64 campus_id */ 10:
                    message.campusId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string help_uri = 2; */
        if (message.helpUri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.helpUri);
        /* string campus_name = 3; */
        if (message.campusName !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.campusName);
        /* int64 build_time = 4; */
        if (message.buildTime !== 0n)
            writer.tag(4, WireType.Varint).int64(message.buildTime);
        /* string version_code = 5; */
        if (message.versionCode !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.versionCode);
        /* repeated bilibili.app.dynamic.v2.OfficialItem list = 6; */
        for (let i = 0; i < message.list.length; i++)
            OfficialItem.internalBinaryWrite(message.list[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string share_uri = 7; */
        if (message.shareUri !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.shareUri);
        /* int32 bind_notice = 8; */
        if (message.bindNotice !== 0)
            writer.tag(8, WireType.Varint).int32(message.bindNotice);
        /* string update_toast = 9; */
        if (message.updateToast !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.updateToast);
        /* int64 campus_id = 10; */
        if (message.campusId !== 0n)
            writer.tag(10, WireType.Varint).int64(message.campusId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusBillBoardReply
 */
export const CampusBillBoardReply = new CampusBillBoardReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusBillBoardReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusBillBoardReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "version_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, versionCode: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string version_code */ 2:
                    message.versionCode = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string version_code = 2; */
        if (message.versionCode !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.versionCode);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusBillBoardReq
 */
export const CampusBillBoardReq = new CampusBillBoardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusBillboardInternalReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusBillboardInternalReq", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "version_code", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, campusId: 0n, versionCode: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 campus_id */ 2:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string version_code */ 3:
                    message.versionCode = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* int64 campus_id = 2; */
        if (message.campusId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.campusId);
        /* string version_code = 3; */
        if (message.versionCode !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.versionCode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusBillboardInternalReq
 */
export const CampusBillboardInternalReq = new CampusBillboardInternalReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusFeedbackInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusFeedbackInfo", [
            { no: 1, name: "biz_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "biz_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { bizType: 0, bizId: 0n, campusId: 0n, reason: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 biz_type */ 1:
                    message.bizType = reader.int32();
                    break;
                case /* int64 biz_id */ 2:
                    message.bizId = reader.int64().toBigInt();
                    break;
                case /* int64 campus_id */ 3:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string reason */ 4:
                    message.reason = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 biz_type = 1; */
        if (message.bizType !== 0)
            writer.tag(1, WireType.Varint).int32(message.bizType);
        /* int64 biz_id = 2; */
        if (message.bizId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.bizId);
        /* int64 campus_id = 3; */
        if (message.campusId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.campusId);
        /* string reason = 4; */
        if (message.reason !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusFeedbackInfo
 */
export const CampusFeedbackInfo = new CampusFeedbackInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusFeedbackReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusFeedbackReply", [
            { no: 1, name: "message", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { message: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string message */ 1:
                    message.message = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string message = 1; */
        if (message.message !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.message);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusFeedbackReply
 */
export const CampusFeedbackReply = new CampusFeedbackReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusFeedbackReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusFeedbackReq", [
            { no: 1, name: "infos", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusFeedbackInfo },
            { no: 2, name: "from", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { infos: [], from: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.CampusFeedbackInfo infos */ 1:
                    message.infos.push(CampusFeedbackInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 from */ 2:
                    message.from = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.CampusFeedbackInfo infos = 1; */
        for (let i = 0; i < message.infos.length; i++)
            CampusFeedbackInfo.internalBinaryWrite(message.infos[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int32 from = 2; */
        if (message.from !== 0)
            writer.tag(2, WireType.Varint).int32(message.from);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusFeedbackReq
 */
export const CampusFeedbackReq = new CampusFeedbackReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusInfo", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "online", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", desc: "", online: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* string desc */ 3:
                    message.desc = reader.string();
                    break;
                case /* int64 online */ 4:
                    message.online = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* string desc = 3; */
        if (message.desc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.desc);
        /* int64 online = 4; */
        if (message.online !== 0n)
            writer.tag(4, WireType.Varint).int64(message.online);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusInfo
 */
export const CampusInfo = new CampusInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusLabel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusLabel", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", url: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string url */ 2:
                    message.url = reader.string();
                    break;
                case /* string desc */ 3:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string url = 2; */
        if (message.url !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        /* string desc = 3; */
        if (message.desc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusLabel
 */
export const CampusLabel = new CampusLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusMateLikeListReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusMateLikeListReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleAuthor }
        ]);
    }
    create(value) {
        const message = { list: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ModuleAuthor list */ 1:
                    message.list.push(ModuleAuthor.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ModuleAuthor list = 1; */
        for (let i = 0; i < message.list.length; i++)
            ModuleAuthor.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusMateLikeListReply
 */
export const CampusMateLikeListReply = new CampusMateLikeListReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusMateLikeListReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusMateLikeListReq", [
            { no: 1, name: "dynamic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { dynamicId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 dynamic_id */ 1:
                    message.dynamicId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 dynamic_id = 1; */
        if (message.dynamicId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.dynamicId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusMateLikeListReq
 */
export const CampusMateLikeListReq = new CampusMateLikeListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusNoticeInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusNoticeInfo", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "button", kind: "message", T: () => CampusLabel }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel button */ 3:
                    message.button = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* bilibili.app.dynamic.v2.CampusLabel button = 3; */
        if (message.button)
            CampusLabel.internalBinaryWrite(message.button, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusNoticeInfo
 */
export const CampusNoticeInfo = new CampusNoticeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdFeedReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdFeedReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "guide_bar", kind: "message", T: () => GuideBarInfo },
            { no: 4, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "update", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { list: [], toast: "", hasMore: false, update: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string toast */ 2:
                    message.toast = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.GuideBarInfo guide_bar */ 3:
                    message.guideBar = GuideBarInfo.internalBinaryRead(reader, reader.uint32(), options, message.guideBar);
                    break;
                case /* bool has_more */ 4:
                    message.hasMore = reader.bool();
                    break;
                case /* bool update */ 5:
                    message.update = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string toast = 2; */
        if (message.toast !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.toast);
        /* bilibili.app.dynamic.v2.GuideBarInfo guide_bar = 3; */
        if (message.guideBar)
            GuideBarInfo.internalBinaryWrite(message.guideBar, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bool has_more = 4; */
        if (message.hasMore !== false)
            writer.tag(4, WireType.Varint).bool(message.hasMore);
        /* bool update = 5; */
        if (message.update !== false)
            writer.tag(5, WireType.Varint).bool(message.update);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdFeedReply
 */
export const CampusRcmdFeedReply = new CampusRcmdFeedReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdFeedReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdFeedReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "first_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "scroll", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "view_dyn_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, firstTime: 0, localTime: 0, page: 0, scroll: 0, viewDynId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* int32 first_time */ 2:
                    message.firstTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 4:
                    message.localTime = reader.int32();
                    break;
                case /* int32 page */ 5:
                    message.page = reader.int32();
                    break;
                case /* int32 scroll */ 6:
                    message.scroll = reader.int32();
                    break;
                case /* string view_dyn_id */ 7:
                    message.viewDynId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* int32 first_time = 2; */
        if (message.firstTime !== 0)
            writer.tag(2, WireType.Varint).int32(message.firstTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 4; */
        if (message.localTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.localTime);
        /* int32 page = 5; */
        if (message.page !== 0)
            writer.tag(5, WireType.Varint).int32(message.page);
        /* int32 scroll = 6; */
        if (message.scroll !== 0)
            writer.tag(6, WireType.Varint).int32(message.scroll);
        /* string view_dyn_id = 7; */
        if (message.viewDynId !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.viewDynId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdFeedReq
 */
export const CampusRcmdFeedReq = new CampusRcmdFeedReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdInfo", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusRcmdItem }
        ]);
    }
    create(value) {
        const message = { title: "", items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.CampusRcmdItem items */ 2:
                    message.items.push(CampusRcmdItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.CampusRcmdItem items = 2; */
        for (let i = 0; i < message.items.length; i++)
            CampusRcmdItem.internalBinaryWrite(message.items[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdInfo
 */
export const CampusRcmdInfo = new CampusRcmdInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdItem", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RcmdItem },
            { no: 3, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "entry_label", kind: "message", T: () => CampusLabel }
        ]);
    }
    create(value) {
        const message = { title: "", items: [], campusId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.RcmdItem items */ 2:
                    message.items.push(RcmdItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 campus_id */ 3:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel entry_label */ 4:
                    message.entryLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.entryLabel);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.RcmdItem items = 2; */
        for (let i = 0; i < message.items.length; i++)
            RcmdItem.internalBinaryWrite(message.items[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int64 campus_id = 3; */
        if (message.campusId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.campusId);
        /* bilibili.app.dynamic.v2.CampusLabel entry_label = 4; */
        if (message.entryLabel)
            CampusLabel.internalBinaryWrite(message.entryLabel, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdItem
 */
export const CampusRcmdItem = new CampusRcmdItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdReply", [
            { no: 1, name: "top", kind: "message", T: () => CampusRcmdTop },
            { no: 2, name: "rcmd", kind: "message", T: () => CampusRcmdInfo },
            { no: 3, name: "campus_top", kind: "message", T: () => CampusTop },
            { no: 4, name: "page_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { pageType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.CampusRcmdTop top */ 1:
                    message.top = CampusRcmdTop.internalBinaryRead(reader, reader.uint32(), options, message.top);
                    break;
                case /* bilibili.app.dynamic.v2.CampusRcmdInfo rcmd */ 2:
                    message.rcmd = CampusRcmdInfo.internalBinaryRead(reader, reader.uint32(), options, message.rcmd);
                    break;
                case /* bilibili.app.dynamic.v2.CampusTop campus_top */ 3:
                    message.campusTop = CampusTop.internalBinaryRead(reader, reader.uint32(), options, message.campusTop);
                    break;
                case /* int32 page_type */ 4:
                    message.pageType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.CampusRcmdTop top = 1; */
        if (message.top)
            CampusRcmdTop.internalBinaryWrite(message.top, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusRcmdInfo rcmd = 2; */
        if (message.rcmd)
            CampusRcmdInfo.internalBinaryWrite(message.rcmd, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusTop campus_top = 3; */
        if (message.campusTop)
            CampusTop.internalBinaryWrite(message.campusTop, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 page_type = 4; */
        if (message.pageType !== 0)
            writer.tag(4, WireType.Varint).int32(message.pageType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdReply
 */
export const CampusRcmdReply = new CampusRcmdReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "lat", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 4, name: "lng", kind: "scalar", T: 1 /*ScalarType.DOUBLE*/ },
            { no: 5, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", lat: 0, lng: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* double lat */ 3:
                    message.lat = reader.double();
                    break;
                case /* double lng */ 4:
                    message.lng = reader.double();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 5:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* double lat = 3; */
        if (message.lat !== 0)
            writer.tag(3, WireType.Bit64).double(message.lat);
        /* double lng = 4; */
        if (message.lng !== 0)
            writer.tag(4, WireType.Bit64).double(message.lng);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 5; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdReq
 */
export const CampusRcmdReq = new CampusRcmdReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRcmdTop$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRcmdTop", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "button", kind: "message", T: () => RcmdTopButton },
            { no: 7, name: "switch_label", kind: "message", T: () => CampusLabel },
            { no: 8, name: "notice_label", kind: "message", T: () => CampusLabel },
            { no: 9, name: "desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "desc3", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "invite_label", kind: "message", T: () => CampusLabel },
            { no: 12, name: "reserve_label", kind: "message", T: () => CampusLabel },
            { no: 13, name: "reserve_number", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", title: "", desc: "", type: 0, desc2: "", desc3: "", reserveNumber: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                case /* int32 type */ 5:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.RcmdTopButton button */ 6:
                    message.button = RcmdTopButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel switch_label */ 7:
                    message.switchLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.switchLabel);
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel notice_label */ 8:
                    message.noticeLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.noticeLabel);
                    break;
                case /* string desc2 */ 9:
                    message.desc2 = reader.string();
                    break;
                case /* string desc3 */ 10:
                    message.desc3 = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel invite_label */ 11:
                    message.inviteLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.inviteLabel);
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel reserve_label */ 12:
                    message.reserveLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.reserveLabel);
                    break;
                case /* int64 reserve_number */ 13:
                    message.reserveNumber = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        /* int32 type = 5; */
        if (message.type !== 0)
            writer.tag(5, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.RcmdTopButton button = 6; */
        if (message.button)
            RcmdTopButton.internalBinaryWrite(message.button, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusLabel switch_label = 7; */
        if (message.switchLabel)
            CampusLabel.internalBinaryWrite(message.switchLabel, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusLabel notice_label = 8; */
        if (message.noticeLabel)
            CampusLabel.internalBinaryWrite(message.noticeLabel, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string desc2 = 9; */
        if (message.desc2 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.desc2);
        /* string desc3 = 10; */
        if (message.desc3 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.desc3);
        /* bilibili.app.dynamic.v2.CampusLabel invite_label = 11; */
        if (message.inviteLabel)
            CampusLabel.internalBinaryWrite(message.inviteLabel, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusLabel reserve_label = 12; */
        if (message.reserveLabel)
            CampusLabel.internalBinaryWrite(message.reserveLabel, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* int64 reserve_number = 13; */
        if (message.reserveNumber !== 0n)
            writer.tag(13, WireType.Varint).int64(message.reserveNumber);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRcmdTop
 */
export const CampusRcmdTop = new CampusRcmdTop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRedDotReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRedDotReply", [
            { no: 1, name: "red_dot", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { redDot: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 red_dot */ 1:
                    message.redDot = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 red_dot = 1; */
        if (message.redDot !== 0)
            writer.tag(1, WireType.Varint).int32(message.redDot);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRedDotReply
 */
export const CampusRedDotReply = new CampusRedDotReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusRedDotReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusRedDotReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusRedDotReq
 */
export const CampusRedDotReq = new CampusRedDotReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusShowTabInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusShowTabInfo", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "red_dot", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { name: "", url: "", type: 0, redDot: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string url */ 2:
                    message.url = reader.string();
                    break;
                case /* int32 type */ 3:
                    message.type = reader.int32();
                    break;
                case /* int32 red_dot */ 4:
                    message.redDot = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string url = 2; */
        if (message.url !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        /* int32 type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        /* int32 red_dot = 4; */
        if (message.redDot !== 0)
            writer.tag(4, WireType.Varint).int32(message.redDot);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusShowTabInfo
 */
export const CampusShowTabInfo = new CampusShowTabInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusTop$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusTop", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tabs", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusShowTabInfo },
            { no: 4, name: "switch_label", kind: "message", T: () => CampusLabel },
            { no: 5, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "banner", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusBannerInfo },
            { no: 7, name: "invite_label", kind: "message", T: () => CampusLabel },
            { no: 8, name: "notice", kind: "message", T: () => CampusNoticeInfo },
            { no: 9, name: "topic_square", kind: "message", T: () => TopicSquareInfo },
            { no: 10, name: "campus_badge", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "campus_background", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", tabs: [], title: "", banner: [], campusBadge: "", campusBackground: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.CampusShowTabInfo tabs */ 3:
                    message.tabs.push(CampusShowTabInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel switch_label */ 4:
                    message.switchLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.switchLabel);
                    break;
                case /* string title */ 5:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.CampusBannerInfo banner */ 6:
                    message.banner.push(CampusBannerInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel invite_label */ 7:
                    message.inviteLabel = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.inviteLabel);
                    break;
                case /* bilibili.app.dynamic.v2.CampusNoticeInfo notice */ 8:
                    message.notice = CampusNoticeInfo.internalBinaryRead(reader, reader.uint32(), options, message.notice);
                    break;
                case /* bilibili.app.dynamic.v2.TopicSquareInfo topic_square */ 9:
                    message.topicSquare = TopicSquareInfo.internalBinaryRead(reader, reader.uint32(), options, message.topicSquare);
                    break;
                case /* string campus_badge */ 10:
                    message.campusBadge = reader.string();
                    break;
                case /* string campus_background */ 11:
                    message.campusBackground = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* repeated bilibili.app.dynamic.v2.CampusShowTabInfo tabs = 3; */
        for (let i = 0; i < message.tabs.length; i++)
            CampusShowTabInfo.internalBinaryWrite(message.tabs[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusLabel switch_label = 4; */
        if (message.switchLabel)
            CampusLabel.internalBinaryWrite(message.switchLabel, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string title = 5; */
        if (message.title !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.CampusBannerInfo banner = 6; */
        for (let i = 0; i < message.banner.length; i++)
            CampusBannerInfo.internalBinaryWrite(message.banner[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusLabel invite_label = 7; */
        if (message.inviteLabel)
            CampusLabel.internalBinaryWrite(message.inviteLabel, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CampusNoticeInfo notice = 8; */
        if (message.notice)
            CampusNoticeInfo.internalBinaryWrite(message.notice, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopicSquareInfo topic_square = 9; */
        if (message.topicSquare)
            TopicSquareInfo.internalBinaryWrite(message.topicSquare, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* string campus_badge = 10; */
        if (message.campusBadge !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.campusBadge);
        /* string campus_background = 11; */
        if (message.campusBackground !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.campusBackground);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusTop
 */
export const CampusTop = new CampusTop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusTopicRcmdFeedReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { list: [], toast: "", hasMore: false, offset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string toast */ 2:
                    message.toast = reader.string();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                case /* string offset */ 4:
                    message.offset = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string toast = 2; */
        if (message.toast !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.toast);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        /* string offset = 4; */
        if (message.offset !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusTopicRcmdFeedReply
 */
export const CampusTopicRcmdFeedReply = new CampusTopicRcmdFeedReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CampusTopicRcmdFeedReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, offset: "", localTime: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 4:
                    message.localTime = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 4; */
        if (message.localTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.localTime);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CampusTopicRcmdFeedReq
 */
export const CampusTopicRcmdFeedReq = new CampusTopicRcmdFeedReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardVideoDynList$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CardVideoDynList", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "update_num", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "history_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "update_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { list: [], updateNum: 0n, historyOffset: "", updateBaseline: "", hasMore: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 update_num */ 2:
                    message.updateNum = reader.int64().toBigInt();
                    break;
                case /* string history_offset */ 3:
                    message.historyOffset = reader.string();
                    break;
                case /* string update_baseline */ 4:
                    message.updateBaseline = reader.string();
                    break;
                case /* bool has_more */ 5:
                    message.hasMore = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 update_num = 2; */
        if (message.updateNum !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updateNum);
        /* string history_offset = 3; */
        if (message.historyOffset !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.historyOffset);
        /* string update_baseline = 4; */
        if (message.updateBaseline !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.updateBaseline);
        /* bool has_more = 5; */
        if (message.hasMore !== false)
            writer.tag(5, WireType.Varint).bool(message.hasMore);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CardVideoDynList
 */
export const CardVideoDynList = new CardVideoDynList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardVideoFollowList$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CardVideoFollowList", [
            { no: 1, name: "view_all_link", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => FollowListItem }
        ]);
    }
    create(value) {
        const message = { viewAllLink: "", list: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string view_all_link */ 1:
                    message.viewAllLink = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.FollowListItem list */ 2:
                    message.list.push(FollowListItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string view_all_link = 1; */
        if (message.viewAllLink !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.viewAllLink);
        /* repeated bilibili.app.dynamic.v2.FollowListItem list = 2; */
        for (let i = 0; i < message.list.length; i++)
            FollowListItem.internalBinaryWrite(message.list[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CardVideoFollowList
 */
export const CardVideoFollowList = new CardVideoFollowList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CardVideoUpList$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CardVideoUpList", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UpListItem },
            { no: 3, name: "footprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "show_live_num", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "more_label", kind: "message", T: () => UpListMoreLabel },
            { no: 6, name: "title_switch", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "show_more_label", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 8, name: "show_in_personal", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "show_more_button", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { title: "", list: [], footprint: "", showLiveNum: 0, titleSwitch: 0, showMoreLabel: false, showInPersonal: false, showMoreButton: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.UpListItem list */ 2:
                    message.list.push(UpListItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string footprint */ 3:
                    message.footprint = reader.string();
                    break;
                case /* int32 show_live_num */ 4:
                    message.showLiveNum = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.UpListMoreLabel more_label */ 5:
                    message.moreLabel = UpListMoreLabel.internalBinaryRead(reader, reader.uint32(), options, message.moreLabel);
                    break;
                case /* int32 title_switch */ 6:
                    message.titleSwitch = reader.int32();
                    break;
                case /* bool show_more_label */ 7:
                    message.showMoreLabel = reader.bool();
                    break;
                case /* bool show_in_personal */ 8:
                    message.showInPersonal = reader.bool();
                    break;
                case /* bool show_more_button */ 9:
                    message.showMoreButton = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.UpListItem list = 2; */
        for (let i = 0; i < message.list.length; i++)
            UpListItem.internalBinaryWrite(message.list[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string footprint = 3; */
        if (message.footprint !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.footprint);
        /* int32 show_live_num = 4; */
        if (message.showLiveNum !== 0)
            writer.tag(4, WireType.Varint).int32(message.showLiveNum);
        /* bilibili.app.dynamic.v2.UpListMoreLabel more_label = 5; */
        if (message.moreLabel)
            UpListMoreLabel.internalBinaryWrite(message.moreLabel, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* int32 title_switch = 6; */
        if (message.titleSwitch !== 0)
            writer.tag(6, WireType.Varint).int32(message.titleSwitch);
        /* bool show_more_label = 7; */
        if (message.showMoreLabel !== false)
            writer.tag(7, WireType.Varint).bool(message.showMoreLabel);
        /* bool show_in_personal = 8; */
        if (message.showInPersonal !== false)
            writer.tag(8, WireType.Varint).bool(message.showInPersonal);
        /* bool show_more_button = 9; */
        if (message.showMoreButton !== false)
            writer.tag(9, WireType.Varint).bool(message.showMoreButton);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CardVideoUpList
 */
export const CardVideoUpList = new CardVideoUpList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ChannelInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ChannelInfo", [
            { no: 1, name: "channel_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "channel_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "is_atten", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "type_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RcmdItem },
            { no: 7, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { channelId: 0n, channelName: "", desc: "", isAtten: false, typeIcon: "", items: [], icon: "", jumpUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 channel_id */ 1:
                    message.channelId = reader.int64().toBigInt();
                    break;
                case /* string channel_name */ 2:
                    message.channelName = reader.string();
                    break;
                case /* string desc */ 3:
                    message.desc = reader.string();
                    break;
                case /* bool is_atten */ 4:
                    message.isAtten = reader.bool();
                    break;
                case /* string type_icon */ 5:
                    message.typeIcon = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.RcmdItem items */ 6:
                    message.items.push(RcmdItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string icon */ 7:
                    message.icon = reader.string();
                    break;
                case /* string jump_uri */ 8:
                    message.jumpUri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 channel_id = 1; */
        if (message.channelId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.channelId);
        /* string channel_name = 2; */
        if (message.channelName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.channelName);
        /* string desc = 3; */
        if (message.desc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.desc);
        /* bool is_atten = 4; */
        if (message.isAtten !== false)
            writer.tag(4, WireType.Varint).bool(message.isAtten);
        /* string type_icon = 5; */
        if (message.typeIcon !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.typeIcon);
        /* repeated bilibili.app.dynamic.v2.RcmdItem items = 6; */
        for (let i = 0; i < message.items.length; i++)
            RcmdItem.internalBinaryWrite(message.items[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string icon = 7; */
        if (message.icon !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.icon);
        /* string jump_uri = 8; */
        if (message.jumpUri !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.jumpUri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ChannelInfo
 */
export const ChannelInfo = new ChannelInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CmtShowItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CmtShowItem", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "comment", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { uid: 0n, uname: "", uri: "", comment: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string uname */ 2:
                    message.uname = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string comment */ 4:
                    message.comment = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* string uname = 2; */
        if (message.uname !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uname);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string comment = 4; */
        if (message.comment !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.comment);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CmtShowItem
 */
export const CmtShowItem = new CmtShowItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class CommentDetail$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.CommentDetail", [
            { no: 1, name: "can_modify", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "status", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { canModify: false, status: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool can_modify */ 1:
                    message.canModify = reader.bool();
                    break;
                case /* int64 status */ 2:
                    message.status = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool can_modify = 1; */
        if (message.canModify !== false)
            writer.tag(1, WireType.Varint).bool(message.canModify);
        /* int64 status = 2; */
        if (message.status !== 0n)
            writer.tag(2, WireType.Varint).int64(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.CommentDetail
 */
export const CommentDetail = new CommentDetail$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DecoCardFan$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DecoCardFan", [
            { no: 1, name: "is_fan", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "number", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "number_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { isFan: 0, number: 0, numberStr: "", color: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 is_fan */ 1:
                    message.isFan = reader.int32();
                    break;
                case /* int32 number */ 2:
                    message.number = reader.int32();
                    break;
                case /* string number_str */ 3:
                    message.numberStr = reader.string();
                    break;
                case /* string color */ 4:
                    message.color = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 is_fan = 1; */
        if (message.isFan !== 0)
            writer.tag(1, WireType.Varint).int32(message.isFan);
        /* int32 number = 2; */
        if (message.number !== 0)
            writer.tag(2, WireType.Varint).int32(message.number);
        /* string number_str = 3; */
        if (message.numberStr !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.numberStr);
        /* string color = 4; */
        if (message.color !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.color);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DecoCardFan
 */
export const DecoCardFan = new DecoCardFan$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DecorateCard$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DecorateCard", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "card_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fan", kind: "message", T: () => DecoCardFan }
        ]);
    }
    create(value) {
        const message = { id: 0n, cardUrl: "", jumpUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string card_url */ 2:
                    message.cardUrl = reader.string();
                    break;
                case /* string jump_url */ 3:
                    message.jumpUrl = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.DecoCardFan fan */ 4:
                    message.fan = DecoCardFan.internalBinaryRead(reader, reader.uint32(), options, message.fan);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string card_url = 2; */
        if (message.cardUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cardUrl);
        /* string jump_url = 3; */
        if (message.jumpUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.jumpUrl);
        /* bilibili.app.dynamic.v2.DecoCardFan fan = 4; */
        if (message.fan)
            DecoCardFan.internalBinaryWrite(message.fan, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DecorateCard
 */
export const DecorateCard = new DecorateCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Description$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Description", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DescType", DescType] },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "emoji_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.EmojiType", EmojiType] },
            { no: 5, name: "goods_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "icon_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "rid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "goods", kind: "message", T: () => ModuleDescGoods },
            { no: 10, name: "orig_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "emoji_size", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { text: "", type: 0, uri: "", emojiType: 0, goodsType: "", iconUrl: "", iconName: "", rid: "", origText: "", emojiSize: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.DescType type */ 2:
                    message.type = reader.int32();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.EmojiType emoji_type */ 4:
                    message.emojiType = reader.int32();
                    break;
                case /* string goods_type */ 5:
                    message.goodsType = reader.string();
                    break;
                case /* string icon_url */ 6:
                    message.iconUrl = reader.string();
                    break;
                case /* string icon_name */ 7:
                    message.iconName = reader.string();
                    break;
                case /* string rid */ 8:
                    message.rid = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleDescGoods goods */ 9:
                    message.goods = ModuleDescGoods.internalBinaryRead(reader, reader.uint32(), options, message.goods);
                    break;
                case /* string orig_text */ 10:
                    message.origText = reader.string();
                    break;
                case /* int32 emoji_size */ 11:
                    message.emojiSize = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* bilibili.app.dynamic.v2.DescType type = 2; */
        if (message.type !== 0)
            writer.tag(2, WireType.Varint).int32(message.type);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.EmojiType emoji_type = 4; */
        if (message.emojiType !== 0)
            writer.tag(4, WireType.Varint).int32(message.emojiType);
        /* string goods_type = 5; */
        if (message.goodsType !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.goodsType);
        /* string icon_url = 6; */
        if (message.iconUrl !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.iconUrl);
        /* string icon_name = 7; */
        if (message.iconName !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.iconName);
        /* string rid = 8; */
        if (message.rid !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.rid);
        /* bilibili.app.dynamic.v2.ModuleDescGoods goods = 9; */
        if (message.goods)
            ModuleDescGoods.internalBinaryWrite(message.goods, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* string orig_text = 10; */
        if (message.origText !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.origText);
        /* int32 emoji_size = 11; */
        if (message.emojiSize !== 0)
            writer.tag(11, WireType.Varint).int32(message.emojiSize);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Description
 */
export const Description = new Description$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Dimension$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Dimension", [
            { no: 1, name: "height", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "width", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rotate", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { height: 0n, width: 0n, rotate: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 height */ 1:
                    message.height = reader.int64().toBigInt();
                    break;
                case /* int64 width */ 2:
                    message.width = reader.int64().toBigInt();
                    break;
                case /* int64 rotate */ 3:
                    message.rotate = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 height = 1; */
        if (message.height !== 0n)
            writer.tag(1, WireType.Varint).int64(message.height);
        /* int64 width = 2; */
        if (message.width !== 0n)
            writer.tag(2, WireType.Varint).int64(message.width);
        /* int64 rotate = 3; */
        if (message.rotate !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rotate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Dimension
 */
export const Dimension = new Dimension$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAdditionCommonFollowReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAdditionCommonFollowReply", [
            { no: 1, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionalButtonStatus", AdditionalButtonStatus] }
        ]);
    }
    create(value) {
        const message = { status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AdditionalButtonStatus status */ 1:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AdditionalButtonStatus status = 1; */
        if (message.status !== 0)
            writer.tag(1, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAdditionCommonFollowReply
 */
export const DynAdditionCommonFollowReply = new DynAdditionCommonFollowReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAdditionCommonFollowReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAdditionCommonFollowReq", [
            { no: 1, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionalButtonStatus", AdditionalButtonStatus] },
            { no: 2, name: "dyn_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "card_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { status: 0, dynId: "", cardType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AdditionalButtonStatus status */ 1:
                    message.status = reader.int32();
                    break;
                case /* string dyn_id */ 2:
                    message.dynId = reader.string();
                    break;
                case /* string card_type */ 3:
                    message.cardType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AdditionalButtonStatus status = 1; */
        if (message.status !== 0)
            writer.tag(1, WireType.Varint).int32(message.status);
        /* string dyn_id = 2; */
        if (message.dynId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.dynId);
        /* string card_type = 3; */
        if (message.cardType !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cardType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAdditionCommonFollowReq
 */
export const DynAdditionCommonFollowReq = new DynAdditionCommonFollowReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAllPersonalReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAllPersonalReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "read_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "relation", kind: "message", T: () => Relation },
            { no: 6, name: "addition_up", kind: "message", T: () => TopAdditionUP }
        ]);
    }
    create(value) {
        const message = { list: [], offset: "", hasMore: false, readOffset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                case /* string read_offset */ 4:
                    message.readOffset = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 5:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* bilibili.app.dynamic.v2.TopAdditionUP addition_up */ 6:
                    message.additionUp = TopAdditionUP.internalBinaryRead(reader, reader.uint32(), options, message.additionUp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        /* string read_offset = 4; */
        if (message.readOffset !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.readOffset);
        /* bilibili.app.dynamic.v2.Relation relation = 5; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopAdditionUP addition_up = 6; */
        if (message.additionUp)
            TopAdditionUP.internalBinaryWrite(message.additionUp, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAllPersonalReply
 */
export const DynAllPersonalReply = new DynAllPersonalReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAllPersonalReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAllPersonalReq", [
            { no: 1, name: "host_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "is_preload", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "playurl_param", kind: "message", T: () => PlayurlParam },
            { no: 6, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "footprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { hostUid: 0n, offset: "", page: 0, isPreload: 0, localTime: 0, footprint: "", from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 host_uid */ 1:
                    message.hostUid = reader.int64().toBigInt();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* int32 page */ 3:
                    message.page = reader.int32();
                    break;
                case /* int32 is_preload */ 4:
                    message.isPreload = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.PlayurlParam playurl_param */ 5:
                    message.playurlParam = PlayurlParam.internalBinaryRead(reader, reader.uint32(), options, message.playurlParam);
                    break;
                case /* int32 local_time */ 6:
                    message.localTime = reader.int32();
                    break;
                case /* string footprint */ 7:
                    message.footprint = reader.string();
                    break;
                case /* string from */ 8:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 9:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 host_uid = 1; */
        if (message.hostUid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.hostUid);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* int32 page = 3; */
        if (message.page !== 0)
            writer.tag(3, WireType.Varint).int32(message.page);
        /* int32 is_preload = 4; */
        if (message.isPreload !== 0)
            writer.tag(4, WireType.Varint).int32(message.isPreload);
        /* bilibili.app.dynamic.v2.PlayurlParam playurl_param = 5; */
        if (message.playurlParam)
            PlayurlParam.internalBinaryWrite(message.playurlParam, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 6; */
        if (message.localTime !== 0)
            writer.tag(6, WireType.Varint).int32(message.localTime);
        /* string footprint = 7; */
        if (message.footprint !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.footprint);
        /* string from = 8; */
        if (message.from !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 9; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAllPersonalReq
 */
export const DynAllPersonalReq = new DynAllPersonalReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAllReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAllReply", [
            { no: 1, name: "dynamic_list", kind: "message", T: () => DynamicList },
            { no: 2, name: "up_list", kind: "message", T: () => CardVideoUpList },
            { no: 3, name: "topic_list", kind: "message", T: () => TopicList },
            { no: 4, name: "unfollow", kind: "message", T: () => Unfollow },
            { no: 5, name: "region_rcmd", kind: "message", T: () => DynRegionRcmd }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicList dynamic_list */ 1:
                    message.dynamicList = DynamicList.internalBinaryRead(reader, reader.uint32(), options, message.dynamicList);
                    break;
                case /* bilibili.app.dynamic.v2.CardVideoUpList up_list */ 2:
                    message.upList = CardVideoUpList.internalBinaryRead(reader, reader.uint32(), options, message.upList);
                    break;
                case /* bilibili.app.dynamic.v2.TopicList topic_list */ 3:
                    message.topicList = TopicList.internalBinaryRead(reader, reader.uint32(), options, message.topicList);
                    break;
                case /* bilibili.app.dynamic.v2.Unfollow unfollow */ 4:
                    message.unfollow = Unfollow.internalBinaryRead(reader, reader.uint32(), options, message.unfollow);
                    break;
                case /* bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd */ 5:
                    message.regionRcmd = DynRegionRcmd.internalBinaryRead(reader, reader.uint32(), options, message.regionRcmd);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicList dynamic_list = 1; */
        if (message.dynamicList)
            DynamicList.internalBinaryWrite(message.dynamicList, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CardVideoUpList up_list = 2; */
        if (message.upList)
            CardVideoUpList.internalBinaryWrite(message.upList, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopicList topic_list = 3; */
        if (message.topicList)
            TopicList.internalBinaryWrite(message.topicList, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Unfollow unfollow = 4; */
        if (message.unfollow)
            Unfollow.internalBinaryWrite(message.unfollow, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd = 5; */
        if (message.regionRcmd)
            DynRegionRcmd.internalBinaryWrite(message.regionRcmd, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAllReply
 */
export const DynAllReply = new DynAllReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAllReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAllReq", [
            { no: 1, name: "update_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "refresh_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.Refresh", Refresh] },
            { no: 5, name: "playurl_param", kind: "message", T: () => PlayurlParam },
            { no: 6, name: "assist_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "rcmd_ups_param", kind: "message", T: () => RcmdUPsParam },
            { no: 9, name: "ad_param", kind: "message", T: () => AdParam },
            { no: 10, name: "cold_start", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 13, name: "tab_recall_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "tab_recall_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { updateBaseline: "", offset: "", page: 0, refreshType: 0, assistBaseline: "", localTime: 0, coldStart: 0, from: "", tabRecallUid: 0n, tabRecallType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string update_baseline */ 1:
                    message.updateBaseline = reader.string();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* int32 page */ 3:
                    message.page = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Refresh refresh_type */ 4:
                    message.refreshType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.PlayurlParam playurl_param */ 5:
                    message.playurlParam = PlayurlParam.internalBinaryRead(reader, reader.uint32(), options, message.playurlParam);
                    break;
                case /* string assist_baseline */ 6:
                    message.assistBaseline = reader.string();
                    break;
                case /* int32 local_time */ 7:
                    message.localTime = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.RcmdUPsParam rcmd_ups_param */ 8:
                    message.rcmdUpsParam = RcmdUPsParam.internalBinaryRead(reader, reader.uint32(), options, message.rcmdUpsParam);
                    break;
                case /* bilibili.app.dynamic.v2.AdParam ad_param */ 9:
                    message.adParam = AdParam.internalBinaryRead(reader, reader.uint32(), options, message.adParam);
                    break;
                case /* int32 cold_start */ 10:
                    message.coldStart = reader.int32();
                    break;
                case /* string from */ 11:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 12:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int64 tab_recall_uid */ 13:
                    message.tabRecallUid = reader.int64().toBigInt();
                    break;
                case /* int32 tab_recall_type */ 14:
                    message.tabRecallType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string update_baseline = 1; */
        if (message.updateBaseline !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.updateBaseline);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* int32 page = 3; */
        if (message.page !== 0)
            writer.tag(3, WireType.Varint).int32(message.page);
        /* bilibili.app.dynamic.v2.Refresh refresh_type = 4; */
        if (message.refreshType !== 0)
            writer.tag(4, WireType.Varint).int32(message.refreshType);
        /* bilibili.app.dynamic.v2.PlayurlParam playurl_param = 5; */
        if (message.playurlParam)
            PlayurlParam.internalBinaryWrite(message.playurlParam, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string assist_baseline = 6; */
        if (message.assistBaseline !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.assistBaseline);
        /* int32 local_time = 7; */
        if (message.localTime !== 0)
            writer.tag(7, WireType.Varint).int32(message.localTime);
        /* bilibili.app.dynamic.v2.RcmdUPsParam rcmd_ups_param = 8; */
        if (message.rcmdUpsParam)
            RcmdUPsParam.internalBinaryWrite(message.rcmdUpsParam, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdParam ad_param = 9; */
        if (message.adParam)
            AdParam.internalBinaryWrite(message.adParam, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* int32 cold_start = 10; */
        if (message.coldStart !== 0)
            writer.tag(10, WireType.Varint).int32(message.coldStart);
        /* string from = 11; */
        if (message.from !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 12; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* int64 tab_recall_uid = 13; */
        if (message.tabRecallUid !== 0n)
            writer.tag(13, WireType.Varint).int64(message.tabRecallUid);
        /* int32 tab_recall_type = 14; */
        if (message.tabRecallType !== 0)
            writer.tag(14, WireType.Varint).int32(message.tabRecallType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAllReq
 */
export const DynAllReq = new DynAllReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynAllUpdOffsetReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynAllUpdOffsetReq", [
            { no: 1, name: "host_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "read_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "footprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { hostUid: 0n, readOffset: "", footprint: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 host_uid */ 1:
                    message.hostUid = reader.int64().toBigInt();
                    break;
                case /* string read_offset */ 2:
                    message.readOffset = reader.string();
                    break;
                case /* string footprint */ 3:
                    message.footprint = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 host_uid = 1; */
        if (message.hostUid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.hostUid);
        /* string read_offset = 2; */
        if (message.readOffset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.readOffset);
        /* string footprint = 3; */
        if (message.footprint !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.footprint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynAllUpdOffsetReq
 */
export const DynAllUpdOffsetReq = new DynAllUpdOffsetReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailReply", [
            { no: 1, name: "item", kind: "message", T: () => DynamicItem }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicItem item */ 1:
                    message.item = DynamicItem.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicItem item = 1; */
        if (message.item)
            DynamicItem.internalBinaryWrite(message.item, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailReply
 */
export const DynDetailReply = new DynDetailReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailReq", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "ad_param", kind: "message", T: () => AdParam },
            { no: 6, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 8, name: "share_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "share_mode", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "pattern", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { uid: 0n, dynamicId: "", dynType: 0n, rid: 0n, from: "", shareId: "", shareMode: 0, localTime: 0, pattern: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string dynamic_id */ 2:
                    message.dynamicId = reader.string();
                    break;
                case /* int64 dyn_type */ 3:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* int64 rid */ 4:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.AdParam ad_param */ 5:
                    message.adParam = AdParam.internalBinaryRead(reader, reader.uint32(), options, message.adParam);
                    break;
                case /* string from */ 6:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 7:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* string share_id */ 8:
                    message.shareId = reader.string();
                    break;
                case /* int32 share_mode */ 9:
                    message.shareMode = reader.int32();
                    break;
                case /* int32 local_time */ 10:
                    message.localTime = reader.int32();
                    break;
                case /* string pattern */ 11:
                    message.pattern = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* string dynamic_id = 2; */
        if (message.dynamicId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.dynamicId);
        /* int64 dyn_type = 3; */
        if (message.dynType !== 0n)
            writer.tag(3, WireType.Varint).int64(message.dynType);
        /* int64 rid = 4; */
        if (message.rid !== 0n)
            writer.tag(4, WireType.Varint).int64(message.rid);
        /* bilibili.app.dynamic.v2.AdParam ad_param = 5; */
        if (message.adParam)
            AdParam.internalBinaryWrite(message.adParam, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string from = 6; */
        if (message.from !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 7; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string share_id = 8; */
        if (message.shareId !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.shareId);
        /* int32 share_mode = 9; */
        if (message.shareMode !== 0)
            writer.tag(9, WireType.Varint).int32(message.shareMode);
        /* int32 local_time = 10; */
        if (message.localTime !== 0)
            writer.tag(10, WireType.Varint).int32(message.localTime);
        /* string pattern = 11; */
        if (message.pattern !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.pattern);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailReq
 */
export const DynDetailReq = new DynDetailReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailsReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem }
        ]);
    }
    create(value) {
        const message = { list: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailsReply
 */
export const DynDetailsReply = new DynDetailsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynDetailsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynDetailsReq", [
            { no: 1, name: "dynamic_ids", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "playurl_param", kind: "message", T: () => PlayurlParam },
            { no: 3, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { dynamicIds: "", localTime: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string dynamic_ids */ 1:
                    message.dynamicIds = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.PlayurlParam playurl_param */ 2:
                    message.playurlParam = PlayurlParam.internalBinaryRead(reader, reader.uint32(), options, message.playurlParam);
                    break;
                case /* int32 local_time */ 3:
                    message.localTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 4:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string dynamic_ids = 1; */
        if (message.dynamicIds !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.dynamicIds);
        /* bilibili.app.dynamic.v2.PlayurlParam playurl_param = 2; */
        if (message.playurlParam)
            PlayurlParam.internalBinaryWrite(message.playurlParam, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 3; */
        if (message.localTime !== 0)
            writer.tag(3, WireType.Varint).int32(message.localTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 4; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynDetailsReq
 */
export const DynDetailsReq = new DynDetailsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynFakeCardReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynFakeCardReply", [
            { no: 1, name: "item", kind: "message", T: () => DynamicItem }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicItem item */ 1:
                    message.item = DynamicItem.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicItem item = 1; */
        if (message.item)
            DynamicItem.internalBinaryWrite(message.item, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynFakeCardReply
 */
export const DynFakeCardReply = new DynFakeCardReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynFakeCardReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynFakeCardReq", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { content: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string content */ 1:
                    message.content = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string content = 1; */
        if (message.content !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.content);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynFakeCardReq
 */
export const DynFakeCardReq = new DynFakeCardReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynLightReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynLightReply", [
            { no: 1, name: "dynamic_list", kind: "message", T: () => DynamicList }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicList dynamic_list */ 1:
                    message.dynamicList = DynamicList.internalBinaryRead(reader, reader.uint32(), options, message.dynamicList);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicList dynamic_list = 1; */
        if (message.dynamicList)
            DynamicList.internalBinaryWrite(message.dynamicList, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynLightReply
 */
export const DynLightReply = new DynLightReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynLightReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynLightReq", [
            { no: 1, name: "history_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 5, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "from_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "fake_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { historyOffset: "", page: 0, from: "", localTime: 0, fromType: 0, fakeUid: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string history_offset */ 1:
                    message.historyOffset = reader.string();
                    break;
                case /* int32 page */ 2:
                    message.page = reader.int32();
                    break;
                case /* string from */ 3:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 4:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 5:
                    message.localTime = reader.int32();
                    break;
                case /* int32 from_type */ 6:
                    message.fromType = reader.int32();
                    break;
                case /* int64 fake_uid */ 7:
                    message.fakeUid = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string history_offset = 1; */
        if (message.historyOffset !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.historyOffset);
        /* int32 page = 2; */
        if (message.page !== 0)
            writer.tag(2, WireType.Varint).int32(message.page);
        /* string from = 3; */
        if (message.from !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 4; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 5; */
        if (message.localTime !== 0)
            writer.tag(5, WireType.Varint).int32(message.localTime);
        /* int32 from_type = 6; */
        if (message.fromType !== 0)
            writer.tag(6, WireType.Varint).int32(message.fromType);
        /* int64 fake_uid = 7; */
        if (message.fakeUid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.fakeUid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynLightReq
 */
export const DynLightReq = new DynLightReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynMixUpListViewMoreReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynMixUpListViewMoreReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MixUpListItem },
            { no: 2, name: "search_default_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "sort_types", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SortType },
            { no: 4, name: "show_more_sort_types", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "default_sort_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { items: [], searchDefaultText: "", sortTypes: [], showMoreSortTypes: false, defaultSortType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.MixUpListItem items */ 1:
                    message.items.push(MixUpListItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string search_default_text */ 2:
                    message.searchDefaultText = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.SortType sort_types */ 3:
                    message.sortTypes.push(SortType.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool show_more_sort_types */ 4:
                    message.showMoreSortTypes = reader.bool();
                    break;
                case /* int32 default_sort_type */ 5:
                    message.defaultSortType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.MixUpListItem items = 1; */
        for (let i = 0; i < message.items.length; i++)
            MixUpListItem.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string search_default_text = 2; */
        if (message.searchDefaultText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.searchDefaultText);
        /* repeated bilibili.app.dynamic.v2.SortType sort_types = 3; */
        for (let i = 0; i < message.sortTypes.length; i++)
            SortType.internalBinaryWrite(message.sortTypes[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bool show_more_sort_types = 4; */
        if (message.showMoreSortTypes !== false)
            writer.tag(4, WireType.Varint).bool(message.showMoreSortTypes);
        /* int32 default_sort_type = 5; */
        if (message.defaultSortType !== 0)
            writer.tag(5, WireType.Varint).int32(message.defaultSortType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynMixUpListViewMoreReply
 */
export const DynMixUpListViewMoreReply = new DynMixUpListViewMoreReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynMixUpListViewMoreReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynMixUpListViewMoreReq", [
            { no: 1, name: "sort_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { sortType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 sort_type */ 1:
                    message.sortType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 sort_type = 1; */
        if (message.sortType !== 0)
            writer.tag(1, WireType.Varint).int32(message.sortType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynMixUpListViewMoreReq
 */
export const DynMixUpListViewMoreReq = new DynMixUpListViewMoreReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRcmdReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRcmdReply", [
            { no: 1, name: "region_rcmd", kind: "message", T: () => DynRegionRcmd },
            { no: 2, name: "dynamic_list", kind: "message", T: () => DynamicList }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd */ 1:
                    message.regionRcmd = DynRegionRcmd.internalBinaryRead(reader, reader.uint32(), options, message.regionRcmd);
                    break;
                case /* bilibili.app.dynamic.v2.DynamicList dynamic_list */ 2:
                    message.dynamicList = DynamicList.internalBinaryRead(reader, reader.uint32(), options, message.dynamicList);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynRegionRcmd region_rcmd = 1; */
        if (message.regionRcmd)
            DynRegionRcmd.internalBinaryWrite(message.regionRcmd, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.DynamicList dynamic_list = 2; */
        if (message.dynamicList)
            DynamicList.internalBinaryWrite(message.dynamicList, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRcmdReply
 */
export const DynRcmdReply = new DynRcmdReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRcmdReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRcmdReq", [
            { no: 1, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 2, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "fake_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "is_refresh", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { localTime: 0, fakeUid: 0n, isRefresh: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 1:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 2:
                    message.localTime = reader.int32();
                    break;
                case /* int64 fake_uid */ 3:
                    message.fakeUid = reader.int64().toBigInt();
                    break;
                case /* bool is_refresh */ 4:
                    message.isRefresh = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 1; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 2; */
        if (message.localTime !== 0)
            writer.tag(2, WireType.Varint).int32(message.localTime);
        /* int64 fake_uid = 3; */
        if (message.fakeUid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.fakeUid);
        /* bool is_refresh = 4; */
        if (message.isRefresh !== false)
            writer.tag(4, WireType.Varint).bool(message.isRefresh);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRcmdReq
 */
export const DynRcmdReq = new DynRcmdReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRcmdUpExchangeReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRcmdUpExchangeReply", [
            { no: 1, name: "unfollow", kind: "message", T: () => Unfollow }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.Unfollow unfollow */ 1:
                    message.unfollow = Unfollow.internalBinaryRead(reader, reader.uint32(), options, message.unfollow);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.Unfollow unfollow = 1; */
        if (message.unfollow)
            Unfollow.internalBinaryWrite(message.unfollow, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRcmdUpExchangeReply
 */
export const DynRcmdUpExchangeReply = new DynRcmdUpExchangeReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRcmdUpExchangeReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRcmdUpExchangeReq", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "dislikeTs", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { uid: 0n, dislikeTs: 0n, from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* int64 dislikeTs */ 2:
                    message.dislikeTs = reader.int64().toBigInt();
                    break;
                case /* string from */ 3:
                    message.from = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* int64 dislikeTs = 2; */
        if (message.dislikeTs !== 0n)
            writer.tag(2, WireType.Varint).int64(message.dislikeTs);
        /* string from = 3; */
        if (message.from !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.from);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRcmdUpExchangeReq
 */
export const DynRcmdUpExchangeReq = new DynRcmdUpExchangeReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRegionRcmd$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRegionRcmd", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynRegionRcmdItem },
            { no: 2, name: "opts", kind: "message", T: () => RcmdOption }
        ]);
    }
    create(value) {
        const message = { items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynRegionRcmdItem items */ 1:
                    message.items.push(DynRegionRcmdItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.RcmdOption opts */ 2:
                    message.opts = RcmdOption.internalBinaryRead(reader, reader.uint32(), options, message.opts);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynRegionRcmdItem items = 1; */
        for (let i = 0; i < message.items.length; i++)
            DynRegionRcmdItem.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.RcmdOption opts = 2; */
        if (message.opts)
            RcmdOption.internalBinaryWrite(message.opts, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRegionRcmd
 */
export const DynRegionRcmd = new DynRegionRcmd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynRegionRcmdItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynRegionRcmdItem", [
            { no: 1, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleRcmd }
        ]);
    }
    create(value) {
        const message = { rid: 0n, title: "", items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 rid */ 1:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ModuleRcmd items */ 3:
                    message.items.push(ModuleRcmd.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 rid = 1; */
        if (message.rid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.rid);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.ModuleRcmd items = 3; */
        for (let i = 0; i < message.items.length; i++)
            ModuleRcmd.internalBinaryWrite(message.items[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynRegionRcmdItem
 */
export const DynRegionRcmdItem = new DynRegionRcmdItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSearchReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSearchReply", [
            { no: 1, name: "channel_info", kind: "message", T: () => SearchChannel },
            { no: 2, name: "search_topic", kind: "message", T: () => SearchTopic },
            { no: 3, name: "search_info", kind: "message", T: () => SearchInfo }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.SearchChannel channel_info */ 1:
                    message.channelInfo = SearchChannel.internalBinaryRead(reader, reader.uint32(), options, message.channelInfo);
                    break;
                case /* bilibili.app.dynamic.v2.SearchTopic search_topic */ 2:
                    message.searchTopic = SearchTopic.internalBinaryRead(reader, reader.uint32(), options, message.searchTopic);
                    break;
                case /* bilibili.app.dynamic.v2.SearchInfo search_info */ 3:
                    message.searchInfo = SearchInfo.internalBinaryRead(reader, reader.uint32(), options, message.searchInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.SearchChannel channel_info = 1; */
        if (message.channelInfo)
            SearchChannel.internalBinaryWrite(message.channelInfo, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.SearchTopic search_topic = 2; */
        if (message.searchTopic)
            SearchTopic.internalBinaryWrite(message.searchTopic, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.SearchInfo search_info = 3; */
        if (message.searchInfo)
            SearchInfo.internalBinaryWrite(message.searchInfo, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSearchReply
 */
export const DynSearchReply = new DynSearchReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSearchReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSearchReq", [
            { no: 1, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { keyword: "", page: 0, localTime: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword */ 1:
                    message.keyword = reader.string();
                    break;
                case /* int32 page */ 2:
                    message.page = reader.int32();
                    break;
                case /* int32 local_time */ 3:
                    message.localTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 4:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string keyword = 1; */
        if (message.keyword !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keyword);
        /* int32 page = 2; */
        if (message.page !== 0)
            writer.tag(2, WireType.Varint).int32(message.page);
        /* int32 local_time = 3; */
        if (message.localTime !== 0)
            writer.tag(3, WireType.Varint).int32(message.localTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 4; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSearchReq
 */
export const DynSearchReq = new DynSearchReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynServerDetailsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynServerDetailsReply", [
            { no: 1, name: "items", kind: "map", K: 3 /*ScalarType.INT64*/, V: { kind: "message", T: () => DynamicItem } }
        ]);
    }
    create(value) {
        const message = { items: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<int64, bilibili.app.dynamic.v2.DynamicItem> items */ 1:
                    this.binaryReadMap1(message.items, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap1(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.int64().toString();
                    break;
                case 2:
                    val = DynamicItem.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field bilibili.app.dynamic.v2.DynServerDetailsReply.items");
            }
        }
        map[key ?? "0"] = val ?? DynamicItem.create();
    }
    internalBinaryWrite(message, writer, options) {
        /* map<int64, bilibili.app.dynamic.v2.DynamicItem> items = 1; */
        for (let k of Object.keys(message.items)) {
            writer.tag(1, WireType.LengthDelimited).fork().tag(1, WireType.Varint).int64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            DynamicItem.internalBinaryWrite(message.items[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynServerDetailsReply
 */
export const DynServerDetailsReply = new DynServerDetailsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynServerDetailsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynServerDetailsReq", [
            { no: 2, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "mobi_app", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "device", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "buvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "build", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "platform", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "is_master", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { localTime: 0, mobiApp: "", device: "", buvid: "", build: 0n, mid: 0n, platform: "", isMaster: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 local_time */ 2:
                    message.localTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* string mobi_app */ 4:
                    message.mobiApp = reader.string();
                    break;
                case /* string device */ 5:
                    message.device = reader.string();
                    break;
                case /* string buvid */ 6:
                    message.buvid = reader.string();
                    break;
                case /* int64 build */ 7:
                    message.build = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 8:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string platform */ 9:
                    message.platform = reader.string();
                    break;
                case /* bool is_master */ 10:
                    message.isMaster = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 local_time = 2; */
        if (message.localTime !== 0)
            writer.tag(2, WireType.Varint).int32(message.localTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string mobi_app = 4; */
        if (message.mobiApp !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.mobiApp);
        /* string device = 5; */
        if (message.device !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.device);
        /* string buvid = 6; */
        if (message.buvid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.buvid);
        /* int64 build = 7; */
        if (message.build !== 0n)
            writer.tag(7, WireType.Varint).int64(message.build);
        /* int64 mid = 8; */
        if (message.mid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.mid);
        /* string platform = 9; */
        if (message.platform !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.platform);
        /* bool is_master = 10; */
        if (message.isMaster !== false)
            writer.tag(10, WireType.Varint).bool(message.isMaster);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynServerDetailsReq
 */
export const DynServerDetailsReq = new DynServerDetailsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSpaceReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSpaceReq", [
            { no: 1, name: "host_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "history_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 4, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "page", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { hostUid: 0n, historyOffset: "", localTime: 0, page: 0n, from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 host_uid */ 1:
                    message.hostUid = reader.int64().toBigInt();
                    break;
                case /* string history_offset */ 2:
                    message.historyOffset = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 3:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* int32 local_time */ 4:
                    message.localTime = reader.int32();
                    break;
                case /* int64 page */ 5:
                    message.page = reader.int64().toBigInt();
                    break;
                case /* string from */ 6:
                    message.from = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 host_uid = 1; */
        if (message.hostUid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.hostUid);
        /* string history_offset = 2; */
        if (message.historyOffset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.historyOffset);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 3; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 4; */
        if (message.localTime !== 0)
            writer.tag(4, WireType.Varint).int32(message.localTime);
        /* int64 page = 5; */
        if (message.page !== 0n)
            writer.tag(5, WireType.Varint).int64(message.page);
        /* string from = 6; */
        if (message.from !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.from);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSpaceReq
 */
export const DynSpaceReq = new DynSpaceReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSpaceRsp$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSpaceRsp", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "history_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { list: [], historyOffset: "", hasMore: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string history_offset */ 2:
                    message.historyOffset = reader.string();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string history_offset = 2; */
        if (message.historyOffset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.historyOffset);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSpaceRsp
 */
export const DynSpaceRsp = new DynSpaceRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSpaceSearchDetailsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply", [
            { no: 1, name: "items", kind: "map", K: 3 /*ScalarType.INT64*/, V: { kind: "message", T: () => DynamicItem } }
        ]);
    }
    create(value) {
        const message = { items: {} };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* map<int64, bilibili.app.dynamic.v2.DynamicItem> items */ 1:
                    this.binaryReadMap1(message.items, reader, options);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    binaryReadMap1(map, reader, options) {
        let len = reader.uint32(), end = reader.pos + len, key, val;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case 1:
                    key = reader.int64().toString();
                    break;
                case 2:
                    val = DynamicItem.internalBinaryRead(reader, reader.uint32(), options);
                    break;
                default: throw new globalThis.Error("unknown map entry field for field bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply.items");
            }
        }
        map[key ?? "0"] = val ?? DynamicItem.create();
    }
    internalBinaryWrite(message, writer, options) {
        /* map<int64, bilibili.app.dynamic.v2.DynamicItem> items = 1; */
        for (let k of Object.keys(message.items)) {
            writer.tag(1, WireType.LengthDelimited).fork().tag(1, WireType.Varint).int64(k);
            writer.tag(2, WireType.LengthDelimited).fork();
            DynamicItem.internalBinaryWrite(message.items[k], writer, options);
            writer.join().join();
        }
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSpaceSearchDetailsReply
 */
export const DynSpaceSearchDetailsReply = new DynSpaceSearchDetailsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynSpaceSearchDetailsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq", [
            { no: 2, name: "search_words", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "player_args", kind: "message", T: () => PlayerArgs },
            { no: 5, name: "mobi_app", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "device", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "buvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "build", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "platform", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "ip", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "net_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "tf_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { searchWords: [], localTime: 0, mobiApp: "", device: "", buvid: "", build: 0n, mid: 0n, platform: "", ip: "", netType: 0, tfType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated string search_words */ 2:
                    message.searchWords.push(reader.string());
                    break;
                case /* int32 local_time */ 3:
                    message.localTime = reader.int32();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 4:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                case /* string mobi_app */ 5:
                    message.mobiApp = reader.string();
                    break;
                case /* string device */ 6:
                    message.device = reader.string();
                    break;
                case /* string buvid */ 7:
                    message.buvid = reader.string();
                    break;
                case /* int64 build */ 8:
                    message.build = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 9:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string platform */ 10:
                    message.platform = reader.string();
                    break;
                case /* string ip */ 11:
                    message.ip = reader.string();
                    break;
                case /* int32 net_type */ 12:
                    message.netType = reader.int32();
                    break;
                case /* int32 tf_type */ 13:
                    message.tfType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated string search_words = 2; */
        for (let i = 0; i < message.searchWords.length; i++)
            writer.tag(2, WireType.LengthDelimited).string(message.searchWords[i]);
        /* int32 local_time = 3; */
        if (message.localTime !== 0)
            writer.tag(3, WireType.Varint).int32(message.localTime);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 4; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string mobi_app = 5; */
        if (message.mobiApp !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.mobiApp);
        /* string device = 6; */
        if (message.device !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.device);
        /* string buvid = 7; */
        if (message.buvid !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.buvid);
        /* int64 build = 8; */
        if (message.build !== 0n)
            writer.tag(8, WireType.Varint).int64(message.build);
        /* int64 mid = 9; */
        if (message.mid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.mid);
        /* string platform = 10; */
        if (message.platform !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.platform);
        /* string ip = 11; */
        if (message.ip !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.ip);
        /* int32 net_type = 12; */
        if (message.netType !== 0)
            writer.tag(12, WireType.Varint).int32(message.netType);
        /* int32 tf_type = 13; */
        if (message.tfType !== 0)
            writer.tag(13, WireType.Varint).int32(message.tfType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynSpaceSearchDetailsReq
 */
export const DynSpaceSearchDetailsReq = new DynSpaceSearchDetailsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynTab$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynTab", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "bubble", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "red_point", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "city_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "is_popup", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "popup", kind: "message", T: () => Popup },
            { no: 8, name: "default_tab", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 9, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "anchor", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "internal_test", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "back_up", kind: "message", T: () => DynTab }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", bubble: "", redPoint: 0, cityId: 0n, isPopup: 0, defaultTab: false, subTitle: "", anchor: "", internalTest: "", type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string bubble */ 3:
                    message.bubble = reader.string();
                    break;
                case /* int32 red_point */ 4:
                    message.redPoint = reader.int32();
                    break;
                case /* int64 city_id */ 5:
                    message.cityId = reader.int64().toBigInt();
                    break;
                case /* int32 is_popup */ 6:
                    message.isPopup = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Popup popup */ 7:
                    message.popup = Popup.internalBinaryRead(reader, reader.uint32(), options, message.popup);
                    break;
                case /* bool default_tab */ 8:
                    message.defaultTab = reader.bool();
                    break;
                case /* string sub_title */ 9:
                    message.subTitle = reader.string();
                    break;
                case /* string anchor */ 10:
                    message.anchor = reader.string();
                    break;
                case /* string internal_test */ 11:
                    message.internalTest = reader.string();
                    break;
                case /* int32 type */ 12:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.DynTab back_up */ 13:
                    message.backUp = DynTab.internalBinaryRead(reader, reader.uint32(), options, message.backUp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string bubble = 3; */
        if (message.bubble !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.bubble);
        /* int32 red_point = 4; */
        if (message.redPoint !== 0)
            writer.tag(4, WireType.Varint).int32(message.redPoint);
        /* int64 city_id = 5; */
        if (message.cityId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.cityId);
        /* int32 is_popup = 6; */
        if (message.isPopup !== 0)
            writer.tag(6, WireType.Varint).int32(message.isPopup);
        /* bilibili.app.dynamic.v2.Popup popup = 7; */
        if (message.popup)
            Popup.internalBinaryWrite(message.popup, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bool default_tab = 8; */
        if (message.defaultTab !== false)
            writer.tag(8, WireType.Varint).bool(message.defaultTab);
        /* string sub_title = 9; */
        if (message.subTitle !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.subTitle);
        /* string anchor = 10; */
        if (message.anchor !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.anchor);
        /* string internal_test = 11; */
        if (message.internalTest !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.internalTest);
        /* int32 type = 12; */
        if (message.type !== 0)
            writer.tag(12, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.DynTab back_up = 13; */
        if (message.backUp)
            DynTab.internalBinaryWrite(message.backUp, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynTab
 */
export const DynTab = new DynTab$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynTabReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynTabReply", [
            { no: 1, name: "dyn_tab", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynTab }
        ]);
    }
    create(value) {
        const message = { dynTab: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynTab dyn_tab */ 1:
                    message.dynTab.push(DynTab.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynTab dyn_tab = 1; */
        for (let i = 0; i < message.dynTab.length; i++)
            DynTab.internalBinaryWrite(message.dynTab[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynTabReply
 */
export const DynTabReply = new DynTabReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynTabReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynTabReq", [
            { no: 1, name: "teenagers_mode", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { teenagersMode: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 teenagers_mode */ 1:
                    message.teenagersMode = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 teenagers_mode = 1; */
        if (message.teenagersMode !== 0)
            writer.tag(1, WireType.Varint).int32(message.teenagersMode);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynTabReq
 */
export const DynTabReq = new DynTabReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynThumbReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynThumbReq", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "dyn_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "rid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ThumbType", ThumbType] }
        ]);
    }
    create(value) {
        const message = { uid: 0n, dynId: "", dynType: 0n, rid: "", type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string dyn_id */ 2:
                    message.dynId = reader.string();
                    break;
                case /* int64 dyn_type */ 3:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* string rid */ 4:
                    message.rid = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ThumbType type */ 5:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* string dyn_id = 2; */
        if (message.dynId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.dynId);
        /* int64 dyn_type = 3; */
        if (message.dynType !== 0n)
            writer.tag(3, WireType.Varint).int64(message.dynType);
        /* string rid = 4; */
        if (message.rid !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.rid);
        /* bilibili.app.dynamic.v2.ThumbType type = 5; */
        if (message.type !== 0)
            writer.tag(5, WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynThumbReq
 */
export const DynThumbReq = new DynThumbReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVideoPersonalReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVideoPersonalReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "read_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "relation", kind: "message", T: () => Relation },
            { no: 6, name: "addition_up", kind: "message", T: () => TopAdditionUP }
        ]);
    }
    create(value) {
        const message = { list: [], offset: "", hasMore: false, readOffset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                case /* string read_offset */ 4:
                    message.readOffset = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 5:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* bilibili.app.dynamic.v2.TopAdditionUP addition_up */ 6:
                    message.additionUp = TopAdditionUP.internalBinaryRead(reader, reader.uint32(), options, message.additionUp);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        /* string read_offset = 4; */
        if (message.readOffset !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.readOffset);
        /* bilibili.app.dynamic.v2.Relation relation = 5; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopAdditionUP addition_up = 6; */
        if (message.additionUp)
            TopAdditionUP.internalBinaryWrite(message.additionUp, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVideoPersonalReply
 */
export const DynVideoPersonalReply = new DynVideoPersonalReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVideoPersonalReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVideoPersonalReq", [
            { no: 1, name: "host_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "is_preload", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "playurl_param", kind: "message", T: () => PlayurlParam },
            { no: 6, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "footprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { hostUid: 0n, offset: "", page: 0, isPreload: 0, localTime: 0, footprint: "", from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 host_uid */ 1:
                    message.hostUid = reader.int64().toBigInt();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* int32 page */ 3:
                    message.page = reader.int32();
                    break;
                case /* int32 is_preload */ 4:
                    message.isPreload = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.PlayurlParam playurl_param */ 5:
                    message.playurlParam = PlayurlParam.internalBinaryRead(reader, reader.uint32(), options, message.playurlParam);
                    break;
                case /* int32 local_time */ 6:
                    message.localTime = reader.int32();
                    break;
                case /* string footprint */ 7:
                    message.footprint = reader.string();
                    break;
                case /* string from */ 8:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 9:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 host_uid = 1; */
        if (message.hostUid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.hostUid);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* int32 page = 3; */
        if (message.page !== 0)
            writer.tag(3, WireType.Varint).int32(message.page);
        /* int32 is_preload = 4; */
        if (message.isPreload !== 0)
            writer.tag(4, WireType.Varint).int32(message.isPreload);
        /* bilibili.app.dynamic.v2.PlayurlParam playurl_param = 5; */
        if (message.playurlParam)
            PlayurlParam.internalBinaryWrite(message.playurlParam, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* int32 local_time = 6; */
        if (message.localTime !== 0)
            writer.tag(6, WireType.Varint).int32(message.localTime);
        /* string footprint = 7; */
        if (message.footprint !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.footprint);
        /* string from = 8; */
        if (message.from !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 9; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVideoPersonalReq
 */
export const DynVideoPersonalReq = new DynVideoPersonalReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVideoReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVideoReply", [
            { no: 1, name: "dynamic_list", kind: "message", T: () => CardVideoDynList },
            { no: 2, name: "video_up_list", kind: "message", T: () => CardVideoUpList },
            { no: 3, name: "video_follow_list", kind: "message", T: () => CardVideoFollowList }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.CardVideoDynList dynamic_list */ 1:
                    message.dynamicList = CardVideoDynList.internalBinaryRead(reader, reader.uint32(), options, message.dynamicList);
                    break;
                case /* bilibili.app.dynamic.v2.CardVideoUpList video_up_list */ 2:
                    message.videoUpList = CardVideoUpList.internalBinaryRead(reader, reader.uint32(), options, message.videoUpList);
                    break;
                case /* bilibili.app.dynamic.v2.CardVideoFollowList video_follow_list */ 3:
                    message.videoFollowList = CardVideoFollowList.internalBinaryRead(reader, reader.uint32(), options, message.videoFollowList);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.CardVideoDynList dynamic_list = 1; */
        if (message.dynamicList)
            CardVideoDynList.internalBinaryWrite(message.dynamicList, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CardVideoUpList video_up_list = 2; */
        if (message.videoUpList)
            CardVideoUpList.internalBinaryWrite(message.videoUpList, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CardVideoFollowList video_follow_list = 3; */
        if (message.videoFollowList)
            CardVideoFollowList.internalBinaryWrite(message.videoFollowList, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVideoReply
 */
export const DynVideoReply = new DynVideoReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVideoReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVideoReq", [
            { no: 1, name: "update_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "refresh_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.Refresh", Refresh] },
            { no: 5, name: "playurl_param", kind: "message", T: () => PlayurlParam },
            { no: 6, name: "assist_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "local_time", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { updateBaseline: "", offset: "", page: 0, refreshType: 0, assistBaseline: "", localTime: 0, from: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string update_baseline */ 1:
                    message.updateBaseline = reader.string();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* int32 page */ 3:
                    message.page = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Refresh refresh_type */ 4:
                    message.refreshType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.PlayurlParam playurl_param */ 5:
                    message.playurlParam = PlayurlParam.internalBinaryRead(reader, reader.uint32(), options, message.playurlParam);
                    break;
                case /* string assist_baseline */ 6:
                    message.assistBaseline = reader.string();
                    break;
                case /* int32 local_time */ 7:
                    message.localTime = reader.int32();
                    break;
                case /* string from */ 8:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 9:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string update_baseline = 1; */
        if (message.updateBaseline !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.updateBaseline);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* int32 page = 3; */
        if (message.page !== 0)
            writer.tag(3, WireType.Varint).int32(message.page);
        /* bilibili.app.dynamic.v2.Refresh refresh_type = 4; */
        if (message.refreshType !== 0)
            writer.tag(4, WireType.Varint).int32(message.refreshType);
        /* bilibili.app.dynamic.v2.PlayurlParam playurl_param = 5; */
        if (message.playurlParam)
            PlayurlParam.internalBinaryWrite(message.playurlParam, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string assist_baseline = 6; */
        if (message.assistBaseline !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.assistBaseline);
        /* int32 local_time = 7; */
        if (message.localTime !== 0)
            writer.tag(7, WireType.Varint).int32(message.localTime);
        /* string from = 8; */
        if (message.from !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 9; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVideoReq
 */
export const DynVideoReq = new DynVideoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVideoUpdOffsetReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVideoUpdOffsetReq", [
            { no: 1, name: "host_uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "read_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "footprint", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { hostUid: 0n, readOffset: "", footprint: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 host_uid */ 1:
                    message.hostUid = reader.int64().toBigInt();
                    break;
                case /* string read_offset */ 2:
                    message.readOffset = reader.string();
                    break;
                case /* string footprint */ 3:
                    message.footprint = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 host_uid = 1; */
        if (message.hostUid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.hostUid);
        /* string read_offset = 2; */
        if (message.readOffset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.readOffset);
        /* string footprint = 3; */
        if (message.footprint !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.footprint);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVideoUpdOffsetReq
 */
export const DynVideoUpdOffsetReq = new DynVideoUpdOffsetReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVoteReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVoteReply", [
            { no: 1, name: "item", kind: "message", T: () => AdditionVote2 },
            { no: 2, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { toast: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AdditionVote2 item */ 1:
                    message.item = AdditionVote2.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                case /* string toast */ 2:
                    message.toast = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AdditionVote2 item = 1; */
        if (message.item)
            AdditionVote2.internalBinaryWrite(message.item, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string toast = 2; */
        if (message.toast !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.toast);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVoteReply
 */
export const DynVoteReply = new DynVoteReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynVoteReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynVoteReq", [
            { no: 1, name: "vote_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "votes", kind: "scalar", repeat: 1 /*RepeatType.PACKED*/, T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.VoteStatus", VoteStatus] },
            { no: 4, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "share", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { voteId: 0n, votes: [], status: 0, dynamicId: "", share: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 vote_id */ 1:
                    message.voteId = reader.int64().toBigInt();
                    break;
                case /* repeated int64 votes */ 2:
                    if (wireType === WireType.LengthDelimited)
                        for (let e = reader.int32() + reader.pos; reader.pos < e;)
                            message.votes.push(reader.int64().toBigInt());
                    else
                        message.votes.push(reader.int64().toBigInt());
                    break;
                case /* bilibili.app.dynamic.v2.VoteStatus status */ 3:
                    message.status = reader.int32();
                    break;
                case /* string dynamic_id */ 4:
                    message.dynamicId = reader.string();
                    break;
                case /* bool share */ 5:
                    message.share = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 vote_id = 1; */
        if (message.voteId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.voteId);
        /* repeated int64 votes = 2; */
        if (message.votes.length) {
            writer.tag(2, WireType.LengthDelimited).fork();
            for (let i = 0; i < message.votes.length; i++)
                writer.int64(message.votes[i]);
            writer.join();
        }
        /* bilibili.app.dynamic.v2.VoteStatus status = 3; */
        if (message.status !== 0)
            writer.tag(3, WireType.Varint).int32(message.status);
        /* string dynamic_id = 4; */
        if (message.dynamicId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.dynamicId);
        /* bool share = 5; */
        if (message.share !== false)
            writer.tag(5, WireType.Varint).bool(message.share);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynVoteReq
 */
export const DynVoteReq = new DynVoteReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynamicItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynamicItem", [
            { no: 1, name: "card_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynamicType", DynamicType] },
            { no: 2, name: "item_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynamicType", DynamicType] },
            { no: 3, name: "modules", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Module },
            { no: 4, name: "extend", kind: "message", T: () => Extend },
            { no: 5, name: "has_fold", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "server_info", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { cardType: 0, itemType: 0, modules: [], hasFold: 0, serverInfo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicType card_type */ 1:
                    message.cardType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.DynamicType item_type */ 2:
                    message.itemType = reader.int32();
                    break;
                case /* repeated bilibili.app.dynamic.v2.Module modules */ 3:
                    message.modules.push(Module.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.Extend extend */ 4:
                    message.extend = Extend.internalBinaryRead(reader, reader.uint32(), options, message.extend);
                    break;
                case /* int32 has_fold */ 5:
                    message.hasFold = reader.int32();
                    break;
                case /* string server_info */ 6:
                    message.serverInfo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicType card_type = 1; */
        if (message.cardType !== 0)
            writer.tag(1, WireType.Varint).int32(message.cardType);
        /* bilibili.app.dynamic.v2.DynamicType item_type = 2; */
        if (message.itemType !== 0)
            writer.tag(2, WireType.Varint).int32(message.itemType);
        /* repeated bilibili.app.dynamic.v2.Module modules = 3; */
        for (let i = 0; i < message.modules.length; i++)
            Module.internalBinaryWrite(message.modules[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Extend extend = 4; */
        if (message.extend)
            Extend.internalBinaryWrite(message.extend, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 has_fold = 5; */
        if (message.hasFold !== 0)
            writer.tag(5, WireType.Varint).int32(message.hasFold);
        /* string server_info = 6; */
        if (message.serverInfo !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.serverInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynamicItem
 */
export const DynamicItem = new DynamicItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class DynamicList$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.DynamicList", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "update_num", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "history_offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "update_baseline", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { list: [], updateNum: 0n, historyOffset: "", updateBaseline: "", hasMore: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 update_num */ 2:
                    message.updateNum = reader.int64().toBigInt();
                    break;
                case /* string history_offset */ 3:
                    message.historyOffset = reader.string();
                    break;
                case /* string update_baseline */ 4:
                    message.updateBaseline = reader.string();
                    break;
                case /* bool has_more */ 5:
                    message.hasMore = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 update_num = 2; */
        if (message.updateNum !== 0n)
            writer.tag(2, WireType.Varint).int64(message.updateNum);
        /* string history_offset = 3; */
        if (message.historyOffset !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.historyOffset);
        /* string update_baseline = 4; */
        if (message.updateBaseline !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.updateBaseline);
        /* bool has_more = 5; */
        if (message.hasMore !== false)
            writer.tag(5, WireType.Varint).bool(message.hasMore);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.DynamicList
 */
export const DynamicList = new DynamicList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoCommon$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoCommon", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "poi_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynExtendType", DynExtendType] },
            { no: 6, name: "sub_module", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "action_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "action_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "is_show_light", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "", poiType: 0, type: 0, subModule: "", actionText: "", actionUrl: "", rid: 0n, isShowLight: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                case /* int32 poi_type */ 4:
                    message.poiType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.DynExtendType type */ 5:
                    message.type = reader.int32();
                    break;
                case /* string sub_module */ 6:
                    message.subModule = reader.string();
                    break;
                case /* string action_text */ 7:
                    message.actionText = reader.string();
                    break;
                case /* string action_url */ 8:
                    message.actionUrl = reader.string();
                    break;
                case /* int64 rid */ 9:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* bool is_show_light */ 10:
                    message.isShowLight = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        /* int32 poi_type = 4; */
        if (message.poiType !== 0)
            writer.tag(4, WireType.Varint).int32(message.poiType);
        /* bilibili.app.dynamic.v2.DynExtendType type = 5; */
        if (message.type !== 0)
            writer.tag(5, WireType.Varint).int32(message.type);
        /* string sub_module = 6; */
        if (message.subModule !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.subModule);
        /* string action_text = 7; */
        if (message.actionText !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.actionText);
        /* string action_url = 8; */
        if (message.actionUrl !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.actionUrl);
        /* int64 rid = 9; */
        if (message.rid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.rid);
        /* bool is_show_light = 10; */
        if (message.isShowLight !== false)
            writer.tag(10, WireType.Varint).bool(message.isShowLight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoCommon
 */
export const ExtInfoCommon = new ExtInfoCommon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoGame$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoGame", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoGame
 */
export const ExtInfoGame = new ExtInfoGame$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoHot$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoHot", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoHot
 */
export const ExtInfoHot = new ExtInfoHot$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoLBS$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoLBS", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "poi_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "", poiType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                case /* int32 poi_type */ 4:
                    message.poiType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        /* int32 poi_type = 4; */
        if (message.poiType !== 0)
            writer.tag(4, WireType.Varint).int32(message.poiType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoLBS
 */
export const ExtInfoLBS = new ExtInfoLBS$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoOGV$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoOGV", [
            { no: 1, name: "info_ogv", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InfoOGV }
        ]);
    }
    create(value) {
        const message = { infoOgv: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.InfoOGV info_ogv */ 1:
                    message.infoOgv.push(InfoOGV.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.InfoOGV info_ogv = 1; */
        for (let i = 0; i < message.infoOgv.length; i++)
            InfoOGV.internalBinaryWrite(message.infoOgv[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoOGV
 */
export const ExtInfoOGV = new ExtInfoOGV$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtInfoTopic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtInfoTopic", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtInfoTopic
 */
export const ExtInfoTopic = new ExtInfoTopic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Extend$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Extend", [
            { no: 1, name: "dyn_id_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "business_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "orig_dyn_id_str", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "orig_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "orig_img_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "orig_desc", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Description },
            { no: 7, name: "desc", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Description },
            { no: 8, name: "orig_dyn_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynamicType", DynamicType] },
            { no: 9, name: "share_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "share_scene", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "is_fast_share", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "r_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 14, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "card_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "source_content", kind: "message", T: () => Any },
            { no: 17, name: "orig_face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 18, name: "reply", kind: "message", T: () => ExtendReply }
        ]);
    }
    create(value) {
        const message = { dynIdStr: "", businessId: "", origDynIdStr: "", origName: "", origImgUrl: "", origDesc: [], desc: [], origDynType: 0, shareType: "", shareScene: "", isFastShare: false, rType: 0, dynType: 0n, uid: 0n, cardUrl: "", origFace: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string dyn_id_str */ 1:
                    message.dynIdStr = reader.string();
                    break;
                case /* string business_id */ 2:
                    message.businessId = reader.string();
                    break;
                case /* string orig_dyn_id_str */ 3:
                    message.origDynIdStr = reader.string();
                    break;
                case /* string orig_name */ 4:
                    message.origName = reader.string();
                    break;
                case /* string orig_img_url */ 5:
                    message.origImgUrl = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.Description orig_desc */ 6:
                    message.origDesc.push(Description.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* repeated bilibili.app.dynamic.v2.Description desc */ 7:
                    message.desc.push(Description.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.DynamicType orig_dyn_type */ 8:
                    message.origDynType = reader.int32();
                    break;
                case /* string share_type */ 9:
                    message.shareType = reader.string();
                    break;
                case /* string share_scene */ 10:
                    message.shareScene = reader.string();
                    break;
                case /* bool is_fast_share */ 11:
                    message.isFastShare = reader.bool();
                    break;
                case /* int32 r_type */ 12:
                    message.rType = reader.int32();
                    break;
                case /* int64 dyn_type */ 13:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* int64 uid */ 14:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string card_url */ 15:
                    message.cardUrl = reader.string();
                    break;
                case /* google.protobuf.Any source_content */ 16:
                    message.sourceContent = Any.internalBinaryRead(reader, reader.uint32(), options, message.sourceContent);
                    break;
                case /* string orig_face */ 17:
                    message.origFace = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ExtendReply reply */ 18:
                    message.reply = ExtendReply.internalBinaryRead(reader, reader.uint32(), options, message.reply);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string dyn_id_str = 1; */
        if (message.dynIdStr !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.dynIdStr);
        /* string business_id = 2; */
        if (message.businessId !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.businessId);
        /* string orig_dyn_id_str = 3; */
        if (message.origDynIdStr !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.origDynIdStr);
        /* string orig_name = 4; */
        if (message.origName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.origName);
        /* string orig_img_url = 5; */
        if (message.origImgUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.origImgUrl);
        /* repeated bilibili.app.dynamic.v2.Description orig_desc = 6; */
        for (let i = 0; i < message.origDesc.length; i++)
            Description.internalBinaryWrite(message.origDesc[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.Description desc = 7; */
        for (let i = 0; i < message.desc.length; i++)
            Description.internalBinaryWrite(message.desc[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.DynamicType orig_dyn_type = 8; */
        if (message.origDynType !== 0)
            writer.tag(8, WireType.Varint).int32(message.origDynType);
        /* string share_type = 9; */
        if (message.shareType !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.shareType);
        /* string share_scene = 10; */
        if (message.shareScene !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.shareScene);
        /* bool is_fast_share = 11; */
        if (message.isFastShare !== false)
            writer.tag(11, WireType.Varint).bool(message.isFastShare);
        /* int32 r_type = 12; */
        if (message.rType !== 0)
            writer.tag(12, WireType.Varint).int32(message.rType);
        /* int64 dyn_type = 13; */
        if (message.dynType !== 0n)
            writer.tag(13, WireType.Varint).int64(message.dynType);
        /* int64 uid = 14; */
        if (message.uid !== 0n)
            writer.tag(14, WireType.Varint).int64(message.uid);
        /* string card_url = 15; */
        if (message.cardUrl !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.cardUrl);
        /* google.protobuf.Any source_content = 16; */
        if (message.sourceContent)
            Any.internalBinaryWrite(message.sourceContent, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* string orig_face = 17; */
        if (message.origFace !== "")
            writer.tag(17, WireType.LengthDelimited).string(message.origFace);
        /* bilibili.app.dynamic.v2.ExtendReply reply = 18; */
        if (message.reply)
            ExtendReply.internalBinaryWrite(message.reply, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Extend
 */
export const Extend = new Extend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtendReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtendReply", [
            { no: 1, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "params", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ExtendReplyParam }
        ]);
    }
    create(value) {
        const message = { uri: "", params: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string uri */ 1:
                    message.uri = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ExtendReplyParam params */ 2:
                    message.params.push(ExtendReplyParam.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string uri = 1; */
        if (message.uri !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.uri);
        /* repeated bilibili.app.dynamic.v2.ExtendReplyParam params = 2; */
        for (let i = 0; i < message.params.length; i++)
            ExtendReplyParam.internalBinaryWrite(message.params[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtendReply
 */
export const ExtendReply = new ExtendReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ExtendReplyParam$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ExtendReplyParam", [
            { no: 1, name: "key", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "value", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { key: "", value: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string key */ 1:
                    message.key = reader.string();
                    break;
                case /* string value */ 2:
                    message.value = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string key = 1; */
        if (message.key !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.key);
        /* string value = 2; */
        if (message.value !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.value);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ExtendReplyParam
 */
export const ExtendReplyParam = new ExtendReplyParam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class FollowListItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.FollowListItem", [
            { no: 1, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "new_ep", kind: "message", T: () => NewEP },
            { no: 6, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "pos", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { seasonId: 0n, title: "", cover: "", url: "", subTitle: "", pos: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 season_id */ 1:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                case /* string url */ 4:
                    message.url = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.NewEP new_ep */ 5:
                    message.newEp = NewEP.internalBinaryRead(reader, reader.uint32(), options, message.newEp);
                    break;
                case /* string sub_title */ 6:
                    message.subTitle = reader.string();
                    break;
                case /* int64 pos */ 7:
                    message.pos = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 season_id = 1; */
        if (message.seasonId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.seasonId);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        /* string url = 4; */
        if (message.url !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.url);
        /* bilibili.app.dynamic.v2.NewEP new_ep = 5; */
        if (message.newEp)
            NewEP.internalBinaryWrite(message.newEp, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* string sub_title = 6; */
        if (message.subTitle !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.subTitle);
        /* int64 pos = 7; */
        if (message.pos !== 0n)
            writer.tag(7, WireType.Varint).int64(message.pos);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.FollowListItem
 */
export const FollowListItem = new FollowListItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GoodsItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.GoodsItem", [
            { no: 1, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "schema_package_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "source_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "jump_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "brief", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "price", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "item_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "schema_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "open_white_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "user_web_v2", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "ad_mark", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { cover: "", schemaPackageName: "", sourceType: 0, jumpUrl: "", jumpDesc: "", title: "", brief: "", price: "", itemId: 0n, schemaUrl: "", openWhiteList: [], userWebV2: false, adMark: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string cover */ 1:
                    message.cover = reader.string();
                    break;
                case /* string schema_package_name */ 2:
                    message.schemaPackageName = reader.string();
                    break;
                case /* int32 source_type */ 3:
                    message.sourceType = reader.int32();
                    break;
                case /* string jump_url */ 4:
                    message.jumpUrl = reader.string();
                    break;
                case /* string jump_desc */ 5:
                    message.jumpDesc = reader.string();
                    break;
                case /* string title */ 6:
                    message.title = reader.string();
                    break;
                case /* string brief */ 7:
                    message.brief = reader.string();
                    break;
                case /* string price */ 8:
                    message.price = reader.string();
                    break;
                case /* int64 item_id */ 9:
                    message.itemId = reader.int64().toBigInt();
                    break;
                case /* string schema_url */ 10:
                    message.schemaUrl = reader.string();
                    break;
                case /* repeated string open_white_list */ 11:
                    message.openWhiteList.push(reader.string());
                    break;
                case /* bool user_web_v2 */ 12:
                    message.userWebV2 = reader.bool();
                    break;
                case /* string ad_mark */ 13:
                    message.adMark = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string cover = 1; */
        if (message.cover !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.cover);
        /* string schema_package_name = 2; */
        if (message.schemaPackageName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.schemaPackageName);
        /* int32 source_type = 3; */
        if (message.sourceType !== 0)
            writer.tag(3, WireType.Varint).int32(message.sourceType);
        /* string jump_url = 4; */
        if (message.jumpUrl !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.jumpUrl);
        /* string jump_desc = 5; */
        if (message.jumpDesc !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.jumpDesc);
        /* string title = 6; */
        if (message.title !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.title);
        /* string brief = 7; */
        if (message.brief !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.brief);
        /* string price = 8; */
        if (message.price !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.price);
        /* int64 item_id = 9; */
        if (message.itemId !== 0n)
            writer.tag(9, WireType.Varint).int64(message.itemId);
        /* string schema_url = 10; */
        if (message.schemaUrl !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.schemaUrl);
        /* repeated string open_white_list = 11; */
        for (let i = 0; i < message.openWhiteList.length; i++)
            writer.tag(11, WireType.LengthDelimited).string(message.openWhiteList[i]);
        /* bool user_web_v2 = 12; */
        if (message.userWebV2 !== false)
            writer.tag(12, WireType.Varint).bool(message.userWebV2);
        /* string ad_mark = 13; */
        if (message.adMark !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.adMark);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.GoodsItem
 */
export const GoodsItem = new GoodsItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class GuideBarInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.GuideBarInfo", [
            { no: 1, name: "show", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "position", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "jump_page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "jump_position", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { show: 0, page: 0, position: 0, desc: "", jumpPage: 0, jumpPosition: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 show */ 1:
                    message.show = reader.int32();
                    break;
                case /* int32 page */ 2:
                    message.page = reader.int32();
                    break;
                case /* int32 position */ 3:
                    message.position = reader.int32();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                case /* int32 jump_page */ 5:
                    message.jumpPage = reader.int32();
                    break;
                case /* int32 jump_position */ 6:
                    message.jumpPosition = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 show = 1; */
        if (message.show !== 0)
            writer.tag(1, WireType.Varint).int32(message.show);
        /* int32 page = 2; */
        if (message.page !== 0)
            writer.tag(2, WireType.Varint).int32(message.page);
        /* int32 position = 3; */
        if (message.position !== 0)
            writer.tag(3, WireType.Varint).int32(message.position);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        /* int32 jump_page = 5; */
        if (message.jumpPage !== 0)
            writer.tag(5, WireType.Varint).int32(message.jumpPage);
        /* int32 jump_position = 6; */
        if (message.jumpPosition !== 0)
            writer.tag(6, WireType.Varint).int32(message.jumpPosition);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.GuideBarInfo
 */
export const GuideBarInfo = new GuideBarInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class HighlightText$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.HighlightText", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text_style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.HighlightTextStyle", HighlightTextStyle] },
            { no: 3, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", textStyle: 0, jumpUrl: "", icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.HighlightTextStyle text_style */ 2:
                    message.textStyle = reader.int32();
                    break;
                case /* string jump_url */ 3:
                    message.jumpUrl = reader.string();
                    break;
                case /* string icon */ 4:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* bilibili.app.dynamic.v2.HighlightTextStyle text_style = 2; */
        if (message.textStyle !== 0)
            writer.tag(2, WireType.Varint).int32(message.textStyle);
        /* string jump_url = 3; */
        if (message.jumpUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.jumpUrl);
        /* string icon = 4; */
        if (message.icon !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.HighlightText
 */
export const HighlightText = new HighlightText$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IconBadge$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.IconBadge", [
            { no: 1, name: "icon_bg_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { iconBgUrl: "", text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon_bg_url */ 1:
                    message.iconBgUrl = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon_bg_url = 1; */
        if (message.iconBgUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.iconBgUrl);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.IconBadge
 */
export const IconBadge = new IconBadge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class IconButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.IconButton", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon_head", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon_tail", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", iconHead: "", iconTail: "", jumpUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string icon_head */ 2:
                    message.iconHead = reader.string();
                    break;
                case /* string icon_tail */ 3:
                    message.iconTail = reader.string();
                    break;
                case /* string jump_uri */ 4:
                    message.jumpUri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string icon_head = 2; */
        if (message.iconHead !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.iconHead);
        /* string icon_tail = 3; */
        if (message.iconTail !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.iconTail);
        /* string jump_uri = 4; */
        if (message.jumpUri !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.jumpUri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.IconButton
 */
export const IconButton = new IconButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InfoOGV$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.InfoOGV", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "sub_module", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "", icon: "", subModule: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                case /* string sub_module */ 4:
                    message.subModule = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        /* string sub_module = 4; */
        if (message.subModule !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.subModule);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.InfoOGV
 */
export const InfoOGV = new InfoOGV$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InteractionFace$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.InteractionFace", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, face: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string face */ 2:
                    message.face = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string face = 2; */
        if (message.face !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.face);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.InteractionFace
 */
export const InteractionFace = new InteractionFace$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InteractionItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.InteractionItem", [
            { no: 1, name: "icon_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LocalIconType", LocalIconType] },
            { no: 2, name: "desc", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Description },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "comment_mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "faces", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InteractionFace },
            { no: 8, name: "stat", kind: "message", T: () => InteractionStat },
            { no: 9, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { iconType: 0, desc: [], uri: "", dynamicId: "", commentMid: 0n, faces: [], icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.LocalIconType icon_type */ 1:
                    message.iconType = reader.int32();
                    break;
                case /* repeated bilibili.app.dynamic.v2.Description desc */ 2:
                    message.desc.push(Description.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string dynamic_id */ 4:
                    message.dynamicId = reader.string();
                    break;
                case /* int64 comment_mid */ 6:
                    message.commentMid = reader.int64().toBigInt();
                    break;
                case /* repeated bilibili.app.dynamic.v2.InteractionFace faces */ 7:
                    message.faces.push(InteractionFace.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.InteractionStat stat */ 8:
                    message.stat = InteractionStat.internalBinaryRead(reader, reader.uint32(), options, message.stat);
                    break;
                case /* string icon */ 9:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.LocalIconType icon_type = 1; */
        if (message.iconType !== 0)
            writer.tag(1, WireType.Varint).int32(message.iconType);
        /* repeated bilibili.app.dynamic.v2.Description desc = 2; */
        for (let i = 0; i < message.desc.length; i++)
            Description.internalBinaryWrite(message.desc[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string dynamic_id = 4; */
        if (message.dynamicId !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.dynamicId);
        /* int64 comment_mid = 6; */
        if (message.commentMid !== 0n)
            writer.tag(6, WireType.Varint).int64(message.commentMid);
        /* repeated bilibili.app.dynamic.v2.InteractionFace faces = 7; */
        for (let i = 0; i < message.faces.length; i++)
            InteractionFace.internalBinaryWrite(message.faces[i], writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.InteractionStat stat = 8; */
        if (message.stat)
            InteractionStat.internalBinaryWrite(message.stat, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string icon = 9; */
        if (message.icon !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.InteractionItem
 */
export const InteractionItem = new InteractionItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class InteractionStat$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.InteractionStat", [
            { no: 1, name: "like", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { like: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 like */ 1:
                    message.like = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 like = 1; */
        if (message.like !== 0n)
            writer.tag(1, WireType.Varint).int64(message.like);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.InteractionStat
 */
export const InteractionStat = new InteractionStat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeAnimation$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LikeAnimation", [
            { no: 1, name: "begin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "proc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "end", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "like_icon_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { begin: "", proc: "", end: "", likeIconId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string begin */ 1:
                    message.begin = reader.string();
                    break;
                case /* string proc */ 2:
                    message.proc = reader.string();
                    break;
                case /* string end */ 3:
                    message.end = reader.string();
                    break;
                case /* int64 like_icon_id */ 4:
                    message.likeIconId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string begin = 1; */
        if (message.begin !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.begin);
        /* string proc = 2; */
        if (message.proc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.proc);
        /* string end = 3; */
        if (message.end !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.end);
        /* int64 like_icon_id = 4; */
        if (message.likeIconId !== 0n)
            writer.tag(4, WireType.Varint).int64(message.likeIconId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LikeAnimation
 */
export const LikeAnimation = new LikeAnimation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LikeInfo", [
            { no: 1, name: "animation", kind: "message", T: () => LikeAnimation },
            { no: 2, name: "is_like", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { isLike: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.LikeAnimation animation */ 1:
                    message.animation = LikeAnimation.internalBinaryRead(reader, reader.uint32(), options, message.animation);
                    break;
                case /* bool is_like */ 2:
                    message.isLike = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.LikeAnimation animation = 1; */
        if (message.animation)
            LikeAnimation.internalBinaryWrite(message.animation, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool is_like = 2; */
        if (message.isLike !== false)
            writer.tag(2, WireType.Varint).bool(message.isLike);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LikeInfo
 */
export const LikeInfo = new LikeInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeListReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LikeListReply", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleAuthor },
            { no: 2, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "total_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { list: [], hasMore: false, totalCount: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ModuleAuthor list */ 1:
                    message.list.push(ModuleAuthor.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool has_more */ 2:
                    message.hasMore = reader.bool();
                    break;
                case /* int64 total_count */ 3:
                    message.totalCount = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ModuleAuthor list = 1; */
        for (let i = 0; i < message.list.length; i++)
            ModuleAuthor.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool has_more = 2; */
        if (message.hasMore !== false)
            writer.tag(2, WireType.Varint).bool(message.hasMore);
        /* int64 total_count = 3; */
        if (message.totalCount !== 0n)
            writer.tag(3, WireType.Varint).int64(message.totalCount);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LikeListReply
 */
export const LikeListReply = new LikeListReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeListReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LikeListReq", [
            { no: 1, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "uid_offset", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { dynamicId: "", dynType: 0n, rid: 0n, uidOffset: 0n, page: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string dynamic_id */ 1:
                    message.dynamicId = reader.string();
                    break;
                case /* int64 dyn_type */ 2:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* int64 rid */ 3:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* int64 uid_offset */ 4:
                    message.uidOffset = reader.int64().toBigInt();
                    break;
                case /* int32 page */ 5:
                    message.page = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string dynamic_id = 1; */
        if (message.dynamicId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.dynamicId);
        /* int64 dyn_type = 2; */
        if (message.dynType !== 0n)
            writer.tag(2, WireType.Varint).int64(message.dynType);
        /* int64 rid = 3; */
        if (message.rid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rid);
        /* int64 uid_offset = 4; */
        if (message.uidOffset !== 0n)
            writer.tag(4, WireType.Varint).int64(message.uidOffset);
        /* int32 page = 5; */
        if (message.page !== 0)
            writer.tag(5, WireType.Varint).int32(message.page);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LikeListReq
 */
export const LikeListReq = new LikeListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LikeUser$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LikeUser", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uname", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { uid: 0n, uname: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string uname */ 2:
                    message.uname = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* string uname = 2; */
        if (message.uname !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uname);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LikeUser
 */
export const LikeUser = new LikeUser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LiveInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LiveInfo", [
            { no: 1, name: "is_living", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "live_state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LiveState", LiveState] }
        ]);
    }
    create(value) {
        const message = { isLiving: 0, uri: "", liveState: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 is_living */ 1:
                    message.isLiving = reader.int32();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.LiveState live_state */ 3:
                    message.liveState = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 is_living = 1; */
        if (message.isLiving !== 0)
            writer.tag(1, WireType.Varint).int32(message.isLiving);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.LiveState live_state = 3; */
        if (message.liveState !== 0)
            writer.tag(3, WireType.Varint).int32(message.liveState);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LiveInfo
 */
export const LiveInfo = new LiveInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class LivePendant$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.LivePendant", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "pendant_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { text: "", icon: "", pendantId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string icon */ 2:
                    message.icon = reader.string();
                    break;
                case /* int64 pendant_id */ 3:
                    message.pendantId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string icon = 2; */
        if (message.icon !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.icon);
        /* int64 pendant_id = 3; */
        if (message.pendantId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.pendantId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.LivePendant
 */
export const LivePendant = new LivePendant$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MatchTeam$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MatchTeam", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "night_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, name: "", cover: "", color: "", nightColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                case /* string color */ 4:
                    message.color = reader.string();
                    break;
                case /* string night_color */ 5:
                    message.nightColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        /* string color = 4; */
        if (message.color !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.color);
        /* string night_color = 5; */
        if (message.nightColor !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.nightColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MatchTeam
 */
export const MatchTeam = new MatchTeam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynApplet$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynApplet", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "button_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, uri: "", title: "", subTitle: "", cover: "", icon: "", label: "", buttonTitle: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                case /* string sub_title */ 5:
                    message.subTitle = reader.string();
                    break;
                case /* string cover */ 6:
                    message.cover = reader.string();
                    break;
                case /* string icon */ 7:
                    message.icon = reader.string();
                    break;
                case /* string label */ 8:
                    message.label = reader.string();
                    break;
                case /* string button_title */ 9:
                    message.buttonTitle = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        /* string sub_title = 5; */
        if (message.subTitle !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.subTitle);
        /* string cover = 6; */
        if (message.cover !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.cover);
        /* string icon = 7; */
        if (message.icon !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.icon);
        /* string label = 8; */
        if (message.label !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.label);
        /* string button_title = 9; */
        if (message.buttonTitle !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.buttonTitle);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynApplet
 */
export const MdlDynApplet = new MdlDynApplet$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynArchive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynArchive", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_left_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_left_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_left_text_3", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "avid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "media_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MediaType", MediaType] },
            { no: 10, name: "dimension", kind: "message", T: () => Dimension },
            { no: 11, name: "badge", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VideoBadge },
            { no: 12, name: "can_play", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "stype", kind: "enum", T: () => ["bilibili.app.dynamic.v2.VideoType", VideoType] },
            { no: 14, name: "isPGC", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 15, name: "inlineURL", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "EpisodeId", kind: "scalar", jsonName: "EpisodeId", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "SubType", kind: "scalar", jsonName: "SubType", T: 5 /*ScalarType.INT32*/ },
            { no: 18, name: "PgcSeasonId", kind: "scalar", jsonName: "PgcSeasonId", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 19, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 22, name: "is_preview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 23, name: "badge_category", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VideoBadge },
            { no: 24, name: "is_feature", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 25, name: "reserve_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ReserveType", ReserveType] },
            { no: 26, name: "bvid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 27, name: "view", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", coverLeftText1: "", coverLeftText2: "", coverLeftText3: "", avid: 0n, cid: 0n, mediaType: 0, badge: [], canPlay: false, stype: 0, isPGC: false, inlineURL: "", episodeId: 0n, subType: 0, pgcSeasonId: 0n, playIcon: "", duration: 0n, jumpUrl: "", isPreview: false, badgeCategory: [], isFeature: false, reserveType: 0, bvid: "", view: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string cover_left_text_1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text_2 */ 5:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* string cover_left_text_3 */ 6:
                    message.coverLeftText3 = reader.string();
                    break;
                case /* int64 avid */ 7:
                    message.avid = reader.int64().toBigInt();
                    break;
                case /* int64 cid */ 8:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.MediaType media_type */ 9:
                    message.mediaType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Dimension dimension */ 10:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge */ 11:
                    message.badge.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool can_play */ 12:
                    message.canPlay = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.VideoType stype */ 13:
                    message.stype = reader.int32();
                    break;
                case /* bool isPGC */ 14:
                    message.isPGC = reader.bool();
                    break;
                case /* string inlineURL */ 15:
                    message.inlineURL = reader.string();
                    break;
                case /* int64 EpisodeId = 16 [json_name = "EpisodeId"];*/ 16:
                    message.episodeId = reader.int64().toBigInt();
                    break;
                case /* int32 SubType = 17 [json_name = "SubType"];*/ 17:
                    message.subType = reader.int32();
                    break;
                case /* int64 PgcSeasonId = 18 [json_name = "PgcSeasonId"];*/ 18:
                    message.pgcSeasonId = reader.int64().toBigInt();
                    break;
                case /* string play_icon */ 19:
                    message.playIcon = reader.string();
                    break;
                case /* int64 duration */ 20:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* string jump_url */ 21:
                    message.jumpUrl = reader.string();
                    break;
                case /* bool is_preview */ 22:
                    message.isPreview = reader.bool();
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category */ 23:
                    message.badgeCategory.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool is_feature */ 24:
                    message.isFeature = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.ReserveType reserve_type */ 25:
                    message.reserveType = reader.int32();
                    break;
                case /* string bvid */ 26:
                    message.bvid = reader.string();
                    break;
                case /* int32 view */ 27:
                    message.view = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string cover_left_text_1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text_2 = 5; */
        if (message.coverLeftText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLeftText2);
        /* string cover_left_text_3 = 6; */
        if (message.coverLeftText3 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLeftText3);
        /* int64 avid = 7; */
        if (message.avid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.avid);
        /* int64 cid = 8; */
        if (message.cid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.cid);
        /* bilibili.app.dynamic.v2.MediaType media_type = 9; */
        if (message.mediaType !== 0)
            writer.tag(9, WireType.Varint).int32(message.mediaType);
        /* bilibili.app.dynamic.v2.Dimension dimension = 10; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge = 11; */
        for (let i = 0; i < message.badge.length; i++)
            VideoBadge.internalBinaryWrite(message.badge[i], writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bool can_play = 12; */
        if (message.canPlay !== false)
            writer.tag(12, WireType.Varint).bool(message.canPlay);
        /* bilibili.app.dynamic.v2.VideoType stype = 13; */
        if (message.stype !== 0)
            writer.tag(13, WireType.Varint).int32(message.stype);
        /* bool isPGC = 14; */
        if (message.isPGC !== false)
            writer.tag(14, WireType.Varint).bool(message.isPGC);
        /* string inlineURL = 15; */
        if (message.inlineURL !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.inlineURL);
        /* int64 EpisodeId = 16 [json_name = "EpisodeId"]; */
        if (message.episodeId !== 0n)
            writer.tag(16, WireType.Varint).int64(message.episodeId);
        /* int32 SubType = 17 [json_name = "SubType"]; */
        if (message.subType !== 0)
            writer.tag(17, WireType.Varint).int32(message.subType);
        /* int64 PgcSeasonId = 18 [json_name = "PgcSeasonId"]; */
        if (message.pgcSeasonId !== 0n)
            writer.tag(18, WireType.Varint).int64(message.pgcSeasonId);
        /* string play_icon = 19; */
        if (message.playIcon !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.playIcon);
        /* int64 duration = 20; */
        if (message.duration !== 0n)
            writer.tag(20, WireType.Varint).int64(message.duration);
        /* string jump_url = 21; */
        if (message.jumpUrl !== "")
            writer.tag(21, WireType.LengthDelimited).string(message.jumpUrl);
        /* bool is_preview = 22; */
        if (message.isPreview !== false)
            writer.tag(22, WireType.Varint).bool(message.isPreview);
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category = 23; */
        for (let i = 0; i < message.badgeCategory.length; i++)
            VideoBadge.internalBinaryWrite(message.badgeCategory[i], writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* bool is_feature = 24; */
        if (message.isFeature !== false)
            writer.tag(24, WireType.Varint).bool(message.isFeature);
        /* bilibili.app.dynamic.v2.ReserveType reserve_type = 25; */
        if (message.reserveType !== 0)
            writer.tag(25, WireType.Varint).int32(message.reserveType);
        /* string bvid = 26; */
        if (message.bvid !== "")
            writer.tag(26, WireType.LengthDelimited).string(message.bvid);
        /* int32 view = 27; */
        if (message.view !== 0)
            writer.tag(27, WireType.Varint).int32(message.view);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynArchive
 */
export const MdlDynArchive = new MdlDynArchive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynArticle$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynArticle", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "covers", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "templateID", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, uri: "", title: "", desc: "", covers: [], label: "", templateID: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                case /* repeated string covers */ 5:
                    message.covers.push(reader.string());
                    break;
                case /* string label */ 6:
                    message.label = reader.string();
                    break;
                case /* int32 templateID */ 7:
                    message.templateID = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        /* repeated string covers = 5; */
        for (let i = 0; i < message.covers.length; i++)
            writer.tag(5, WireType.LengthDelimited).string(message.covers[i]);
        /* string label = 6; */
        if (message.label !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.label);
        /* int32 templateID = 7; */
        if (message.templateID !== 0)
            writer.tag(7, WireType.Varint).int32(message.templateID);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynArticle
 */
export const MdlDynArticle = new MdlDynArticle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynCommon$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynCommon", [
            { no: 1, name: "oid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "bizType", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "sketchID", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MdlDynCommonType", MdlDynCommonType] },
            { no: 10, name: "badge", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VideoBadge },
            { no: 11, name: "button", kind: "message", T: () => AdditionalButton }
        ]);
    }
    create(value) {
        const message = { oid: 0n, uri: "", title: "", desc: "", cover: "", label: "", bizType: 0, sketchID: 0n, style: 0, badge: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 oid */ 1:
                    message.oid = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                case /* string cover */ 5:
                    message.cover = reader.string();
                    break;
                case /* string label */ 6:
                    message.label = reader.string();
                    break;
                case /* int32 bizType */ 7:
                    message.bizType = reader.int32();
                    break;
                case /* int64 sketchID */ 8:
                    message.sketchID = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynCommonType style */ 9:
                    message.style = reader.int32();
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge */ 10:
                    message.badge.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 11:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 oid = 1; */
        if (message.oid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.oid);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        /* string cover = 5; */
        if (message.cover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.cover);
        /* string label = 6; */
        if (message.label !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.label);
        /* int32 bizType = 7; */
        if (message.bizType !== 0)
            writer.tag(7, WireType.Varint).int32(message.bizType);
        /* int64 sketchID = 8; */
        if (message.sketchID !== 0n)
            writer.tag(8, WireType.Varint).int64(message.sketchID);
        /* bilibili.app.dynamic.v2.MdlDynCommonType style = 9; */
        if (message.style !== 0)
            writer.tag(9, WireType.Varint).int32(message.style);
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge = 10; */
        for (let i = 0; i < message.badge.length; i++)
            VideoBadge.internalBinaryWrite(message.badge[i], writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionalButton button = 11; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynCommon
 */
export const MdlDynCommon = new MdlDynCommon$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynCourBatch$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynCourBatch", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "badge", kind: "message", T: () => VideoBadge },
            { no: 7, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", text1: "", text2: "", playIcon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string text_1 */ 4:
                    message.text1 = reader.string();
                    break;
                case /* string text_2 */ 5:
                    message.text2 = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.VideoBadge badge */ 6:
                    message.badge = VideoBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* string play_icon */ 7:
                    message.playIcon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string text_1 = 4; */
        if (message.text1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.text1);
        /* string text_2 = 5; */
        if (message.text2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.text2);
        /* bilibili.app.dynamic.v2.VideoBadge badge = 6; */
        if (message.badge)
            VideoBadge.internalBinaryWrite(message.badge, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string play_icon = 7; */
        if (message.playIcon !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.playIcon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynCourBatch
 */
export const MdlDynCourBatch = new MdlDynCourBatch$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynCourSeason$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynCourSeason", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "badge", kind: "message", T: () => VideoBadge },
            { no: 7, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", text1: "", desc: "", playIcon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string text_1 */ 4:
                    message.text1 = reader.string();
                    break;
                case /* string desc */ 5:
                    message.desc = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.VideoBadge badge */ 6:
                    message.badge = VideoBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* string play_icon */ 7:
                    message.playIcon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string text_1 = 4; */
        if (message.text1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.text1);
        /* string desc = 5; */
        if (message.desc !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.desc);
        /* bilibili.app.dynamic.v2.VideoBadge badge = 6; */
        if (message.badge)
            VideoBadge.internalBinaryWrite(message.badge, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string play_icon = 7; */
        if (message.playIcon !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.playIcon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynCourSeason
 */
export const MdlDynCourSeason = new MdlDynCourSeason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynDraw$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynDraw", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MdlDynDrawItem },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { items: [], uri: "", id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.MdlDynDrawItem items */ 1:
                    message.items.push(MdlDynDrawItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* int64 id */ 3:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.MdlDynDrawItem items = 1; */
        for (let i = 0; i < message.items.length; i++)
            MdlDynDrawItem.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* int64 id = 3; */
        if (message.id !== 0n)
            writer.tag(3, WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynDraw
 */
export const MdlDynDraw = new MdlDynDraw$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynDrawItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynDrawItem", [
            { no: 1, name: "src", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "width", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "height", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "size", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 5, name: "tags", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => MdlDynDrawTag }
        ]);
    }
    create(value) {
        const message = { src: "", width: 0n, height: 0n, size: 0, tags: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string src */ 1:
                    message.src = reader.string();
                    break;
                case /* int64 width */ 2:
                    message.width = reader.int64().toBigInt();
                    break;
                case /* int64 height */ 3:
                    message.height = reader.int64().toBigInt();
                    break;
                case /* float size */ 4:
                    message.size = reader.float();
                    break;
                case /* repeated bilibili.app.dynamic.v2.MdlDynDrawTag tags */ 5:
                    message.tags.push(MdlDynDrawTag.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string src = 1; */
        if (message.src !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.src);
        /* int64 width = 2; */
        if (message.width !== 0n)
            writer.tag(2, WireType.Varint).int64(message.width);
        /* int64 height = 3; */
        if (message.height !== 0n)
            writer.tag(3, WireType.Varint).int64(message.height);
        /* float size = 4; */
        if (message.size !== 0)
            writer.tag(4, WireType.Bit32).float(message.size);
        /* repeated bilibili.app.dynamic.v2.MdlDynDrawTag tags = 5; */
        for (let i = 0; i < message.tags.length; i++)
            MdlDynDrawTag.internalBinaryWrite(message.tags[i], writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynDrawItem
 */
export const MdlDynDrawItem = new MdlDynDrawItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynDrawTag$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynDrawTag", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MdlDynDrawTagType", MdlDynDrawTagType] },
            { no: 2, name: "item", kind: "message", T: () => MdlDynDrawTagItem }
        ]);
    }
    create(value) {
        const message = { type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.MdlDynDrawTagType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynDrawTagItem item */ 2:
                    message.item = MdlDynDrawTagItem.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.MdlDynDrawTagType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.MdlDynDrawTagItem item = 2; */
        if (message.item)
            MdlDynDrawTagItem.internalBinaryWrite(message.item, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynDrawTag
 */
export const MdlDynDrawTag = new MdlDynDrawTag$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynDrawTagItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynDrawTagItem", [
            { no: 1, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "x", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "y", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "orientation", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "source", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "item_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "tid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "poi", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "schema_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { url: "", text: "", x: 0n, y: 0n, orientation: 0, source: 0, itemId: 0n, mid: 0n, tid: 0n, poi: "", schemaUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string url */ 1:
                    message.url = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* int64 x */ 3:
                    message.x = reader.int64().toBigInt();
                    break;
                case /* int64 y */ 4:
                    message.y = reader.int64().toBigInt();
                    break;
                case /* int32 orientation */ 5:
                    message.orientation = reader.int32();
                    break;
                case /* int32 source */ 6:
                    message.source = reader.int32();
                    break;
                case /* int64 item_id */ 7:
                    message.itemId = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 8:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* int64 tid */ 9:
                    message.tid = reader.int64().toBigInt();
                    break;
                case /* string poi */ 10:
                    message.poi = reader.string();
                    break;
                case /* string schema_url */ 11:
                    message.schemaUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string url = 1; */
        if (message.url !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.url);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* int64 x = 3; */
        if (message.x !== 0n)
            writer.tag(3, WireType.Varint).int64(message.x);
        /* int64 y = 4; */
        if (message.y !== 0n)
            writer.tag(4, WireType.Varint).int64(message.y);
        /* int32 orientation = 5; */
        if (message.orientation !== 0)
            writer.tag(5, WireType.Varint).int32(message.orientation);
        /* int32 source = 6; */
        if (message.source !== 0)
            writer.tag(6, WireType.Varint).int32(message.source);
        /* int64 item_id = 7; */
        if (message.itemId !== 0n)
            writer.tag(7, WireType.Varint).int64(message.itemId);
        /* int64 mid = 8; */
        if (message.mid !== 0n)
            writer.tag(8, WireType.Varint).int64(message.mid);
        /* int64 tid = 9; */
        if (message.tid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.tid);
        /* string poi = 10; */
        if (message.poi !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.poi);
        /* string schema_url = 11; */
        if (message.schemaUrl !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.schemaUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynDrawTagItem
 */
export const MdlDynDrawTagItem = new MdlDynDrawTagItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynForward$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynForward", [
            { no: 1, name: "item", kind: "message", T: () => DynamicItem },
            { no: 2, name: "rtype", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { rtype: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynamicItem item */ 1:
                    message.item = DynamicItem.internalBinaryRead(reader, reader.uint32(), options, message.item);
                    break;
                case /* int32 rtype */ 2:
                    message.rtype = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynamicItem item = 1; */
        if (message.item)
            DynamicItem.internalBinaryWrite(message.item, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int32 rtype = 2; */
        if (message.rtype !== 0)
            writer.tag(2, WireType.Varint).int32(message.rtype);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynForward
 */
export const MdlDynForward = new MdlDynForward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynLive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynLive", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_label2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "live_state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LiveState", LiveState] },
            { no: 8, name: "badge", kind: "message", T: () => VideoBadge },
            { no: 9, name: "reserve_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ReserveType", ReserveType] }
        ]);
    }
    create(value) {
        const message = { id: 0n, uri: "", title: "", cover: "", coverLabel: "", coverLabel2: "", liveState: 0, reserveType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string cover */ 4:
                    message.cover = reader.string();
                    break;
                case /* string cover_label */ 5:
                    message.coverLabel = reader.string();
                    break;
                case /* string cover_label2 */ 6:
                    message.coverLabel2 = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.LiveState live_state */ 7:
                    message.liveState = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.VideoBadge badge */ 8:
                    message.badge = VideoBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* bilibili.app.dynamic.v2.ReserveType reserve_type */ 9:
                    message.reserveType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string cover = 4; */
        if (message.cover !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.cover);
        /* string cover_label = 5; */
        if (message.coverLabel !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLabel);
        /* string cover_label2 = 6; */
        if (message.coverLabel2 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLabel2);
        /* bilibili.app.dynamic.v2.LiveState live_state = 7; */
        if (message.liveState !== 0)
            writer.tag(7, WireType.Varint).int32(message.liveState);
        /* bilibili.app.dynamic.v2.VideoBadge badge = 8; */
        if (message.badge)
            VideoBadge.internalBinaryWrite(message.badge, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ReserveType reserve_type = 9; */
        if (message.reserveType !== 0)
            writer.tag(9, WireType.Varint).int32(message.reserveType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynLive
 */
export const MdlDynLive = new MdlDynLive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynLiveRcmd$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynLiveRcmd", [
            { no: 1, name: "content", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "reserve_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ReserveType", ReserveType] },
            { no: 3, name: "pendant", kind: "message", T: () => LivePendant }
        ]);
    }
    create(value) {
        const message = { content: "", reserveType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string content */ 1:
                    message.content = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ReserveType reserve_type */ 2:
                    message.reserveType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.LivePendant pendant */ 3:
                    message.pendant = LivePendant.internalBinaryRead(reader, reader.uint32(), options, message.pendant);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string content = 1; */
        if (message.content !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.content);
        /* bilibili.app.dynamic.v2.ReserveType reserve_type = 2; */
        if (message.reserveType !== 0)
            writer.tag(2, WireType.Varint).int32(message.reserveType);
        /* bilibili.app.dynamic.v2.LivePendant pendant = 3; */
        if (message.pendant)
            LivePendant.internalBinaryWrite(message.pendant, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynLiveRcmd
 */
export const MdlDynLiveRcmd = new MdlDynLiveRcmd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynMedialist$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynMedialist", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "sub_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "badge", kind: "message", T: () => VideoBadge }
        ]);
    }
    create(value) {
        const message = { id: 0n, uri: "", title: "", subTitle: "", cover: "", coverType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* string title */ 3:
                    message.title = reader.string();
                    break;
                case /* string sub_title */ 4:
                    message.subTitle = reader.string();
                    break;
                case /* string cover */ 5:
                    message.cover = reader.string();
                    break;
                case /* int32 cover_type */ 6:
                    message.coverType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.VideoBadge badge */ 7:
                    message.badge = VideoBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* string title = 3; */
        if (message.title !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.title);
        /* string sub_title = 4; */
        if (message.subTitle !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.subTitle);
        /* string cover = 5; */
        if (message.cover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.cover);
        /* int32 cover_type = 6; */
        if (message.coverType !== 0)
            writer.tag(6, WireType.Varint).int32(message.coverType);
        /* bilibili.app.dynamic.v2.VideoBadge badge = 7; */
        if (message.badge)
            VideoBadge.internalBinaryWrite(message.badge, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynMedialist
 */
export const MdlDynMedialist = new MdlDynMedialist$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynMusic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynMusic", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "up_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "label1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "upper", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, uri: "", upId: 0n, title: "", cover: "", label1: "", upper: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                case /* int64 up_id */ 3:
                    message.upId = reader.int64().toBigInt();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                case /* string cover */ 5:
                    message.cover = reader.string();
                    break;
                case /* string label1 */ 6:
                    message.label1 = reader.string();
                    break;
                case /* string upper */ 7:
                    message.upper = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        /* int64 up_id = 3; */
        if (message.upId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.upId);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        /* string cover = 5; */
        if (message.cover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.cover);
        /* string label1 = 6; */
        if (message.label1 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.label1);
        /* string upper = 7; */
        if (message.upper !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.upper);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynMusic
 */
export const MdlDynMusic = new MdlDynMusic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynPGC$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynPGC", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_left_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_left_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_left_text_3", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "epid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "media_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MediaType", MediaType] },
            { no: 12, name: "sub_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.VideoSubType", VideoSubType] },
            { no: 13, name: "is_preview", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "dimension", kind: "message", T: () => Dimension },
            { no: 15, name: "badge", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VideoBadge },
            { no: 16, name: "can_play", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 17, name: "season", kind: "message", T: () => PGCSeason },
            { no: 18, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 19, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 20, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 21, name: "badge_category", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => VideoBadge },
            { no: 22, name: "is_feature", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", coverLeftText1: "", coverLeftText2: "", coverLeftText3: "", cid: 0n, seasonId: 0n, epid: 0n, aid: 0n, mediaType: 0, subType: 0, isPreview: false, badge: [], canPlay: false, playIcon: "", duration: 0n, jumpUrl: "", badgeCategory: [], isFeature: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string cover_left_text_1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text_2 */ 5:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* string cover_left_text_3 */ 6:
                    message.coverLeftText3 = reader.string();
                    break;
                case /* int64 cid */ 7:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* int64 season_id */ 8:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* int64 epid */ 9:
                    message.epid = reader.int64().toBigInt();
                    break;
                case /* int64 aid */ 10:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.MediaType media_type */ 11:
                    message.mediaType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.VideoSubType sub_type */ 12:
                    message.subType = reader.int32();
                    break;
                case /* bool is_preview */ 13:
                    message.isPreview = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.Dimension dimension */ 14:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge */ 15:
                    message.badge.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool can_play */ 16:
                    message.canPlay = reader.bool();
                    break;
                case /* bilibili.app.dynamic.v2.PGCSeason season */ 17:
                    message.season = PGCSeason.internalBinaryRead(reader, reader.uint32(), options, message.season);
                    break;
                case /* string play_icon */ 18:
                    message.playIcon = reader.string();
                    break;
                case /* int64 duration */ 19:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* string jump_url */ 20:
                    message.jumpUrl = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category */ 21:
                    message.badgeCategory.push(VideoBadge.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool is_feature */ 22:
                    message.isFeature = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string cover_left_text_1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text_2 = 5; */
        if (message.coverLeftText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLeftText2);
        /* string cover_left_text_3 = 6; */
        if (message.coverLeftText3 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLeftText3);
        /* int64 cid = 7; */
        if (message.cid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.cid);
        /* int64 season_id = 8; */
        if (message.seasonId !== 0n)
            writer.tag(8, WireType.Varint).int64(message.seasonId);
        /* int64 epid = 9; */
        if (message.epid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.epid);
        /* int64 aid = 10; */
        if (message.aid !== 0n)
            writer.tag(10, WireType.Varint).int64(message.aid);
        /* bilibili.app.dynamic.v2.MediaType media_type = 11; */
        if (message.mediaType !== 0)
            writer.tag(11, WireType.Varint).int32(message.mediaType);
        /* bilibili.app.dynamic.v2.VideoSubType sub_type = 12; */
        if (message.subType !== 0)
            writer.tag(12, WireType.Varint).int32(message.subType);
        /* bool is_preview = 13; */
        if (message.isPreview !== false)
            writer.tag(13, WireType.Varint).bool(message.isPreview);
        /* bilibili.app.dynamic.v2.Dimension dimension = 14; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge = 15; */
        for (let i = 0; i < message.badge.length; i++)
            VideoBadge.internalBinaryWrite(message.badge[i], writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* bool can_play = 16; */
        if (message.canPlay !== false)
            writer.tag(16, WireType.Varint).bool(message.canPlay);
        /* bilibili.app.dynamic.v2.PGCSeason season = 17; */
        if (message.season)
            PGCSeason.internalBinaryWrite(message.season, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* string play_icon = 18; */
        if (message.playIcon !== "")
            writer.tag(18, WireType.LengthDelimited).string(message.playIcon);
        /* int64 duration = 19; */
        if (message.duration !== 0n)
            writer.tag(19, WireType.Varint).int64(message.duration);
        /* string jump_url = 20; */
        if (message.jumpUrl !== "")
            writer.tag(20, WireType.LengthDelimited).string(message.jumpUrl);
        /* repeated bilibili.app.dynamic.v2.VideoBadge badge_category = 21; */
        for (let i = 0; i < message.badgeCategory.length; i++)
            VideoBadge.internalBinaryWrite(message.badgeCategory[i], writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bool is_feature = 22; */
        if (message.isFeature !== false)
            writer.tag(22, WireType.Varint).bool(message.isFeature);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynPGC
 */
export const MdlDynPGC = new MdlDynPGC$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynSubscription$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynSubscription", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "ad_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "ad_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "badge", kind: "message", T: () => VideoBadge },
            { no: 8, name: "tips", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, adId: 0n, uri: "", title: "", cover: "", adTitle: "", tips: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* int64 ad_id */ 2:
                    message.adId = reader.int64().toBigInt();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                case /* string cover */ 5:
                    message.cover = reader.string();
                    break;
                case /* string ad_title */ 6:
                    message.adTitle = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.VideoBadge badge */ 7:
                    message.badge = VideoBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* string tips */ 8:
                    message.tips = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* int64 ad_id = 2; */
        if (message.adId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.adId);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        /* string cover = 5; */
        if (message.cover !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.cover);
        /* string ad_title = 6; */
        if (message.adTitle !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.adTitle);
        /* bilibili.app.dynamic.v2.VideoBadge badge = 7; */
        if (message.badge)
            VideoBadge.internalBinaryWrite(message.badge, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* string tips = 8; */
        if (message.tips !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.tips);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynSubscription
 */
export const MdlDynSubscription = new MdlDynSubscription$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynSubscriptionNew$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynSubscriptionNew", [
            { no: 1, name: "style", kind: "enum", T: () => ["bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle", MdlDynSubscriptionNewStyle] },
            { no: 2, name: "dyn_subscription", kind: "message", oneof: "item", T: () => MdlDynSubscription },
            { no: 3, name: "dyn_live_rcmd", kind: "message", oneof: "item", T: () => MdlDynLiveRcmd }
        ]);
    }
    create(value) {
        const message = { style: 0, item: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle style */ 1:
                    message.style = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynSubscription dyn_subscription */ 2:
                    message.item = {
                        oneofKind: "dynSubscription",
                        dynSubscription: MdlDynSubscription.internalBinaryRead(reader, reader.uint32(), options, message.item.dynSubscription)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynLiveRcmd dyn_live_rcmd */ 3:
                    message.item = {
                        oneofKind: "dynLiveRcmd",
                        dynLiveRcmd: MdlDynLiveRcmd.internalBinaryRead(reader, reader.uint32(), options, message.item.dynLiveRcmd)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.MdlDynSubscriptionNewStyle style = 1; */
        if (message.style !== 0)
            writer.tag(1, WireType.Varint).int32(message.style);
        /* bilibili.app.dynamic.v2.MdlDynSubscription dyn_subscription = 2; */
        if (message.item.oneofKind === "dynSubscription")
            MdlDynSubscription.internalBinaryWrite(message.item.dynSubscription, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynLiveRcmd dyn_live_rcmd = 3; */
        if (message.item.oneofKind === "dynLiveRcmd")
            MdlDynLiveRcmd.internalBinaryWrite(message.item.dynLiveRcmd, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynSubscriptionNew
 */
export const MdlDynSubscriptionNew = new MdlDynSubscriptionNew$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MdlDynUGCSeason$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MdlDynUGCSeason", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "cover_left_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_left_text_2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_left_text_3", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "inlineURL", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "can_play", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "play_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "avid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "dimension", kind: "message", T: () => Dimension },
            { no: 14, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", uri: "", coverLeftText1: "", coverLeftText2: "", coverLeftText3: "", id: 0n, inlineURL: "", canPlay: false, playIcon: "", avid: 0n, cid: 0n, duration: 0n, jumpUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string cover_left_text_1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text_2 */ 5:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* string cover_left_text_3 */ 6:
                    message.coverLeftText3 = reader.string();
                    break;
                case /* int64 id */ 7:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string inlineURL */ 8:
                    message.inlineURL = reader.string();
                    break;
                case /* bool can_play */ 9:
                    message.canPlay = reader.bool();
                    break;
                case /* string play_icon */ 10:
                    message.playIcon = reader.string();
                    break;
                case /* int64 avid */ 11:
                    message.avid = reader.int64().toBigInt();
                    break;
                case /* int64 cid */ 12:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.Dimension dimension */ 13:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* int64 duration */ 14:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* string jump_url */ 15:
                    message.jumpUrl = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string cover_left_text_1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text_2 = 5; */
        if (message.coverLeftText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLeftText2);
        /* string cover_left_text_3 = 6; */
        if (message.coverLeftText3 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLeftText3);
        /* int64 id = 7; */
        if (message.id !== 0n)
            writer.tag(7, WireType.Varint).int64(message.id);
        /* string inlineURL = 8; */
        if (message.inlineURL !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.inlineURL);
        /* bool can_play = 9; */
        if (message.canPlay !== false)
            writer.tag(9, WireType.Varint).bool(message.canPlay);
        /* string play_icon = 10; */
        if (message.playIcon !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.playIcon);
        /* int64 avid = 11; */
        if (message.avid !== 0n)
            writer.tag(11, WireType.Varint).int64(message.avid);
        /* int64 cid = 12; */
        if (message.cid !== 0n)
            writer.tag(12, WireType.Varint).int64(message.cid);
        /* bilibili.app.dynamic.v2.Dimension dimension = 13; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* int64 duration = 14; */
        if (message.duration !== 0n)
            writer.tag(14, WireType.Varint).int64(message.duration);
        /* string jump_url = 15; */
        if (message.jumpUrl !== "")
            writer.tag(15, WireType.LengthDelimited).string(message.jumpUrl);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MdlDynUGCSeason
 */
export const MdlDynUGCSeason = new MdlDynUGCSeason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MixUpListItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MixUpListItem", [
            { no: 1, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "special_attention", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "reddot_state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "live_info", kind: "message", T: () => MixUpListLiveItem },
            { no: 5, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "official", kind: "message", T: () => OfficialVerify },
            { no: 8, name: "vip", kind: "message", T: () => VipInfo },
            { no: 9, name: "relation", kind: "message", T: () => Relation },
            { no: 10, name: "permire_state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { uid: 0n, specialAttention: 0, reddotState: 0, name: "", face: "", permireState: 0, uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 uid */ 1:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* int32 special_attention */ 2:
                    message.specialAttention = reader.int32();
                    break;
                case /* int32 reddot_state */ 3:
                    message.reddotState = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.MixUpListLiveItem live_info */ 4:
                    message.liveInfo = MixUpListLiveItem.internalBinaryRead(reader, reader.uint32(), options, message.liveInfo);
                    break;
                case /* string name */ 5:
                    message.name = reader.string();
                    break;
                case /* string face */ 6:
                    message.face = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.OfficialVerify official */ 7:
                    message.official = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.official);
                    break;
                case /* bilibili.app.dynamic.v2.VipInfo vip */ 8:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 9:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* int32 permire_state */ 10:
                    message.permireState = reader.int32();
                    break;
                case /* string uri */ 11:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 uid = 1; */
        if (message.uid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.uid);
        /* int32 special_attention = 2; */
        if (message.specialAttention !== 0)
            writer.tag(2, WireType.Varint).int32(message.specialAttention);
        /* int32 reddot_state = 3; */
        if (message.reddotState !== 0)
            writer.tag(3, WireType.Varint).int32(message.reddotState);
        /* bilibili.app.dynamic.v2.MixUpListLiveItem live_info = 4; */
        if (message.liveInfo)
            MixUpListLiveItem.internalBinaryWrite(message.liveInfo, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string name = 5; */
        if (message.name !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.name);
        /* string face = 6; */
        if (message.face !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.face);
        /* bilibili.app.dynamic.v2.OfficialVerify official = 7; */
        if (message.official)
            OfficialVerify.internalBinaryWrite(message.official, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.VipInfo vip = 8; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Relation relation = 9; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* int32 permire_state = 10; */
        if (message.permireState !== 0)
            writer.tag(10, WireType.Varint).int32(message.permireState);
        /* string uri = 11; */
        if (message.uri !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MixUpListItem
 */
export const MixUpListItem = new MixUpListItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class MixUpListLiveItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.MixUpListLiveItem", [
            { no: 1, name: "status", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "room_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { status: false, roomId: 0n, uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool status */ 1:
                    message.status = reader.bool();
                    break;
                case /* int64 room_id */ 2:
                    message.roomId = reader.int64().toBigInt();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool status = 1; */
        if (message.status !== false)
            writer.tag(1, WireType.Varint).bool(message.status);
        /* int64 room_id = 2; */
        if (message.roomId !== 0n)
            writer.tag(2, WireType.Varint).int64(message.roomId);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.MixUpListLiveItem
 */
export const MixUpListLiveItem = new MixUpListLiveItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Module$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Module", [
            { no: 1, name: "module_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynModuleType", DynModuleType] },
            { no: 2, name: "module_author", kind: "message", oneof: "moduleItem", T: () => ModuleAuthor },
            { no: 3, name: "module_dispute", kind: "message", oneof: "moduleItem", T: () => ModuleDispute },
            { no: 4, name: "module_desc", kind: "message", oneof: "moduleItem", T: () => ModuleDesc },
            { no: 5, name: "module_dynamic", kind: "message", oneof: "moduleItem", T: () => ModuleDynamic },
            { no: 6, name: "module_likeUser", kind: "message", oneof: "moduleItem", T: () => ModuleLikeUser },
            { no: 7, name: "module_extend", kind: "message", oneof: "moduleItem", T: () => ModuleExtend },
            { no: 8, name: "module_additional", kind: "message", oneof: "moduleItem", T: () => ModuleAdditional },
            { no: 9, name: "module_stat", kind: "message", oneof: "moduleItem", T: () => ModuleStat },
            { no: 10, name: "module_fold", kind: "message", oneof: "moduleItem", T: () => ModuleFold },
            { no: 11, name: "module_comment", kind: "message", oneof: "moduleItem", T: () => ModuleComment },
            { no: 12, name: "module_interaction", kind: "message", oneof: "moduleItem", T: () => ModuleInteraction },
            { no: 13, name: "module_author_forward", kind: "message", oneof: "moduleItem", T: () => ModuleAuthorForward },
            { no: 14, name: "module_ad", kind: "message", oneof: "moduleItem", T: () => ModuleAd },
            { no: 15, name: "module_banner", kind: "message", oneof: "moduleItem", T: () => ModuleBanner },
            { no: 16, name: "module_item_null", kind: "message", oneof: "moduleItem", T: () => ModuleItemNull },
            { no: 17, name: "module_share_info", kind: "message", oneof: "moduleItem", T: () => ModuleShareInfo },
            { no: 18, name: "module_recommend", kind: "message", oneof: "moduleItem", T: () => ModuleRecommend },
            { no: 19, name: "module_top", kind: "message", oneof: "moduleItem", T: () => ModuleTop },
            { no: 20, name: "module_buttom", kind: "message", oneof: "moduleItem", T: () => ModuleButtom },
            { no: 21, name: "module_stat_forward", kind: "message", oneof: "moduleItem", T: () => ModuleStat },
            { no: 22, name: "module_story", kind: "message", oneof: "moduleItem", T: () => ModuleStory },
            { no: 23, name: "module_topic", kind: "message", oneof: "moduleItem", T: () => ModuleTopic },
            { no: 24, name: "module_topic_details_ext", kind: "message", oneof: "moduleItem", T: () => ModuleTopicDetailsExt },
            { no: 25, name: "module_top_tag", kind: "message", oneof: "moduleItem", T: () => ModuleTopTag },
            { no: 26, name: "module_topic_brief", kind: "message", oneof: "moduleItem", T: () => ModuleTopicBrief },
            { no: 27, name: "module_title", kind: "message", oneof: "moduleItem", T: () => ModuleTitle }
        ]);
    }
    create(value) {
        const message = { moduleType: 0, moduleItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynModuleType module_type */ 1:
                    message.moduleType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAuthor module_author */ 2:
                    message.moduleItem = {
                        oneofKind: "moduleAuthor",
                        moduleAuthor: ModuleAuthor.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleAuthor)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleDispute module_dispute */ 3:
                    message.moduleItem = {
                        oneofKind: "moduleDispute",
                        moduleDispute: ModuleDispute.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleDispute)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleDesc module_desc */ 4:
                    message.moduleItem = {
                        oneofKind: "moduleDesc",
                        moduleDesc: ModuleDesc.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleDesc)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleDynamic module_dynamic */ 5:
                    message.moduleItem = {
                        oneofKind: "moduleDynamic",
                        moduleDynamic: ModuleDynamic.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleDynamic)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleLikeUser module_likeUser */ 6:
                    message.moduleItem = {
                        oneofKind: "moduleLikeUser",
                        moduleLikeUser: ModuleLikeUser.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleLikeUser)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleExtend module_extend */ 7:
                    message.moduleItem = {
                        oneofKind: "moduleExtend",
                        moduleExtend: ModuleExtend.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleExtend)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAdditional module_additional */ 8:
                    message.moduleItem = {
                        oneofKind: "moduleAdditional",
                        moduleAdditional: ModuleAdditional.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleAdditional)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleStat module_stat */ 9:
                    message.moduleItem = {
                        oneofKind: "moduleStat",
                        moduleStat: ModuleStat.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleStat)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleFold module_fold */ 10:
                    message.moduleItem = {
                        oneofKind: "moduleFold",
                        moduleFold: ModuleFold.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleFold)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleComment module_comment */ 11:
                    message.moduleItem = {
                        oneofKind: "moduleComment",
                        moduleComment: ModuleComment.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleComment)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleInteraction module_interaction */ 12:
                    message.moduleItem = {
                        oneofKind: "moduleInteraction",
                        moduleInteraction: ModuleInteraction.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleInteraction)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAuthorForward module_author_forward */ 13:
                    message.moduleItem = {
                        oneofKind: "moduleAuthorForward",
                        moduleAuthorForward: ModuleAuthorForward.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleAuthorForward)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAd module_ad */ 14:
                    message.moduleItem = {
                        oneofKind: "moduleAd",
                        moduleAd: ModuleAd.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleAd)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleBanner module_banner */ 15:
                    message.moduleItem = {
                        oneofKind: "moduleBanner",
                        moduleBanner: ModuleBanner.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleBanner)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleItemNull module_item_null */ 16:
                    message.moduleItem = {
                        oneofKind: "moduleItemNull",
                        moduleItemNull: ModuleItemNull.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleItemNull)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleShareInfo module_share_info */ 17:
                    message.moduleItem = {
                        oneofKind: "moduleShareInfo",
                        moduleShareInfo: ModuleShareInfo.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleShareInfo)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleRecommend module_recommend */ 18:
                    message.moduleItem = {
                        oneofKind: "moduleRecommend",
                        moduleRecommend: ModuleRecommend.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleRecommend)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTop module_top */ 19:
                    message.moduleItem = {
                        oneofKind: "moduleTop",
                        moduleTop: ModuleTop.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTop)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleButtom module_buttom */ 20:
                    message.moduleItem = {
                        oneofKind: "moduleButtom",
                        moduleButtom: ModuleButtom.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleButtom)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleStat module_stat_forward */ 21:
                    message.moduleItem = {
                        oneofKind: "moduleStatForward",
                        moduleStatForward: ModuleStat.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleStatForward)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleStory module_story */ 22:
                    message.moduleItem = {
                        oneofKind: "moduleStory",
                        moduleStory: ModuleStory.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleStory)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTopic module_topic */ 23:
                    message.moduleItem = {
                        oneofKind: "moduleTopic",
                        moduleTopic: ModuleTopic.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTopic)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTopicDetailsExt module_topic_details_ext */ 24:
                    message.moduleItem = {
                        oneofKind: "moduleTopicDetailsExt",
                        moduleTopicDetailsExt: ModuleTopicDetailsExt.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTopicDetailsExt)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTopTag module_top_tag */ 25:
                    message.moduleItem = {
                        oneofKind: "moduleTopTag",
                        moduleTopTag: ModuleTopTag.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTopTag)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTopicBrief module_topic_brief */ 26:
                    message.moduleItem = {
                        oneofKind: "moduleTopicBrief",
                        moduleTopicBrief: ModuleTopicBrief.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTopicBrief)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ModuleTitle module_title */ 27:
                    message.moduleItem = {
                        oneofKind: "moduleTitle",
                        moduleTitle: ModuleTitle.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.moduleTitle)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynModuleType module_type = 1; */
        if (message.moduleType !== 0)
            writer.tag(1, WireType.Varint).int32(message.moduleType);
        /* bilibili.app.dynamic.v2.ModuleAuthor module_author = 2; */
        if (message.moduleItem.oneofKind === "moduleAuthor")
            ModuleAuthor.internalBinaryWrite(message.moduleItem.moduleAuthor, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleDispute module_dispute = 3; */
        if (message.moduleItem.oneofKind === "moduleDispute")
            ModuleDispute.internalBinaryWrite(message.moduleItem.moduleDispute, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleDesc module_desc = 4; */
        if (message.moduleItem.oneofKind === "moduleDesc")
            ModuleDesc.internalBinaryWrite(message.moduleItem.moduleDesc, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleDynamic module_dynamic = 5; */
        if (message.moduleItem.oneofKind === "moduleDynamic")
            ModuleDynamic.internalBinaryWrite(message.moduleItem.moduleDynamic, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleLikeUser module_likeUser = 6; */
        if (message.moduleItem.oneofKind === "moduleLikeUser")
            ModuleLikeUser.internalBinaryWrite(message.moduleItem.moduleLikeUser, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleExtend module_extend = 7; */
        if (message.moduleItem.oneofKind === "moduleExtend")
            ModuleExtend.internalBinaryWrite(message.moduleItem.moduleExtend, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleAdditional module_additional = 8; */
        if (message.moduleItem.oneofKind === "moduleAdditional")
            ModuleAdditional.internalBinaryWrite(message.moduleItem.moduleAdditional, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleStat module_stat = 9; */
        if (message.moduleItem.oneofKind === "moduleStat")
            ModuleStat.internalBinaryWrite(message.moduleItem.moduleStat, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleFold module_fold = 10; */
        if (message.moduleItem.oneofKind === "moduleFold")
            ModuleFold.internalBinaryWrite(message.moduleItem.moduleFold, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleComment module_comment = 11; */
        if (message.moduleItem.oneofKind === "moduleComment")
            ModuleComment.internalBinaryWrite(message.moduleItem.moduleComment, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleInteraction module_interaction = 12; */
        if (message.moduleItem.oneofKind === "moduleInteraction")
            ModuleInteraction.internalBinaryWrite(message.moduleItem.moduleInteraction, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleAuthorForward module_author_forward = 13; */
        if (message.moduleItem.oneofKind === "moduleAuthorForward")
            ModuleAuthorForward.internalBinaryWrite(message.moduleItem.moduleAuthorForward, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleAd module_ad = 14; */
        if (message.moduleItem.oneofKind === "moduleAd")
            ModuleAd.internalBinaryWrite(message.moduleItem.moduleAd, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleBanner module_banner = 15; */
        if (message.moduleItem.oneofKind === "moduleBanner")
            ModuleBanner.internalBinaryWrite(message.moduleItem.moduleBanner, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleItemNull module_item_null = 16; */
        if (message.moduleItem.oneofKind === "moduleItemNull")
            ModuleItemNull.internalBinaryWrite(message.moduleItem.moduleItemNull, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleShareInfo module_share_info = 17; */
        if (message.moduleItem.oneofKind === "moduleShareInfo")
            ModuleShareInfo.internalBinaryWrite(message.moduleItem.moduleShareInfo, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleRecommend module_recommend = 18; */
        if (message.moduleItem.oneofKind === "moduleRecommend")
            ModuleRecommend.internalBinaryWrite(message.moduleItem.moduleRecommend, writer.tag(18, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTop module_top = 19; */
        if (message.moduleItem.oneofKind === "moduleTop")
            ModuleTop.internalBinaryWrite(message.moduleItem.moduleTop, writer.tag(19, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleButtom module_buttom = 20; */
        if (message.moduleItem.oneofKind === "moduleButtom")
            ModuleButtom.internalBinaryWrite(message.moduleItem.moduleButtom, writer.tag(20, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleStat module_stat_forward = 21; */
        if (message.moduleItem.oneofKind === "moduleStatForward")
            ModuleStat.internalBinaryWrite(message.moduleItem.moduleStatForward, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleStory module_story = 22; */
        if (message.moduleItem.oneofKind === "moduleStory")
            ModuleStory.internalBinaryWrite(message.moduleItem.moduleStory, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTopic module_topic = 23; */
        if (message.moduleItem.oneofKind === "moduleTopic")
            ModuleTopic.internalBinaryWrite(message.moduleItem.moduleTopic, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTopicDetailsExt module_topic_details_ext = 24; */
        if (message.moduleItem.oneofKind === "moduleTopicDetailsExt")
            ModuleTopicDetailsExt.internalBinaryWrite(message.moduleItem.moduleTopicDetailsExt, writer.tag(24, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTopTag module_top_tag = 25; */
        if (message.moduleItem.oneofKind === "moduleTopTag")
            ModuleTopTag.internalBinaryWrite(message.moduleItem.moduleTopTag, writer.tag(25, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTopicBrief module_topic_brief = 26; */
        if (message.moduleItem.oneofKind === "moduleTopicBrief")
            ModuleTopicBrief.internalBinaryWrite(message.moduleItem.moduleTopicBrief, writer.tag(26, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleTitle module_title = 27; */
        if (message.moduleItem.oneofKind === "moduleTitle")
            ModuleTitle.internalBinaryWrite(message.moduleItem.moduleTitle, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Module
 */
export const Module = new Module$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAd$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAd", [
            { no: 1, name: "source_content", kind: "message", T: () => Any },
            { no: 2, name: "module_author", kind: "message", T: () => ModuleAuthor },
            { no: 3, name: "ad_content_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "cover_left_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "cover_left_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover_left_text3", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { adContentType: 0, coverLeftText1: "", coverLeftText2: "", coverLeftText3: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* google.protobuf.Any source_content */ 1:
                    message.sourceContent = Any.internalBinaryRead(reader, reader.uint32(), options, message.sourceContent);
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAuthor module_author */ 2:
                    message.moduleAuthor = ModuleAuthor.internalBinaryRead(reader, reader.uint32(), options, message.moduleAuthor);
                    break;
                case /* int32 ad_content_type */ 3:
                    message.adContentType = reader.int32();
                    break;
                case /* string cover_left_text1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string cover_left_text2 */ 5:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* string cover_left_text3 */ 6:
                    message.coverLeftText3 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* google.protobuf.Any source_content = 1; */
        if (message.sourceContent)
            Any.internalBinaryWrite(message.sourceContent, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleAuthor module_author = 2; */
        if (message.moduleAuthor)
            ModuleAuthor.internalBinaryWrite(message.moduleAuthor, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* int32 ad_content_type = 3; */
        if (message.adContentType !== 0)
            writer.tag(3, WireType.Varint).int32(message.adContentType);
        /* string cover_left_text1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string cover_left_text2 = 5; */
        if (message.coverLeftText2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.coverLeftText2);
        /* string cover_left_text3 = 6; */
        if (message.coverLeftText3 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.coverLeftText3);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAd
 */
export const ModuleAd = new ModuleAd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAdditional$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAdditional", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.AdditionalType", AdditionalType] },
            { no: 2, name: "pgc", kind: "message", oneof: "item", T: () => AdditionalPGC },
            { no: 3, name: "goods", kind: "message", oneof: "item", T: () => AdditionGoods },
            { no: 4, name: "vote", kind: "message", oneof: "item", T: () => AdditionVote },
            { no: 5, name: "common", kind: "message", oneof: "item", T: () => AdditionCommon },
            { no: 6, name: "esport", kind: "message", oneof: "item", T: () => AdditionEsport },
            { no: 8, name: "vote2", kind: "message", oneof: "item", T: () => AdditionVote2 },
            { no: 9, name: "ugc", kind: "message", oneof: "item", T: () => AdditionUgc },
            { no: 10, name: "up", kind: "message", oneof: "item", T: () => AdditionUP },
            { no: 7, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "need_write_calender", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, item: { oneofKind: undefined }, rid: 0n, needWriteCalender: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.AdditionalType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalPGC pgc */ 2:
                    message.item = {
                        oneofKind: "pgc",
                        pgc: AdditionalPGC.internalBinaryRead(reader, reader.uint32(), options, message.item.pgc)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionGoods goods */ 3:
                    message.item = {
                        oneofKind: "goods",
                        goods: AdditionGoods.internalBinaryRead(reader, reader.uint32(), options, message.item.goods)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVote vote */ 4:
                    message.item = {
                        oneofKind: "vote",
                        vote: AdditionVote.internalBinaryRead(reader, reader.uint32(), options, message.item.vote)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionCommon common */ 5:
                    message.item = {
                        oneofKind: "common",
                        common: AdditionCommon.internalBinaryRead(reader, reader.uint32(), options, message.item.common)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionEsport esport */ 6:
                    message.item = {
                        oneofKind: "esport",
                        esport: AdditionEsport.internalBinaryRead(reader, reader.uint32(), options, message.item.esport)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionVote2 vote2 */ 8:
                    message.item = {
                        oneofKind: "vote2",
                        vote2: AdditionVote2.internalBinaryRead(reader, reader.uint32(), options, message.item.vote2)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionUgc ugc */ 9:
                    message.item = {
                        oneofKind: "ugc",
                        ugc: AdditionUgc.internalBinaryRead(reader, reader.uint32(), options, message.item.ugc)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.AdditionUP up */ 10:
                    message.item = {
                        oneofKind: "up",
                        up: AdditionUP.internalBinaryRead(reader, reader.uint32(), options, message.item.up)
                    };
                    break;
                case /* int64 rid */ 7:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* bool need_write_calender */ 11:
                    message.needWriteCalender = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.AdditionalType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.AdditionalPGC pgc = 2; */
        if (message.item.oneofKind === "pgc")
            AdditionalPGC.internalBinaryWrite(message.item.pgc, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionGoods goods = 3; */
        if (message.item.oneofKind === "goods")
            AdditionGoods.internalBinaryWrite(message.item.goods, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionVote vote = 4; */
        if (message.item.oneofKind === "vote")
            AdditionVote.internalBinaryWrite(message.item.vote, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionCommon common = 5; */
        if (message.item.oneofKind === "common")
            AdditionCommon.internalBinaryWrite(message.item.common, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionEsport esport = 6; */
        if (message.item.oneofKind === "esport")
            AdditionEsport.internalBinaryWrite(message.item.esport, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionVote2 vote2 = 8; */
        if (message.item.oneofKind === "vote2")
            AdditionVote2.internalBinaryWrite(message.item.vote2, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionUgc ugc = 9; */
        if (message.item.oneofKind === "ugc")
            AdditionUgc.internalBinaryWrite(message.item.ugc, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.AdditionUP up = 10; */
        if (message.item.oneofKind === "up")
            AdditionUP.internalBinaryWrite(message.item.up, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* int64 rid = 7; */
        if (message.rid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.rid);
        /* bool need_write_calender = 11; */
        if (message.needWriteCalender !== false)
            writer.tag(11, WireType.Varint).bool(message.needWriteCalender);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAdditional
 */
export const ModuleAdditional = new ModuleAdditional$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAuthor$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAuthor", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "ptime_label_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "author", kind: "message", T: () => UserInfo },
            { no: 4, name: "decorate_card", kind: "message", T: () => DecorateCard },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "tp_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePointItem },
            { no: 7, name: "badge_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ModuleAuthorBadgeType", ModuleAuthorBadgeType] },
            { no: 8, name: "badge_button", kind: "message", T: () => ModuleAuthorBadgeButton },
            { no: 9, name: "attend", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "relation", kind: "message", T: () => Relation },
            { no: 11, name: "weight", kind: "message", T: () => Weight },
            { no: 12, name: "show_follow", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 13, name: "is_top", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 14, name: "ptime_location_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "show_level", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, ptimeLabelText: "", uri: "", tpList: [], badgeType: 0, attend: 0, showFollow: false, isTop: false, ptimeLocationText: "", showLevel: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string ptime_label_text */ 2:
                    message.ptimeLabelText = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.UserInfo author */ 3:
                    message.author = UserInfo.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* bilibili.app.dynamic.v2.DecorateCard decorate_card */ 4:
                    message.decorateCard = DecorateCard.internalBinaryRead(reader, reader.uint32(), options, message.decorateCard);
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list */ 6:
                    message.tpList.push(ThreePointItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAuthorBadgeType badge_type */ 7:
                    message.badgeType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleAuthorBadgeButton badge_button */ 8:
                    message.badgeButton = ModuleAuthorBadgeButton.internalBinaryRead(reader, reader.uint32(), options, message.badgeButton);
                    break;
                case /* int32 attend */ 9:
                    message.attend = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 10:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* bilibili.app.dynamic.v2.Weight weight */ 11:
                    message.weight = Weight.internalBinaryRead(reader, reader.uint32(), options, message.weight);
                    break;
                case /* bool show_follow */ 12:
                    message.showFollow = reader.bool();
                    break;
                case /* bool is_top */ 13:
                    message.isTop = reader.bool();
                    break;
                case /* string ptime_location_text */ 14:
                    message.ptimeLocationText = reader.string();
                    break;
                case /* bool show_level */ 15:
                    message.showLevel = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string ptime_label_text = 2; */
        if (message.ptimeLabelText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.ptimeLabelText);
        /* bilibili.app.dynamic.v2.UserInfo author = 3; */
        if (message.author)
            UserInfo.internalBinaryWrite(message.author, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.DecorateCard decorate_card = 4; */
        if (message.decorateCard)
            DecorateCard.internalBinaryWrite(message.decorateCard, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list = 6; */
        for (let i = 0; i < message.tpList.length; i++)
            ThreePointItem.internalBinaryWrite(message.tpList[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ModuleAuthorBadgeType badge_type = 7; */
        if (message.badgeType !== 0)
            writer.tag(7, WireType.Varint).int32(message.badgeType);
        /* bilibili.app.dynamic.v2.ModuleAuthorBadgeButton badge_button = 8; */
        if (message.badgeButton)
            ModuleAuthorBadgeButton.internalBinaryWrite(message.badgeButton, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int32 attend = 9; */
        if (message.attend !== 0)
            writer.tag(9, WireType.Varint).int32(message.attend);
        /* bilibili.app.dynamic.v2.Relation relation = 10; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Weight weight = 11; */
        if (message.weight)
            Weight.internalBinaryWrite(message.weight, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bool show_follow = 12; */
        if (message.showFollow !== false)
            writer.tag(12, WireType.Varint).bool(message.showFollow);
        /* bool is_top = 13; */
        if (message.isTop !== false)
            writer.tag(13, WireType.Varint).bool(message.isTop);
        /* string ptime_location_text = 14; */
        if (message.ptimeLocationText !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.ptimeLocationText);
        /* bool show_level = 15; */
        if (message.showLevel !== false)
            writer.tag(15, WireType.Varint).bool(message.showLevel);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAuthor
 */
export const ModuleAuthor = new ModuleAuthor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAuthorBadgeButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAuthorBadgeButton", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", state: 0, id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int32 state */ 3:
                    message.state = reader.int32();
                    break;
                case /* int64 id */ 4:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int32 state = 3; */
        if (message.state !== 0)
            writer.tag(3, WireType.Varint).int32(message.state);
        /* int64 id = 4; */
        if (message.id !== 0n)
            writer.tag(4, WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAuthorBadgeButton
 */
export const ModuleAuthorBadgeButton = new ModuleAuthorBadgeButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAuthorForward$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAuthorForward", [
            { no: 1, name: "title", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleAuthorForwardTitle },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "ptime_label_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "show_follow", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "face_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "relation", kind: "message", T: () => Relation },
            { no: 8, name: "tp_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePointItem }
        ]);
    }
    create(value) {
        const message = { title: [], url: "", uid: 0n, ptimeLabelText: "", showFollow: false, faceUrl: "", tpList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ModuleAuthorForwardTitle title */ 1:
                    message.title.push(ModuleAuthorForwardTitle.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string url */ 2:
                    message.url = reader.string();
                    break;
                case /* int64 uid */ 3:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* string ptime_label_text */ 4:
                    message.ptimeLabelText = reader.string();
                    break;
                case /* bool show_follow */ 5:
                    message.showFollow = reader.bool();
                    break;
                case /* string face_url */ 6:
                    message.faceUrl = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 7:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list */ 8:
                    message.tpList.push(ThreePointItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ModuleAuthorForwardTitle title = 1; */
        for (let i = 0; i < message.title.length; i++)
            ModuleAuthorForwardTitle.internalBinaryWrite(message.title[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string url = 2; */
        if (message.url !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        /* int64 uid = 3; */
        if (message.uid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.uid);
        /* string ptime_label_text = 4; */
        if (message.ptimeLabelText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.ptimeLabelText);
        /* bool show_follow = 5; */
        if (message.showFollow !== false)
            writer.tag(5, WireType.Varint).bool(message.showFollow);
        /* string face_url = 6; */
        if (message.faceUrl !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.faceUrl);
        /* bilibili.app.dynamic.v2.Relation relation = 7; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list = 8; */
        for (let i = 0; i < message.tpList.length; i++)
            ThreePointItem.internalBinaryWrite(message.tpList[i], writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAuthorForward
 */
export const ModuleAuthorForward = new ModuleAuthorForward$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleAuthorForwardTitle$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleAuthorForwardTitle", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", url: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string url */ 2:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string url = 2; */
        if (message.url !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleAuthorForwardTitle
 */
export const ModuleAuthorForwardTitle = new ModuleAuthorForwardTitle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleBanner$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleBanner", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ModuleBannerType", ModuleBannerType] },
            { no: 3, name: "user", kind: "message", oneof: "item", T: () => ModuleBannerUser },
            { no: 4, name: "dislike_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "dislike_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", type: 0, item: { oneofKind: undefined }, dislikeText: "", dislikeIcon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleBannerType type */ 2:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ModuleBannerUser user */ 3:
                    message.item = {
                        oneofKind: "user",
                        user: ModuleBannerUser.internalBinaryRead(reader, reader.uint32(), options, message.item.user)
                    };
                    break;
                case /* string dislike_text */ 4:
                    message.dislikeText = reader.string();
                    break;
                case /* string dislike_icon */ 5:
                    message.dislikeIcon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.ModuleBannerType type = 2; */
        if (message.type !== 0)
            writer.tag(2, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.ModuleBannerUser user = 3; */
        if (message.item.oneofKind === "user")
            ModuleBannerUser.internalBinaryWrite(message.item.user, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string dislike_text = 4; */
        if (message.dislikeText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.dislikeText);
        /* string dislike_icon = 5; */
        if (message.dislikeIcon !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.dislikeIcon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleBanner
 */
export const ModuleBanner = new ModuleBanner$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleBannerUser$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleBannerUser", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleBannerUserItem }
        ]);
    }
    create(value) {
        const message = { list: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ModuleBannerUserItem list */ 1:
                    message.list.push(ModuleBannerUserItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ModuleBannerUserItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            ModuleBannerUserItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleBannerUser
 */
export const ModuleBannerUser = new ModuleBannerUser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleBannerUserItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleBannerUserItem", [
            { no: 1, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "live_state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LiveState", LiveState] },
            { no: 5, name: "official", kind: "message", T: () => OfficialVerify },
            { no: 6, name: "vip", kind: "message", T: () => VipInfo },
            { no: 7, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 9, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { face: "", name: "", uid: 0n, liveState: 0, label: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string face */ 1:
                    message.face = reader.string();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* int64 uid */ 3:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.LiveState live_state */ 4:
                    message.liveState = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.OfficialVerify official */ 5:
                    message.official = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.official);
                    break;
                case /* bilibili.app.dynamic.v2.VipInfo vip */ 6:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* string label */ 7:
                    message.label = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 8:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string uri */ 9:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string face = 1; */
        if (message.face !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.face);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* int64 uid = 3; */
        if (message.uid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.uid);
        /* bilibili.app.dynamic.v2.LiveState live_state = 4; */
        if (message.liveState !== 0)
            writer.tag(4, WireType.Varint).int32(message.liveState);
        /* bilibili.app.dynamic.v2.OfficialVerify official = 5; */
        if (message.official)
            OfficialVerify.internalBinaryWrite(message.official, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.VipInfo vip = 6; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string label = 7; */
        if (message.label !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.label);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 8; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 9; */
        if (message.uri !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleBannerUserItem
 */
export const ModuleBannerUserItem = new ModuleBannerUserItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleButtom$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleButtom", [
            { no: 1, name: "module_stat", kind: "message", T: () => ModuleStat }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.ModuleStat module_stat */ 1:
                    message.moduleStat = ModuleStat.internalBinaryRead(reader, reader.uint32(), options, message.moduleStat);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.ModuleStat module_stat = 1; */
        if (message.moduleStat)
            ModuleStat.internalBinaryWrite(message.moduleStat, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleButtom
 */
export const ModuleButtom = new ModuleButtom$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleComment$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleComment", [
            { no: 1, name: "cmtShowItem", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CmtShowItem }
        ]);
    }
    create(value) {
        const message = { cmtShowItem: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.CmtShowItem cmtShowItem */ 1:
                    message.cmtShowItem.push(CmtShowItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.CmtShowItem cmtShowItem = 1; */
        for (let i = 0; i < message.cmtShowItem.length; i++)
            CmtShowItem.internalBinaryWrite(message.cmtShowItem[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleComment
 */
export const ModuleComment = new ModuleComment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleDesc$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleDesc", [
            { no: 1, name: "desc", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Description },
            { no: 2, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { desc: [], jumpUri: "", text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.Description desc */ 1:
                    message.desc.push(Description.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string jump_uri */ 2:
                    message.jumpUri = reader.string();
                    break;
                case /* string text */ 3:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.Description desc = 1; */
        for (let i = 0; i < message.desc.length; i++)
            Description.internalBinaryWrite(message.desc[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string jump_uri = 2; */
        if (message.jumpUri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.jumpUri);
        /* string text = 3; */
        if (message.text !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleDesc
 */
export const ModuleDesc = new ModuleDesc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleDescGoods$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleDescGoods", [
            { no: 1, name: "source_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "schema_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "item_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "open_white_list", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "user_web_v2", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "ad_mark", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "schema_package_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { sourceType: 0, jumpUrl: "", schemaUrl: "", itemId: 0n, openWhiteList: [], userWebV2: false, adMark: "", schemaPackageName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 source_type */ 1:
                    message.sourceType = reader.int32();
                    break;
                case /* string jump_url */ 2:
                    message.jumpUrl = reader.string();
                    break;
                case /* string schema_url */ 3:
                    message.schemaUrl = reader.string();
                    break;
                case /* int64 item_id */ 4:
                    message.itemId = reader.int64().toBigInt();
                    break;
                case /* repeated string open_white_list */ 5:
                    message.openWhiteList.push(reader.string());
                    break;
                case /* bool user_web_v2 */ 6:
                    message.userWebV2 = reader.bool();
                    break;
                case /* string ad_mark */ 7:
                    message.adMark = reader.string();
                    break;
                case /* string schema_package_name */ 8:
                    message.schemaPackageName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 source_type = 1; */
        if (message.sourceType !== 0)
            writer.tag(1, WireType.Varint).int32(message.sourceType);
        /* string jump_url = 2; */
        if (message.jumpUrl !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.jumpUrl);
        /* string schema_url = 3; */
        if (message.schemaUrl !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.schemaUrl);
        /* int64 item_id = 4; */
        if (message.itemId !== 0n)
            writer.tag(4, WireType.Varint).int64(message.itemId);
        /* repeated string open_white_list = 5; */
        for (let i = 0; i < message.openWhiteList.length; i++)
            writer.tag(5, WireType.LengthDelimited).string(message.openWhiteList[i]);
        /* bool user_web_v2 = 6; */
        if (message.userWebV2 !== false)
            writer.tag(6, WireType.Varint).bool(message.userWebV2);
        /* string ad_mark = 7; */
        if (message.adMark !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.adMark);
        /* string schema_package_name = 8; */
        if (message.schemaPackageName !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.schemaPackageName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleDescGoods
 */
export const ModuleDescGoods = new ModuleDescGoods$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleDispute$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleDispute", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleDispute
 */
export const ModuleDispute = new ModuleDispute$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleDynamic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleDynamic", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ModuleDynamicType", ModuleDynamicType] },
            { no: 2, name: "dyn_archive", kind: "message", oneof: "moduleItem", T: () => MdlDynArchive },
            { no: 3, name: "dyn_pgc", kind: "message", oneof: "moduleItem", T: () => MdlDynPGC },
            { no: 4, name: "dyn_cour_season", kind: "message", oneof: "moduleItem", T: () => MdlDynCourSeason },
            { no: 5, name: "dyn_cour_batch", kind: "message", oneof: "moduleItem", T: () => MdlDynCourBatch },
            { no: 6, name: "dyn_forward", kind: "message", oneof: "moduleItem", T: () => MdlDynForward },
            { no: 7, name: "dyn_draw", kind: "message", oneof: "moduleItem", T: () => MdlDynDraw },
            { no: 8, name: "dyn_article", kind: "message", oneof: "moduleItem", T: () => MdlDynArticle },
            { no: 9, name: "dyn_music", kind: "message", oneof: "moduleItem", T: () => MdlDynMusic },
            { no: 10, name: "dyn_common", kind: "message", oneof: "moduleItem", T: () => MdlDynCommon },
            { no: 11, name: "dyn_common_live", kind: "message", oneof: "moduleItem", T: () => MdlDynLive },
            { no: 12, name: "dyn_medialist", kind: "message", oneof: "moduleItem", T: () => MdlDynMedialist },
            { no: 13, name: "dyn_applet", kind: "message", oneof: "moduleItem", T: () => MdlDynApplet },
            { no: 14, name: "dyn_subscription", kind: "message", oneof: "moduleItem", T: () => MdlDynSubscription },
            { no: 15, name: "dyn_live_rcmd", kind: "message", oneof: "moduleItem", T: () => MdlDynLiveRcmd },
            { no: 16, name: "dyn_ugc_season", kind: "message", oneof: "moduleItem", T: () => MdlDynUGCSeason },
            { no: 17, name: "dyn_subscription_new", kind: "message", oneof: "moduleItem", T: () => MdlDynSubscriptionNew }
        ]);
    }
    create(value) {
        const message = { type: 0, moduleItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.ModuleDynamicType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynArchive dyn_archive */ 2:
                    message.moduleItem = {
                        oneofKind: "dynArchive",
                        dynArchive: MdlDynArchive.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynArchive)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynPGC dyn_pgc */ 3:
                    message.moduleItem = {
                        oneofKind: "dynPgc",
                        dynPgc: MdlDynPGC.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynPgc)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynCourSeason dyn_cour_season */ 4:
                    message.moduleItem = {
                        oneofKind: "dynCourSeason",
                        dynCourSeason: MdlDynCourSeason.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynCourSeason)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynCourBatch dyn_cour_batch */ 5:
                    message.moduleItem = {
                        oneofKind: "dynCourBatch",
                        dynCourBatch: MdlDynCourBatch.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynCourBatch)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynForward dyn_forward */ 6:
                    message.moduleItem = {
                        oneofKind: "dynForward",
                        dynForward: MdlDynForward.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynForward)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynDraw dyn_draw */ 7:
                    message.moduleItem = {
                        oneofKind: "dynDraw",
                        dynDraw: MdlDynDraw.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynDraw)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynArticle dyn_article */ 8:
                    message.moduleItem = {
                        oneofKind: "dynArticle",
                        dynArticle: MdlDynArticle.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynArticle)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynMusic dyn_music */ 9:
                    message.moduleItem = {
                        oneofKind: "dynMusic",
                        dynMusic: MdlDynMusic.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynMusic)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynCommon dyn_common */ 10:
                    message.moduleItem = {
                        oneofKind: "dynCommon",
                        dynCommon: MdlDynCommon.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynCommon)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynLive dyn_common_live */ 11:
                    message.moduleItem = {
                        oneofKind: "dynCommonLive",
                        dynCommonLive: MdlDynLive.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynCommonLive)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynMedialist dyn_medialist */ 12:
                    message.moduleItem = {
                        oneofKind: "dynMedialist",
                        dynMedialist: MdlDynMedialist.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynMedialist)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynApplet dyn_applet */ 13:
                    message.moduleItem = {
                        oneofKind: "dynApplet",
                        dynApplet: MdlDynApplet.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynApplet)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynSubscription dyn_subscription */ 14:
                    message.moduleItem = {
                        oneofKind: "dynSubscription",
                        dynSubscription: MdlDynSubscription.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynSubscription)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynLiveRcmd dyn_live_rcmd */ 15:
                    message.moduleItem = {
                        oneofKind: "dynLiveRcmd",
                        dynLiveRcmd: MdlDynLiveRcmd.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynLiveRcmd)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynUGCSeason dyn_ugc_season */ 16:
                    message.moduleItem = {
                        oneofKind: "dynUgcSeason",
                        dynUgcSeason: MdlDynUGCSeason.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynUgcSeason)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.MdlDynSubscriptionNew dyn_subscription_new */ 17:
                    message.moduleItem = {
                        oneofKind: "dynSubscriptionNew",
                        dynSubscriptionNew: MdlDynSubscriptionNew.internalBinaryRead(reader, reader.uint32(), options, message.moduleItem.dynSubscriptionNew)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.ModuleDynamicType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.MdlDynArchive dyn_archive = 2; */
        if (message.moduleItem.oneofKind === "dynArchive")
            MdlDynArchive.internalBinaryWrite(message.moduleItem.dynArchive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynPGC dyn_pgc = 3; */
        if (message.moduleItem.oneofKind === "dynPgc")
            MdlDynPGC.internalBinaryWrite(message.moduleItem.dynPgc, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynCourSeason dyn_cour_season = 4; */
        if (message.moduleItem.oneofKind === "dynCourSeason")
            MdlDynCourSeason.internalBinaryWrite(message.moduleItem.dynCourSeason, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynCourBatch dyn_cour_batch = 5; */
        if (message.moduleItem.oneofKind === "dynCourBatch")
            MdlDynCourBatch.internalBinaryWrite(message.moduleItem.dynCourBatch, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynForward dyn_forward = 6; */
        if (message.moduleItem.oneofKind === "dynForward")
            MdlDynForward.internalBinaryWrite(message.moduleItem.dynForward, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynDraw dyn_draw = 7; */
        if (message.moduleItem.oneofKind === "dynDraw")
            MdlDynDraw.internalBinaryWrite(message.moduleItem.dynDraw, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynArticle dyn_article = 8; */
        if (message.moduleItem.oneofKind === "dynArticle")
            MdlDynArticle.internalBinaryWrite(message.moduleItem.dynArticle, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynMusic dyn_music = 9; */
        if (message.moduleItem.oneofKind === "dynMusic")
            MdlDynMusic.internalBinaryWrite(message.moduleItem.dynMusic, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynCommon dyn_common = 10; */
        if (message.moduleItem.oneofKind === "dynCommon")
            MdlDynCommon.internalBinaryWrite(message.moduleItem.dynCommon, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynLive dyn_common_live = 11; */
        if (message.moduleItem.oneofKind === "dynCommonLive")
            MdlDynLive.internalBinaryWrite(message.moduleItem.dynCommonLive, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynMedialist dyn_medialist = 12; */
        if (message.moduleItem.oneofKind === "dynMedialist")
            MdlDynMedialist.internalBinaryWrite(message.moduleItem.dynMedialist, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynApplet dyn_applet = 13; */
        if (message.moduleItem.oneofKind === "dynApplet")
            MdlDynApplet.internalBinaryWrite(message.moduleItem.dynApplet, writer.tag(13, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynSubscription dyn_subscription = 14; */
        if (message.moduleItem.oneofKind === "dynSubscription")
            MdlDynSubscription.internalBinaryWrite(message.moduleItem.dynSubscription, writer.tag(14, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynLiveRcmd dyn_live_rcmd = 15; */
        if (message.moduleItem.oneofKind === "dynLiveRcmd")
            MdlDynLiveRcmd.internalBinaryWrite(message.moduleItem.dynLiveRcmd, writer.tag(15, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynUGCSeason dyn_ugc_season = 16; */
        if (message.moduleItem.oneofKind === "dynUgcSeason")
            MdlDynUGCSeason.internalBinaryWrite(message.moduleItem.dynUgcSeason, writer.tag(16, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.MdlDynSubscriptionNew dyn_subscription_new = 17; */
        if (message.moduleItem.oneofKind === "dynSubscriptionNew")
            MdlDynSubscriptionNew.internalBinaryWrite(message.moduleItem.dynSubscriptionNew, writer.tag(17, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleDynamic
 */
export const ModuleDynamic = new ModuleDynamic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleExtend$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleExtend", [
            { no: 1, name: "extend", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ModuleExtendItem },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { extend: [], uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ModuleExtendItem extend */ 1:
                    message.extend.push(ModuleExtendItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ModuleExtendItem extend = 1; */
        for (let i = 0; i < message.extend.length; i++)
            ModuleExtendItem.internalBinaryWrite(message.extend[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleExtend
 */
export const ModuleExtend = new ModuleExtend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleExtendItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleExtendItem", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.DynExtendType", DynExtendType] },
            { no: 2, name: "ext_info_topic", kind: "message", oneof: "extend", T: () => ExtInfoTopic },
            { no: 3, name: "ext_info_lbs", kind: "message", oneof: "extend", T: () => ExtInfoLBS },
            { no: 4, name: "ext_info_hot", kind: "message", oneof: "extend", T: () => ExtInfoHot },
            { no: 5, name: "ext_info_game", kind: "message", oneof: "extend", T: () => ExtInfoGame },
            { no: 6, name: "ext_info_common", kind: "message", oneof: "extend", T: () => ExtInfoCommon },
            { no: 7, name: "ext_info_ogv", kind: "message", oneof: "extend", T: () => ExtInfoOGV }
        ]);
    }
    create(value) {
        const message = { type: 0, extend: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.DynExtendType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoTopic ext_info_topic */ 2:
                    message.extend = {
                        oneofKind: "extInfoTopic",
                        extInfoTopic: ExtInfoTopic.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoTopic)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoLBS ext_info_lbs */ 3:
                    message.extend = {
                        oneofKind: "extInfoLbs",
                        extInfoLbs: ExtInfoLBS.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoLbs)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoHot ext_info_hot */ 4:
                    message.extend = {
                        oneofKind: "extInfoHot",
                        extInfoHot: ExtInfoHot.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoHot)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoGame ext_info_game */ 5:
                    message.extend = {
                        oneofKind: "extInfoGame",
                        extInfoGame: ExtInfoGame.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoGame)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoCommon ext_info_common */ 6:
                    message.extend = {
                        oneofKind: "extInfoCommon",
                        extInfoCommon: ExtInfoCommon.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoCommon)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ExtInfoOGV ext_info_ogv */ 7:
                    message.extend = {
                        oneofKind: "extInfoOgv",
                        extInfoOgv: ExtInfoOGV.internalBinaryRead(reader, reader.uint32(), options, message.extend.extInfoOgv)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.DynExtendType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.ExtInfoTopic ext_info_topic = 2; */
        if (message.extend.oneofKind === "extInfoTopic")
            ExtInfoTopic.internalBinaryWrite(message.extend.extInfoTopic, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ExtInfoLBS ext_info_lbs = 3; */
        if (message.extend.oneofKind === "extInfoLbs")
            ExtInfoLBS.internalBinaryWrite(message.extend.extInfoLbs, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ExtInfoHot ext_info_hot = 4; */
        if (message.extend.oneofKind === "extInfoHot")
            ExtInfoHot.internalBinaryWrite(message.extend.extInfoHot, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ExtInfoGame ext_info_game = 5; */
        if (message.extend.oneofKind === "extInfoGame")
            ExtInfoGame.internalBinaryWrite(message.extend.extInfoGame, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ExtInfoCommon ext_info_common = 6; */
        if (message.extend.oneofKind === "extInfoCommon")
            ExtInfoCommon.internalBinaryWrite(message.extend.extInfoCommon, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ExtInfoOGV ext_info_ogv = 7; */
        if (message.extend.oneofKind === "extInfoOgv")
            ExtInfoOGV.internalBinaryWrite(message.extend.extInfoOgv, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleExtendItem
 */
export const ModuleExtendItem = new ModuleExtendItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleFold$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleFold", [
            { no: 1, name: "fold_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.FoldType", FoldType] },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "fold_ids", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "fold_users", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UserInfo }
        ]);
    }
    create(value) {
        const message = { foldType: 0, text: "", foldIds: "", foldUsers: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.FoldType fold_type */ 1:
                    message.foldType = reader.int32();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string fold_ids */ 3:
                    message.foldIds = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.UserInfo fold_users */ 4:
                    message.foldUsers.push(UserInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.FoldType fold_type = 1; */
        if (message.foldType !== 0)
            writer.tag(1, WireType.Varint).int32(message.foldType);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string fold_ids = 3; */
        if (message.foldIds !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.foldIds);
        /* repeated bilibili.app.dynamic.v2.UserInfo fold_users = 4; */
        for (let i = 0; i < message.foldUsers.length; i++)
            UserInfo.internalBinaryWrite(message.foldUsers[i], writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleFold
 */
export const ModuleFold = new ModuleFold$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleInteraction$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleInteraction", [
            { no: 1, name: "interaction_item", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => InteractionItem }
        ]);
    }
    create(value) {
        const message = { interactionItem: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.InteractionItem interaction_item */ 1:
                    message.interactionItem.push(InteractionItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.InteractionItem interaction_item = 1; */
        for (let i = 0; i < message.interactionItem.length; i++)
            InteractionItem.internalBinaryWrite(message.interactionItem[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleInteraction
 */
export const ModuleInteraction = new ModuleInteraction$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleItemNull$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleItemNull", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", text: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleItemNull
 */
export const ModuleItemNull = new ModuleItemNull$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleLikeUser$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleLikeUser", [
            { no: 1, name: "like_users", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => LikeUser },
            { no: 2, name: "display_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { likeUsers: [], displayText: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.LikeUser like_users */ 1:
                    message.likeUsers.push(LikeUser.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string display_text */ 2:
                    message.displayText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.LikeUser like_users = 1; */
        for (let i = 0; i < message.likeUsers.length; i++)
            LikeUser.internalBinaryWrite(message.likeUsers[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string display_text = 2; */
        if (message.displayText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.displayText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleLikeUser
 */
export const ModuleLikeUser = new ModuleLikeUser$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleRcmd$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleRcmd", [
            { no: 1, name: "author", kind: "message", T: () => RcmdAuthor },
            { no: 2, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => RcmdItem },
            { no: 3, name: "server_info", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { items: [], serverInfo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.RcmdAuthor author */ 1:
                    message.author = RcmdAuthor.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* repeated bilibili.app.dynamic.v2.RcmdItem items */ 2:
                    message.items.push(RcmdItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string server_info */ 3:
                    message.serverInfo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.RcmdAuthor author = 1; */
        if (message.author)
            RcmdAuthor.internalBinaryWrite(message.author, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.RcmdItem items = 2; */
        for (let i = 0; i < message.items.length; i++)
            RcmdItem.internalBinaryWrite(message.items[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string server_info = 3; */
        if (message.serverInfo !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.serverInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleRcmd
 */
export const ModuleRcmd = new ModuleRcmd$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleRecommend$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleRecommend", [
            { no: 1, name: "module_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "tag", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "ad", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => Any }
        ]);
    }
    create(value) {
        const message = { moduleTitle: "", image: "", tag: "", title: "", jumpUrl: "", ad: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string module_title */ 1:
                    message.moduleTitle = reader.string();
                    break;
                case /* string image */ 2:
                    message.image = reader.string();
                    break;
                case /* string tag */ 3:
                    message.tag = reader.string();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                case /* string jump_url */ 5:
                    message.jumpUrl = reader.string();
                    break;
                case /* repeated google.protobuf.Any ad */ 6:
                    message.ad.push(Any.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string module_title = 1; */
        if (message.moduleTitle !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.moduleTitle);
        /* string image = 2; */
        if (message.image !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.image);
        /* string tag = 3; */
        if (message.tag !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.tag);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        /* string jump_url = 5; */
        if (message.jumpUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.jumpUrl);
        /* repeated google.protobuf.Any ad = 6; */
        for (let i = 0; i < message.ad.length; i++)
            Any.internalBinaryWrite(message.ad[i], writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleRecommend
 */
export const ModuleRecommend = new ModuleRecommend$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleShareInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleShareInfo", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "share_channels", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ShareChannel },
            { no: 3, name: "share_origin", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "oid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "sid", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", shareChannels: [], shareOrigin: "", oid: "", sid: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ShareChannel share_channels */ 2:
                    message.shareChannels.push(ShareChannel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string share_origin */ 3:
                    message.shareOrigin = reader.string();
                    break;
                case /* string oid */ 4:
                    message.oid = reader.string();
                    break;
                case /* string sid */ 5:
                    message.sid = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.ShareChannel share_channels = 2; */
        for (let i = 0; i < message.shareChannels.length; i++)
            ShareChannel.internalBinaryWrite(message.shareChannels[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string share_origin = 3; */
        if (message.shareOrigin !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.shareOrigin);
        /* string oid = 4; */
        if (message.oid !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.oid);
        /* string sid = 5; */
        if (message.sid !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.sid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleShareInfo
 */
export const ModuleShareInfo = new ModuleShareInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleStat$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleStat", [
            { no: 1, name: "repost", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "like", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "reply", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "like_info", kind: "message", T: () => LikeInfo },
            { no: 5, name: "no_comment", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "no_forward", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "reply_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "no_comment_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "no_forward_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { repost: 0n, like: 0n, reply: 0n, noComment: false, noForward: false, replyUrl: "", noCommentText: "", noForwardText: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 repost */ 1:
                    message.repost = reader.int64().toBigInt();
                    break;
                case /* int64 like */ 2:
                    message.like = reader.int64().toBigInt();
                    break;
                case /* int64 reply */ 3:
                    message.reply = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.LikeInfo like_info */ 4:
                    message.likeInfo = LikeInfo.internalBinaryRead(reader, reader.uint32(), options, message.likeInfo);
                    break;
                case /* bool no_comment */ 5:
                    message.noComment = reader.bool();
                    break;
                case /* bool no_forward */ 6:
                    message.noForward = reader.bool();
                    break;
                case /* string reply_url */ 7:
                    message.replyUrl = reader.string();
                    break;
                case /* string no_comment_text */ 8:
                    message.noCommentText = reader.string();
                    break;
                case /* string no_forward_text */ 9:
                    message.noForwardText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 repost = 1; */
        if (message.repost !== 0n)
            writer.tag(1, WireType.Varint).int64(message.repost);
        /* int64 like = 2; */
        if (message.like !== 0n)
            writer.tag(2, WireType.Varint).int64(message.like);
        /* int64 reply = 3; */
        if (message.reply !== 0n)
            writer.tag(3, WireType.Varint).int64(message.reply);
        /* bilibili.app.dynamic.v2.LikeInfo like_info = 4; */
        if (message.likeInfo)
            LikeInfo.internalBinaryWrite(message.likeInfo, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bool no_comment = 5; */
        if (message.noComment !== false)
            writer.tag(5, WireType.Varint).bool(message.noComment);
        /* bool no_forward = 6; */
        if (message.noForward !== false)
            writer.tag(6, WireType.Varint).bool(message.noForward);
        /* string reply_url = 7; */
        if (message.replyUrl !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.replyUrl);
        /* string no_comment_text = 8; */
        if (message.noCommentText !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.noCommentText);
        /* string no_forward_text = 9; */
        if (message.noForwardText !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.noForwardText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleStat
 */
export const ModuleStat = new ModuleStat$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleStory$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleStory", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StoryItem },
            { no: 3, name: "show_publish_entrance", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "fold_state", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "publish_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", items: [], showPublishEntrance: false, foldState: 0n, uri: "", cover: "", publishText: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.StoryItem items */ 2:
                    message.items.push(StoryItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool show_publish_entrance */ 3:
                    message.showPublishEntrance = reader.bool();
                    break;
                case /* int64 fold_state */ 4:
                    message.foldState = reader.int64().toBigInt();
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* string cover */ 6:
                    message.cover = reader.string();
                    break;
                case /* string publish_text */ 7:
                    message.publishText = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.StoryItem items = 2; */
        for (let i = 0; i < message.items.length; i++)
            StoryItem.internalBinaryWrite(message.items[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bool show_publish_entrance = 3; */
        if (message.showPublishEntrance !== false)
            writer.tag(3, WireType.Varint).bool(message.showPublishEntrance);
        /* int64 fold_state = 4; */
        if (message.foldState !== 0n)
            writer.tag(4, WireType.Varint).int64(message.foldState);
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* string cover = 6; */
        if (message.cover !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.cover);
        /* string publish_text = 7; */
        if (message.publishText !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.publishText);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleStory
 */
export const ModuleStory = new ModuleStory$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTitle$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTitle", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "right_btn", kind: "message", T: () => IconButton }
        ]);
    }
    create(value) {
        const message = { title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.IconButton right_btn */ 2:
                    message.rightBtn = IconButton.internalBinaryRead(reader, reader.uint32(), options, message.rightBtn);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.IconButton right_btn = 2; */
        if (message.rightBtn)
            IconButton.internalBinaryWrite(message.rightBtn, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTitle
 */
export const ModuleTitle = new ModuleTitle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTop$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTop", [
            { no: 1, name: "tp_list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePointItem }
        ]);
    }
    create(value) {
        const message = { tpList: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list */ 1:
                    message.tpList.push(ThreePointItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.ThreePointItem tp_list = 1; */
        for (let i = 0; i < message.tpList.length; i++)
            ThreePointItem.internalBinaryWrite(message.tpList[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTop
 */
export const ModuleTop = new ModuleTop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTopTag$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTopTag", [
            { no: 1, name: "tag_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { tagName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string tag_name */ 1:
                    message.tagName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string tag_name = 1; */
        if (message.tagName !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.tagName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTopTag
 */
export const ModuleTopTag = new ModuleTopTag$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTopic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTopic", [
            { no: 1, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0n, name: "", url: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 id */ 1:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string url */ 3:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 id = 1; */
        if (message.id !== 0n)
            writer.tag(1, WireType.Varint).int64(message.id);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string url = 3; */
        if (message.url !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTopic
 */
export const ModuleTopic = new ModuleTopic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTopicBrief$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTopicBrief", [
            { no: 1, name: "topic", kind: "message", T: () => TopicItem }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.TopicItem topic */ 1:
                    message.topic = TopicItem.internalBinaryRead(reader, reader.uint32(), options, message.topic);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.TopicItem topic = 1; */
        if (message.topic)
            TopicItem.internalBinaryWrite(message.topic, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTopicBrief
 */
export const ModuleTopicBrief = new ModuleTopicBrief$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ModuleTopicDetailsExt$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ModuleTopicDetailsExt", [
            { no: 1, name: "comment_guide", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { commentGuide: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string comment_guide */ 1:
                    message.commentGuide = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string comment_guide = 1; */
        if (message.commentGuide !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.commentGuide);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ModuleTopicDetailsExt
 */
export const ModuleTopicDetailsExt = new ModuleTopicDetailsExt$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Nameplate$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Nameplate", [
            { no: 1, name: "nid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "image_small", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "level", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "condition", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { nid: 0n, name: "", image: "", imageSmall: "", level: "", condition: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 nid */ 1:
                    message.nid = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string image */ 3:
                    message.image = reader.string();
                    break;
                case /* string image_small */ 4:
                    message.imageSmall = reader.string();
                    break;
                case /* string level */ 5:
                    message.level = reader.string();
                    break;
                case /* string condition */ 6:
                    message.condition = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 nid = 1; */
        if (message.nid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.nid);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string image = 3; */
        if (message.image !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.image);
        /* string image_small = 4; */
        if (message.imageSmall !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.imageSmall);
        /* string level = 5; */
        if (message.level !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.level);
        /* string condition = 6; */
        if (message.condition !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.condition);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Nameplate
 */
export const Nameplate = new Nameplate$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NewEP$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.NewEP", [
            { no: 1, name: "id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "index_show", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { id: 0, indexShow: "", cover: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 id */ 1:
                    message.id = reader.int32();
                    break;
                case /* string index_show */ 2:
                    message.indexShow = reader.string();
                    break;
                case /* string cover */ 3:
                    message.cover = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 id = 1; */
        if (message.id !== 0)
            writer.tag(1, WireType.Varint).int32(message.id);
        /* string index_show = 2; */
        if (message.indexShow !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.indexShow);
        /* string cover = 3; */
        if (message.cover !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cover);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.NewEP
 */
export const NewEP = new NewEP$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NoReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.NoReply", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.NoReply
 */
export const NoReply = new NoReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class NoReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.NoReq", []);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        return target ?? this.create();
    }
    internalBinaryWrite(message, writer, options) {
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.NoReq
 */
export const NoReq = new NoReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialAccountInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialAccountInfo", [
            { no: 1, name: "author", kind: "message", T: () => UserInfo },
            { no: 2, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "relation", kind: "message", T: () => Relation },
            { no: 5, name: "desc_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "desc_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, uri: "", descText1: "", descText2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.UserInfo author */ 1:
                    message.author = UserInfo.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* int64 mid */ 2:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 4:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* string desc_text1 */ 5:
                    message.descText1 = reader.string();
                    break;
                case /* string desc_text2 */ 6:
                    message.descText2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.UserInfo author = 1; */
        if (message.author)
            UserInfo.internalBinaryWrite(message.author, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 mid = 2; */
        if (message.mid !== 0n)
            writer.tag(2, WireType.Varint).int64(message.mid);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.Relation relation = 4; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string desc_text1 = 5; */
        if (message.descText1 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText1);
        /* string desc_text2 = 6; */
        if (message.descText2 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.descText2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialAccountInfo
 */
export const OfficialAccountInfo = new OfficialAccountInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialAccountsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialAccountsReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OfficialAccountInfo },
            { no: 2, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "offset", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { items: [], hasMore: false, offset: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.OfficialAccountInfo items */ 1:
                    message.items.push(OfficialAccountInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool has_more */ 2:
                    message.hasMore = reader.bool();
                    break;
                case /* int64 offset */ 3:
                    message.offset = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.OfficialAccountInfo items = 1; */
        for (let i = 0; i < message.items.length; i++)
            OfficialAccountInfo.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool has_more = 2; */
        if (message.hasMore !== false)
            writer.tag(2, WireType.Varint).bool(message.hasMore);
        /* int64 offset = 3; */
        if (message.offset !== 0n)
            writer.tag(3, WireType.Varint).int64(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialAccountsReply
 */
export const OfficialAccountsReply = new OfficialAccountsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialAccountsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialAccountsReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "offset", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", offset: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* int64 offset */ 3:
                    message.offset = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* int64 offset = 3; */
        if (message.offset !== 0n)
            writer.tag(3, WireType.Varint).int64(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialAccountsReq
 */
export const OfficialAccountsReq = new OfficialAccountsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialDynamicsReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialDynamicsReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => OfficialItem },
            { no: 2, name: "offset", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "player_args", kind: "message", T: () => PlayerArgs }
        ]);
    }
    create(value) {
        const message = { items: [], offset: 0n, hasMore: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.OfficialItem items */ 1:
                    message.items.push(OfficialItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 offset */ 2:
                    message.offset = reader.int64().toBigInt();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                case /* bilibili.app.archive.middleware.v1.PlayerArgs player_args */ 4:
                    message.playerArgs = PlayerArgs.internalBinaryRead(reader, reader.uint32(), options, message.playerArgs);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.OfficialItem items = 1; */
        for (let i = 0; i < message.items.length; i++)
            OfficialItem.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int64 offset = 2; */
        if (message.offset !== 0n)
            writer.tag(2, WireType.Varint).int64(message.offset);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        /* bilibili.app.archive.middleware.v1.PlayerArgs player_args = 4; */
        if (message.playerArgs)
            PlayerArgs.internalBinaryWrite(message.playerArgs, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialDynamicsReply
 */
export const OfficialDynamicsReply = new OfficialDynamicsReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialDynamicsReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialDynamicsReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "offset", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "", offset: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                case /* int64 offset */ 3:
                    message.offset = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        /* int64 offset = 3; */
        if (message.offset !== 0n)
            writer.tag(3, WireType.Varint).int64(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialDynamicsReq
 */
export const OfficialDynamicsReq = new OfficialDynamicsReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialItem", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "rcmd_archive", kind: "message", oneof: "rcmdItem", T: () => OfficialRcmdArchive },
            { no: 3, name: "rcmd_dynamic", kind: "message", oneof: "rcmdItem", T: () => OfficialRcmdDynamic }
        ]);
    }
    create(value) {
        const message = { type: 0, rcmdItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.OfficialRcmdArchive rcmd_archive */ 2:
                    message.rcmdItem = {
                        oneofKind: "rcmdArchive",
                        rcmdArchive: OfficialRcmdArchive.internalBinaryRead(reader, reader.uint32(), options, message.rcmdItem.rcmdArchive)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.OfficialRcmdDynamic rcmd_dynamic */ 3:
                    message.rcmdItem = {
                        oneofKind: "rcmdDynamic",
                        rcmdDynamic: OfficialRcmdDynamic.internalBinaryRead(reader, reader.uint32(), options, message.rcmdItem.rcmdDynamic)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.OfficialRcmdArchive rcmd_archive = 2; */
        if (message.rcmdItem.oneofKind === "rcmdArchive")
            OfficialRcmdArchive.internalBinaryWrite(message.rcmdItem.rcmdArchive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.OfficialRcmdDynamic rcmd_dynamic = 3; */
        if (message.rcmdItem.oneofKind === "rcmdDynamic")
            OfficialRcmdDynamic.internalBinaryWrite(message.rcmdItem.rcmdDynamic, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialItem
 */
export const OfficialItem = new OfficialItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialRcmdArchive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialRcmdArchive", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_right_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc_icon1", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "desc_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "desc_icon2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "desc_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "show_three_point", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 10, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 13, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 14, name: "dynamic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 15, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", coverRightText: "", descIcon1: 0, descText1: "", descIcon2: 0, descText2: "", reason: "", showThreePoint: false, uri: "", aid: 0n, mid: 0n, name: "", dynamicId: 0n, cid: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string cover_right_text */ 3:
                    message.coverRightText = reader.string();
                    break;
                case /* int32 desc_icon1 */ 4:
                    message.descIcon1 = reader.int32();
                    break;
                case /* string desc_text1 */ 5:
                    message.descText1 = reader.string();
                    break;
                case /* int32 desc_icon2 */ 6:
                    message.descIcon2 = reader.int32();
                    break;
                case /* string desc_text2 */ 7:
                    message.descText2 = reader.string();
                    break;
                case /* string reason */ 8:
                    message.reason = reader.string();
                    break;
                case /* bool show_three_point */ 9:
                    message.showThreePoint = reader.bool();
                    break;
                case /* string uri */ 10:
                    message.uri = reader.string();
                    break;
                case /* int64 aid */ 11:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 12:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string name */ 13:
                    message.name = reader.string();
                    break;
                case /* int64 dynamic_id */ 14:
                    message.dynamicId = reader.int64().toBigInt();
                    break;
                case /* int64 cid */ 15:
                    message.cid = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string cover_right_text = 3; */
        if (message.coverRightText !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.coverRightText);
        /* int32 desc_icon1 = 4; */
        if (message.descIcon1 !== 0)
            writer.tag(4, WireType.Varint).int32(message.descIcon1);
        /* string desc_text1 = 5; */
        if (message.descText1 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText1);
        /* int32 desc_icon2 = 6; */
        if (message.descIcon2 !== 0)
            writer.tag(6, WireType.Varint).int32(message.descIcon2);
        /* string desc_text2 = 7; */
        if (message.descText2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.descText2);
        /* string reason = 8; */
        if (message.reason !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.reason);
        /* bool show_three_point = 9; */
        if (message.showThreePoint !== false)
            writer.tag(9, WireType.Varint).bool(message.showThreePoint);
        /* string uri = 10; */
        if (message.uri !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.uri);
        /* int64 aid = 11; */
        if (message.aid !== 0n)
            writer.tag(11, WireType.Varint).int64(message.aid);
        /* int64 mid = 12; */
        if (message.mid !== 0n)
            writer.tag(12, WireType.Varint).int64(message.mid);
        /* string name = 13; */
        if (message.name !== "")
            writer.tag(13, WireType.LengthDelimited).string(message.name);
        /* int64 dynamic_id = 14; */
        if (message.dynamicId !== 0n)
            writer.tag(14, WireType.Varint).int64(message.dynamicId);
        /* int64 cid = 15; */
        if (message.cid !== 0n)
            writer.tag(15, WireType.Varint).int64(message.cid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialRcmdArchive
 */
export const OfficialRcmdArchive = new OfficialRcmdArchive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialRcmdDynamic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialRcmdDynamic", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_right_top_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc_icon1", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "desc_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "desc_icon2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "desc_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "dynamic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 11, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 12, name: "user_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", coverRightTopText: "", descIcon1: 0, descText1: "", descIcon2: 0, descText2: "", reason: "", uri: "", dynamicId: 0n, mid: 0n, userName: "", rid: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* string cover_right_top_text */ 3:
                    message.coverRightTopText = reader.string();
                    break;
                case /* int32 desc_icon1 */ 4:
                    message.descIcon1 = reader.int32();
                    break;
                case /* string desc_text1 */ 5:
                    message.descText1 = reader.string();
                    break;
                case /* int32 desc_icon2 */ 6:
                    message.descIcon2 = reader.int32();
                    break;
                case /* string desc_text2 */ 7:
                    message.descText2 = reader.string();
                    break;
                case /* string reason */ 8:
                    message.reason = reader.string();
                    break;
                case /* string uri */ 9:
                    message.uri = reader.string();
                    break;
                case /* int64 dynamic_id */ 10:
                    message.dynamicId = reader.int64().toBigInt();
                    break;
                case /* int64 mid */ 11:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string user_name */ 12:
                    message.userName = reader.string();
                    break;
                case /* int64 rid */ 13:
                    message.rid = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* string cover_right_top_text = 3; */
        if (message.coverRightTopText !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.coverRightTopText);
        /* int32 desc_icon1 = 4; */
        if (message.descIcon1 !== 0)
            writer.tag(4, WireType.Varint).int32(message.descIcon1);
        /* string desc_text1 = 5; */
        if (message.descText1 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.descText1);
        /* int32 desc_icon2 = 6; */
        if (message.descIcon2 !== 0)
            writer.tag(6, WireType.Varint).int32(message.descIcon2);
        /* string desc_text2 = 7; */
        if (message.descText2 !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.descText2);
        /* string reason = 8; */
        if (message.reason !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.reason);
        /* string uri = 9; */
        if (message.uri !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.uri);
        /* int64 dynamic_id = 10; */
        if (message.dynamicId !== 0n)
            writer.tag(10, WireType.Varint).int64(message.dynamicId);
        /* int64 mid = 11; */
        if (message.mid !== 0n)
            writer.tag(11, WireType.Varint).int64(message.mid);
        /* string user_name = 12; */
        if (message.userName !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.userName);
        /* int64 rid = 13; */
        if (message.rid !== 0n)
            writer.tag(13, WireType.Varint).int64(message.rid);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialRcmdDynamic
 */
export const OfficialRcmdDynamic = new OfficialRcmdDynamic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class OfficialVerify$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.OfficialVerify", [
            { no: 1, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "is_atten", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, desc: "", isAtten: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 type */ 1:
                    message.type = reader.int32();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* int32 is_atten */ 3:
                    message.isAtten = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* int32 is_atten = 3; */
        if (message.isAtten !== 0)
            writer.tag(3, WireType.Varint).int32(message.isAtten);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.OfficialVerify
 */
export const OfficialVerify = new OfficialVerify$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PGCSeason$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.PGCSeason", [
            { no: 1, name: "is_finish", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { isFinish: 0, title: "", type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 is_finish */ 1:
                    message.isFinish = reader.int32();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int32 type */ 3:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 is_finish = 1; */
        if (message.isFinish !== 0)
            writer.tag(1, WireType.Varint).int32(message.isFinish);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int32 type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.PGCSeason
 */
export const PGCSeason = new PGCSeason$Type();
// @generated message type with reflection information, may provide speed optimized methods
class PlayurlParam$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.PlayurlParam", [
            { no: 1, name: "qn", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "fnver", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "fnval", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "force_host", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "fourk", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { qn: 0, fnver: 0, fnval: 0, forceHost: 0, fourk: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 qn */ 1:
                    message.qn = reader.int32();
                    break;
                case /* int32 fnver */ 2:
                    message.fnver = reader.int32();
                    break;
                case /* int32 fnval */ 3:
                    message.fnval = reader.int32();
                    break;
                case /* int32 force_host */ 4:
                    message.forceHost = reader.int32();
                    break;
                case /* int32 fourk */ 5:
                    message.fourk = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 qn = 1; */
        if (message.qn !== 0)
            writer.tag(1, WireType.Varint).int32(message.qn);
        /* int32 fnver = 2; */
        if (message.fnver !== 0)
            writer.tag(2, WireType.Varint).int32(message.fnver);
        /* int32 fnval = 3; */
        if (message.fnval !== 0)
            writer.tag(3, WireType.Varint).int32(message.fnval);
        /* int32 force_host = 4; */
        if (message.forceHost !== 0)
            writer.tag(4, WireType.Varint).int32(message.forceHost);
        /* int32 fourk = 5; */
        if (message.fourk !== 0)
            writer.tag(5, WireType.Varint).int32(message.fourk);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.PlayurlParam
 */
export const PlayurlParam = new PlayurlParam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Popup$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Popup", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Popup
 */
export const Popup = new Popup$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdArchive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdArchive", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cover_left_icon_1", kind: "enum", T: () => ["bilibili.app.dynamic.v2.CoverIcon", CoverIcon] },
            { no: 4, name: "cover_left_text_1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "is_pgc", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 7, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 8, name: "badge", kind: "message", T: () => IconBadge },
            { no: 9, name: "cover_left_icon2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "cover_left_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "cover_left_icon3", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "cover_left_text3", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", cover: "", coverLeftIcon1: 0, coverLeftText1: "", uri: "", isPgc: false, aid: 0n, coverLeftIcon2: 0, coverLeftText2: "", coverLeftIcon3: 0, coverLeftText3: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string cover */ 2:
                    message.cover = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.CoverIcon cover_left_icon_1 */ 3:
                    message.coverLeftIcon1 = reader.int32();
                    break;
                case /* string cover_left_text_1 */ 4:
                    message.coverLeftText1 = reader.string();
                    break;
                case /* string uri */ 5:
                    message.uri = reader.string();
                    break;
                case /* bool is_pgc */ 6:
                    message.isPgc = reader.bool();
                    break;
                case /* int64 aid */ 7:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.IconBadge badge */ 8:
                    message.badge = IconBadge.internalBinaryRead(reader, reader.uint32(), options, message.badge);
                    break;
                case /* int32 cover_left_icon2 */ 9:
                    message.coverLeftIcon2 = reader.int32();
                    break;
                case /* string cover_left_text2 */ 10:
                    message.coverLeftText2 = reader.string();
                    break;
                case /* int32 cover_left_icon3 */ 11:
                    message.coverLeftIcon3 = reader.int32();
                    break;
                case /* string cover_left_text3 */ 12:
                    message.coverLeftText3 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string cover = 2; */
        if (message.cover !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.cover);
        /* bilibili.app.dynamic.v2.CoverIcon cover_left_icon_1 = 3; */
        if (message.coverLeftIcon1 !== 0)
            writer.tag(3, WireType.Varint).int32(message.coverLeftIcon1);
        /* string cover_left_text_1 = 4; */
        if (message.coverLeftText1 !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.coverLeftText1);
        /* string uri = 5; */
        if (message.uri !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.uri);
        /* bool is_pgc = 6; */
        if (message.isPgc !== false)
            writer.tag(6, WireType.Varint).bool(message.isPgc);
        /* int64 aid = 7; */
        if (message.aid !== 0n)
            writer.tag(7, WireType.Varint).int64(message.aid);
        /* bilibili.app.dynamic.v2.IconBadge badge = 8; */
        if (message.badge)
            IconBadge.internalBinaryWrite(message.badge, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int32 cover_left_icon2 = 9; */
        if (message.coverLeftIcon2 !== 0)
            writer.tag(9, WireType.Varint).int32(message.coverLeftIcon2);
        /* string cover_left_text2 = 10; */
        if (message.coverLeftText2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.coverLeftText2);
        /* int32 cover_left_icon3 = 11; */
        if (message.coverLeftIcon3 !== 0)
            writer.tag(11, WireType.Varint).int32(message.coverLeftIcon3);
        /* string cover_left_text3 = 12; */
        if (message.coverLeftText3 !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.coverLeftText3);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdArchive
 */
export const RcmdArchive = new RcmdArchive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdAuthor$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdAuthor", [
            { no: 1, name: "author", kind: "message", T: () => UserInfo },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "relation", kind: "message", T: () => Relation }
        ]);
    }
    create(value) {
        const message = { desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.UserInfo author */ 1:
                    message.author = UserInfo.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 3:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.UserInfo author = 1; */
        if (message.author)
            UserInfo.internalBinaryWrite(message.author, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* bilibili.app.dynamic.v2.Relation relation = 3; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdAuthor
 */
export const RcmdAuthor = new RcmdAuthor$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdItem", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.RcmdType", RcmdType] },
            { no: 2, name: "rcmd_archive", kind: "message", oneof: "rcmdItem", T: () => RcmdArchive }
        ]);
    }
    create(value) {
        const message = { type: 0, rcmdItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.RcmdType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.RcmdArchive rcmd_archive */ 2:
                    message.rcmdItem = {
                        oneofKind: "rcmdArchive",
                        rcmdArchive: RcmdArchive.internalBinaryRead(reader, reader.uint32(), options, message.rcmdItem.rcmdArchive)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.RcmdType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.RcmdArchive rcmd_archive = 2; */
        if (message.rcmdItem.oneofKind === "rcmdArchive")
            RcmdArchive.internalBinaryWrite(message.rcmdItem.rcmdArchive, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdItem
 */
export const RcmdItem = new RcmdItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdOption$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdOption", [
            { no: 1, name: "show_title", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { showTitle: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool show_title */ 1:
                    message.showTitle = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool show_title = 1; */
        if (message.showTitle !== false)
            writer.tag(1, WireType.Varint).bool(message.showTitle);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdOption
 */
export const RcmdOption = new RcmdOption$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdTopButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdTopButton", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { text: "", url: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string url */ 2:
                    message.url = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string url = 2; */
        if (message.url !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.url);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdTopButton
 */
export const RcmdTopButton = new RcmdTopButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RcmdUPsParam$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RcmdUPsParam", [
            { no: 1, name: "dislike_ts", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { dislikeTs: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 dislike_ts */ 1:
                    message.dislikeTs = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 dislike_ts = 1; */
        if (message.dislikeTs !== 0n)
            writer.tag(1, WireType.Varint).int64(message.dislikeTs);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RcmdUPsParam
 */
export const RcmdUPsParam = new RcmdUPsParam$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Relation$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Relation", [
            { no: 1, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.RelationStatus", RelationStatus] },
            { no: 2, name: "is_follow", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "is_followed", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { status: 0, isFollow: 0, isFollowed: 0, title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.RelationStatus status */ 1:
                    message.status = reader.int32();
                    break;
                case /* int32 is_follow */ 2:
                    message.isFollow = reader.int32();
                    break;
                case /* int32 is_followed */ 3:
                    message.isFollowed = reader.int32();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.RelationStatus status = 1; */
        if (message.status !== 0)
            writer.tag(1, WireType.Varint).int32(message.status);
        /* int32 is_follow = 2; */
        if (message.isFollow !== 0)
            writer.tag(2, WireType.Varint).int32(message.isFollow);
        /* int32 is_followed = 3; */
        if (message.isFollowed !== 0)
            writer.tag(3, WireType.Varint).int32(message.isFollowed);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Relation
 */
export const Relation = new Relation$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RepostListReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RepostListReq", [
            { no: 1, name: "dynamic_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "repost_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.RepostType", RepostType] }
        ]);
    }
    create(value) {
        const message = { dynamicId: "", dynType: 0n, rid: 0n, offset: "", from: "", repostType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string dynamic_id */ 1:
                    message.dynamicId = reader.string();
                    break;
                case /* int64 dyn_type */ 2:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* int64 rid */ 3:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* string offset */ 4:
                    message.offset = reader.string();
                    break;
                case /* string from */ 5:
                    message.from = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.RepostType repost_type */ 6:
                    message.repostType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string dynamic_id = 1; */
        if (message.dynamicId !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.dynamicId);
        /* int64 dyn_type = 2; */
        if (message.dynType !== 0n)
            writer.tag(2, WireType.Varint).int64(message.dynType);
        /* int64 rid = 3; */
        if (message.rid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rid);
        /* string offset = 4; */
        if (message.offset !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.offset);
        /* string from = 5; */
        if (message.from !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.from);
        /* bilibili.app.dynamic.v2.RepostType repost_type = 6; */
        if (message.repostType !== 0)
            writer.tag(6, WireType.Varint).int32(message.repostType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RepostListReq
 */
export const RepostListReq = new RepostListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class RepostListRsp$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.RepostListRsp", [
            { no: 1, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 4, name: "total_count", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "repost_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.RepostType", RepostType] }
        ]);
    }
    create(value) {
        const message = { list: [], offset: "", hasMore: false, totalCount: 0n, repostType: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 1:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                case /* bool has_more */ 3:
                    message.hasMore = reader.bool();
                    break;
                case /* int64 total_count */ 4:
                    message.totalCount = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.RepostType repost_type */ 5:
                    message.repostType = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 1; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        /* bool has_more = 3; */
        if (message.hasMore !== false)
            writer.tag(3, WireType.Varint).bool(message.hasMore);
        /* int64 total_count = 4; */
        if (message.totalCount !== 0n)
            writer.tag(4, WireType.Varint).int64(message.totalCount);
        /* bilibili.app.dynamic.v2.RepostType repost_type = 5; */
        if (message.repostType !== 0)
            writer.tag(5, WireType.Varint).int32(message.repostType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.RepostListRsp
 */
export const RepostListRsp = new RepostListRsp$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReactionListReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ReactionListReq", [
            { no: 1, name: "dynamic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "dyn_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { dynamicId: 0n, dynType: 0n, rid: 0n, offset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 dynamic_id */ 1:
                    message.dynamicId = reader.int64().toBigInt();
                    break;
                case /* int64 dyn_type */ 2:
                    message.dynType = reader.int64().toBigInt();
                    break;
                case /* int64 rid */ 3:
                    message.rid = reader.int64().toBigInt();
                    break;
                case /* string offset */ 4:
                    message.offset = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 dynamic_id = 1; */
        if (message.dynamicId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.dynamicId);
        /* int64 dyn_type = 2; */
        if (message.dynType !== 0n)
            writer.tag(2, WireType.Varint).int64(message.dynType);
        /* int64 rid = 3; */
        if (message.rid !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rid);
        /* string offset = 4; */
        if (message.offset !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ReactionListReq
 */
export const ReactionListReq = new ReactionListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReactionListReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ReactionListReply", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ReactionListItem },
            { no: 3, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { title: "", list: [], offset: "", hasMore: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ReactionListItem list */ 2:
                    message.list.push(ReactionListItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string offset */ 3:
                    message.offset = reader.string();
                    break;
                case /* bool has_more */ 4:
                    message.hasMore = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.ReactionListItem list = 2; */
        for (let i = 0; i < message.list.length; i++)
            ReactionListItem.internalBinaryWrite(message.list[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string offset = 3; */
        if (message.offset !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.offset);
        /* bool has_more = 4; */
        if (message.hasMore !== false)
            writer.tag(4, WireType.Varint).bool(message.hasMore);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ReactionListReply
 */
export const ReactionListReply = new ReactionListReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ReactionListItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ReactionListItem", [
            { no: 1, name: "user", kind: "message", T: () => UserInfo },
            { no: 2, name: "relation", kind: "message", T: () => Relation },
            { no: 3, name: "act_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rcmd_reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { actText: "", rcmdReason: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.UserInfo user */ 1:
                    message.user = UserInfo.internalBinaryRead(reader, reader.uint32(), options, message.user);
                    break;
                case /* bilibili.app.dynamic.v2.Relation relation */ 2:
                    message.relation = Relation.internalBinaryRead(reader, reader.uint32(), options, message.relation);
                    break;
                case /* string act_text */ 3:
                    message.actText = reader.string();
                    break;
                case /* string rcmd_reason */ 4:
                    message.rcmdReason = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.UserInfo user = 1; */
        if (message.user)
            UserInfo.internalBinaryWrite(message.user, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Relation relation = 2; */
        if (message.relation)
            Relation.internalBinaryWrite(message.relation, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string act_text = 3; */
        if (message.actText !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.actText);
        /* string rcmd_reason = 4; */
        if (message.rcmdReason !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.rcmdReason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ReactionListItem
 */
export const ReactionListItem = new ReactionListItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SchoolRecommendReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SchoolRecommendReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusInfo }
        ]);
    }
    create(value) {
        const message = { items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.CampusInfo items */ 1:
                    message.items.push(CampusInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.CampusInfo items = 1; */
        for (let i = 0; i < message.items.length; i++)
            CampusInfo.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SchoolRecommendReply
 */
export const SchoolRecommendReply = new SchoolRecommendReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SchoolRecommendReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SchoolRecommendReq", [
            { no: 1, name: "lat", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ },
            { no: 2, name: "lng", kind: "scalar", T: 2 /*ScalarType.FLOAT*/ }
        ]);
    }
    create(value) {
        const message = { lat: 0, lng: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* float lat */ 1:
                    message.lat = reader.float();
                    break;
                case /* float lng */ 2:
                    message.lng = reader.float();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* float lat = 1; */
        if (message.lat !== 0)
            writer.tag(1, WireType.Bit32).float(message.lat);
        /* float lng = 2; */
        if (message.lng !== 0)
            writer.tag(2, WireType.Bit32).float(message.lng);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SchoolRecommendReq
 */
export const SchoolRecommendReq = new SchoolRecommendReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SchoolSearchReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SchoolSearchReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => CampusInfo },
            { no: 2, name: "toast", kind: "message", T: () => SearchToast }
        ]);
    }
    create(value) {
        const message = { items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.CampusInfo items */ 1:
                    message.items.push(CampusInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.SearchToast toast */ 2:
                    message.toast = SearchToast.internalBinaryRead(reader, reader.uint32(), options, message.toast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.CampusInfo items = 1; */
        for (let i = 0; i < message.items.length; i++)
            CampusInfo.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.SearchToast toast = 2; */
        if (message.toast)
            SearchToast.internalBinaryWrite(message.toast, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SchoolSearchReply
 */
export const SchoolSearchReply = new SchoolSearchReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SchoolSearchReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SchoolSearchReq", [
            { no: 1, name: "keyword", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { keyword: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string keyword */ 1:
                    message.keyword = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string keyword = 1; */
        if (message.keyword !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.keyword);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SchoolSearchReq
 */
export const SchoolSearchReq = new SchoolSearchReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchChannel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchChannel", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "more_button", kind: "message", T: () => SearchTopicButton },
            { no: 3, name: "channels", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ChannelInfo }
        ]);
    }
    create(value) {
        const message = { title: "", channels: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.SearchTopicButton more_button */ 2:
                    message.moreButton = SearchTopicButton.internalBinaryRead(reader, reader.uint32(), options, message.moreButton);
                    break;
                case /* repeated bilibili.app.dynamic.v2.ChannelInfo channels */ 3:
                    message.channels.push(ChannelInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.SearchTopicButton more_button = 2; */
        if (message.moreButton)
            SearchTopicButton.internalBinaryWrite(message.moreButton, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.ChannelInfo channels = 3; */
        for (let i = 0; i < message.channels.length; i++)
            ChannelInfo.internalBinaryWrite(message.channels[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchChannel
 */
export const SearchChannel = new SearchChannel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchInfo", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => DynamicItem },
            { no: 3, name: "track_id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "total", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 6, name: "version", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", list: [], trackId: "", total: 0n, hasMore: false, version: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.DynamicItem list */ 2:
                    message.list.push(DynamicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string track_id */ 3:
                    message.trackId = reader.string();
                    break;
                case /* int64 total */ 4:
                    message.total = reader.int64().toBigInt();
                    break;
                case /* bool has_more */ 5:
                    message.hasMore = reader.bool();
                    break;
                case /* string version */ 6:
                    message.version = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.DynamicItem list = 2; */
        for (let i = 0; i < message.list.length; i++)
            DynamicItem.internalBinaryWrite(message.list[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string track_id = 3; */
        if (message.trackId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.trackId);
        /* int64 total = 4; */
        if (message.total !== 0n)
            writer.tag(4, WireType.Varint).int64(message.total);
        /* bool has_more = 5; */
        if (message.hasMore !== false)
            writer.tag(5, WireType.Varint).bool(message.hasMore);
        /* string version = 6; */
        if (message.version !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.version);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchInfo
 */
export const SearchInfo = new SearchInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchToast$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchToast", [
            { no: 1, name: "desc_text1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc_text2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { descText1: "", descText2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string desc_text1 */ 1:
                    message.descText1 = reader.string();
                    break;
                case /* string desc_text2 */ 2:
                    message.descText2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string desc_text1 = 1; */
        if (message.descText1 !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.descText1);
        /* string desc_text2 = 2; */
        if (message.descText2 !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.descText2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchToast
 */
export const SearchToast = new SearchToast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchTopic$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchTopic", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "more_button", kind: "message", T: () => SearchTopicButton },
            { no: 3, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => SearchTopicItem }
        ]);
    }
    create(value) {
        const message = { title: "", items: [] };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.SearchTopicButton more_button */ 2:
                    message.moreButton = SearchTopicButton.internalBinaryRead(reader, reader.uint32(), options, message.moreButton);
                    break;
                case /* repeated bilibili.app.dynamic.v2.SearchTopicItem items */ 3:
                    message.items.push(SearchTopicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.SearchTopicButton more_button = 2; */
        if (message.moreButton)
            SearchTopicButton.internalBinaryWrite(message.moreButton, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.dynamic.v2.SearchTopicItem items = 3; */
        for (let i = 0; i < message.items.length; i++)
            SearchTopicItem.internalBinaryWrite(message.items[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchTopic
 */
export const SearchTopic = new SearchTopic$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchTopicButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchTopicButton", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", jumpUri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string jump_uri */ 2:
                    message.jumpUri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string jump_uri = 2; */
        if (message.jumpUri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.jumpUri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchTopicButton
 */
export const SearchTopicButton = new SearchTopicButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SearchTopicItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SearchTopicItem", [
            { no: 1, name: "topic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "topic_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "is_activity", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { topicId: 0n, topicName: "", desc: "", url: "", isActivity: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 topic_id */ 1:
                    message.topicId = reader.int64().toBigInt();
                    break;
                case /* string topic_name */ 2:
                    message.topicName = reader.string();
                    break;
                case /* string desc */ 3:
                    message.desc = reader.string();
                    break;
                case /* string url */ 4:
                    message.url = reader.string();
                    break;
                case /* bool is_activity */ 5:
                    message.isActivity = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 topic_id = 1; */
        if (message.topicId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.topicId);
        /* string topic_name = 2; */
        if (message.topicName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.topicName);
        /* string desc = 3; */
        if (message.desc !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.desc);
        /* string url = 4; */
        if (message.url !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.url);
        /* bool is_activity = 5; */
        if (message.isActivity !== false)
            writer.tag(5, WireType.Varint).bool(message.isActivity);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SearchTopicItem
 */
export const SearchTopicItem = new SearchTopicItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetDecisionReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SetDecisionReq", [
            { no: 1, name: "result", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { result: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 result */ 1:
                    message.result = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 result = 1; */
        if (message.result !== 0)
            writer.tag(1, WireType.Varint).int32(message.result);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SetDecisionReq
 */
export const SetDecisionReq = new SetDecisionReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SetRecentCampusReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SetRecentCampusReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SetRecentCampusReq
 */
export const SetRecentCampusReq = new SetRecentCampusReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShareChannel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ShareChannel", [
            { no: 1, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "channel", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "reserve", kind: "message", T: () => ShareReserve }
        ]);
    }
    create(value) {
        const message = { name: "", image: "", channel: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string name */ 1:
                    message.name = reader.string();
                    break;
                case /* string image */ 2:
                    message.image = reader.string();
                    break;
                case /* string channel */ 3:
                    message.channel = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ShareReserve reserve */ 4:
                    message.reserve = ShareReserve.internalBinaryRead(reader, reader.uint32(), options, message.reserve);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string name = 1; */
        if (message.name !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.name);
        /* string image = 2; */
        if (message.image !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.image);
        /* string channel = 3; */
        if (message.channel !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.channel);
        /* bilibili.app.dynamic.v2.ShareReserve reserve = 4; */
        if (message.reserve)
            ShareReserve.internalBinaryWrite(message.reserve, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ShareChannel
 */
export const ShareChannel = new ShareChannel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ShareReserve$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ShareReserve", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "qr_code_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "qr_code_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "qr_code_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "user_info", kind: "message", T: () => AdditionUserInfo }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "", qrCodeIcon: "", qrCodeText: "", qrCodeUrl: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* string qr_code_icon */ 3:
                    message.qrCodeIcon = reader.string();
                    break;
                case /* string qr_code_text */ 4:
                    message.qrCodeText = reader.string();
                    break;
                case /* string qr_code_url */ 5:
                    message.qrCodeUrl = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionUserInfo user_info */ 6:
                    message.userInfo = AdditionUserInfo.internalBinaryRead(reader, reader.uint32(), options, message.userInfo);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* string qr_code_icon = 3; */
        if (message.qrCodeIcon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.qrCodeIcon);
        /* string qr_code_text = 4; */
        if (message.qrCodeText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.qrCodeText);
        /* string qr_code_url = 5; */
        if (message.qrCodeUrl !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.qrCodeUrl);
        /* bilibili.app.dynamic.v2.AdditionUserInfo user_info = 6; */
        if (message.userInfo)
            AdditionUserInfo.internalBinaryWrite(message.userInfo, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ShareReserve
 */
export const ShareReserve = new ShareReserve$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SortType$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SortType", [
            { no: 1, name: "sort_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "sort_type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { sortType: 0, sortTypeName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 sort_type */ 1:
                    message.sortType = reader.int32();
                    break;
                case /* string sort_type_name */ 2:
                    message.sortTypeName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 sort_type = 1; */
        if (message.sortType !== 0)
            writer.tag(1, WireType.Varint).int32(message.sortType);
        /* string sort_type_name = 2; */
        if (message.sortTypeName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.sortTypeName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SortType
 */
export const SortType = new SortType$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoryArchive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.StoryArchive", [
            { no: 1, name: "cover", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "dimension", kind: "message", T: () => Dimension }
        ]);
    }
    create(value) {
        const message = { cover: "", aid: 0n, uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string cover */ 1:
                    message.cover = reader.string();
                    break;
                case /* int64 aid */ 2:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.Dimension dimension */ 4:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string cover = 1; */
        if (message.cover !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.cover);
        /* int64 aid = 2; */
        if (message.aid !== 0n)
            writer.tag(2, WireType.Varint).int64(message.aid);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.Dimension dimension = 4; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.StoryArchive
 */
export const StoryArchive = new StoryArchive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StoryItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.StoryItem", [
            { no: 1, name: "author", kind: "message", T: () => UserInfo },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "status", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "story_archive", kind: "message", oneof: "rcmdItem", T: () => StoryArchive }
        ]);
    }
    create(value) {
        const message = { desc: "", status: 0n, type: 0, rcmdItem: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.UserInfo author */ 1:
                    message.author = UserInfo.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                case /* int64 status */ 3:
                    message.status = reader.int64().toBigInt();
                    break;
                case /* int32 type */ 4:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.StoryArchive story_archive */ 5:
                    message.rcmdItem = {
                        oneofKind: "storyArchive",
                        storyArchive: StoryArchive.internalBinaryRead(reader, reader.uint32(), options, message.rcmdItem.storyArchive)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.UserInfo author = 1; */
        if (message.author)
            UserInfo.internalBinaryWrite(message.author, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        /* int64 status = 3; */
        if (message.status !== 0n)
            writer.tag(3, WireType.Varint).int64(message.status);
        /* int32 type = 4; */
        if (message.type !== 0)
            writer.tag(4, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.StoryArchive story_archive = 5; */
        if (message.rcmdItem.oneofKind === "storyArchive")
            StoryArchive.internalBinaryWrite(message.rcmdItem.storyArchive, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.StoryItem
 */
export const StoryItem = new StoryItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SubscribeCampusReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.SubscribeCampusReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "campus_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, campusName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string campus_name */ 2:
                    message.campusName = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string campus_name = 2; */
        if (message.campusName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.campusName);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.SubscribeCampusReq
 */
export const SubscribeCampusReq = new SubscribeCampusReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointAttention$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointAttention", [
            { no: 1, name: "attention_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "attention_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "not_attention_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "not_attention_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "status", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ThreePointAttentionStatus", ThreePointAttentionStatus] }
        ]);
    }
    create(value) {
        const message = { attentionIcon: "", attentionText: "", notAttentionIcon: "", notAttentionText: "", status: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string attention_icon */ 1:
                    message.attentionIcon = reader.string();
                    break;
                case /* string attention_text */ 2:
                    message.attentionText = reader.string();
                    break;
                case /* string not_attention_icon */ 3:
                    message.notAttentionIcon = reader.string();
                    break;
                case /* string not_attention_text */ 4:
                    message.notAttentionText = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointAttentionStatus status */ 5:
                    message.status = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string attention_icon = 1; */
        if (message.attentionIcon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.attentionIcon);
        /* string attention_text = 2; */
        if (message.attentionText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.attentionText);
        /* string not_attention_icon = 3; */
        if (message.notAttentionIcon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.notAttentionIcon);
        /* string not_attention_text = 4; */
        if (message.notAttentionText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.notAttentionText);
        /* bilibili.app.dynamic.v2.ThreePointAttentionStatus status = 5; */
        if (message.status !== 0)
            writer.tag(5, WireType.Varint).int32(message.status);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointAttention
 */
export const ThreePointAttention = new ThreePointAttention$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointAutoPlay$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointAutoPlay", [
            { no: 1, name: "open_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "open_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "close_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "close_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "open_text_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "close_text_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "only_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "only_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "open_icon_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "close_icon_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { openIcon: "", openText: "", closeIcon: "", closeText: "", openTextV2: "", closeTextV2: "", onlyIcon: "", onlyText: "", openIconV2: "", closeIconV2: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string open_icon */ 1:
                    message.openIcon = reader.string();
                    break;
                case /* string open_text */ 2:
                    message.openText = reader.string();
                    break;
                case /* string close_icon */ 3:
                    message.closeIcon = reader.string();
                    break;
                case /* string close_text */ 4:
                    message.closeText = reader.string();
                    break;
                case /* string open_text_v2 */ 5:
                    message.openTextV2 = reader.string();
                    break;
                case /* string close_text_v2 */ 6:
                    message.closeTextV2 = reader.string();
                    break;
                case /* string only_icon */ 7:
                    message.onlyIcon = reader.string();
                    break;
                case /* string only_text */ 8:
                    message.onlyText = reader.string();
                    break;
                case /* string open_icon_v2 */ 9:
                    message.openIconV2 = reader.string();
                    break;
                case /* string close_icon_v2 */ 10:
                    message.closeIconV2 = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string open_icon = 1; */
        if (message.openIcon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.openIcon);
        /* string open_text = 2; */
        if (message.openText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.openText);
        /* string close_icon = 3; */
        if (message.closeIcon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.closeIcon);
        /* string close_text = 4; */
        if (message.closeText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.closeText);
        /* string open_text_v2 = 5; */
        if (message.openTextV2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.openTextV2);
        /* string close_text_v2 = 6; */
        if (message.closeTextV2 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.closeTextV2);
        /* string only_icon = 7; */
        if (message.onlyIcon !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.onlyIcon);
        /* string only_text = 8; */
        if (message.onlyText !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.onlyText);
        /* string open_icon_v2 = 9; */
        if (message.openIconV2 !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.openIconV2);
        /* string close_icon_v2 = 10; */
        if (message.closeIconV2 !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.closeIconV2);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointAutoPlay
 */
export const ThreePointAutoPlay = new ThreePointAutoPlay$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointComment$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointComment", [
            { no: 1, name: "up_selection", kind: "message", T: () => CommentDetail },
            { no: 2, name: "up_close", kind: "message", T: () => CommentDetail },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.CommentDetail up_selection */ 1:
                    message.upSelection = CommentDetail.internalBinaryRead(reader, reader.uint32(), options, message.upSelection);
                    break;
                case /* bilibili.app.dynamic.v2.CommentDetail up_close */ 2:
                    message.upClose = CommentDetail.internalBinaryRead(reader, reader.uint32(), options, message.upClose);
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                case /* string title */ 4:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.CommentDetail up_selection = 1; */
        if (message.upSelection)
            CommentDetail.internalBinaryWrite(message.upSelection, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.CommentDetail up_close = 2; */
        if (message.upClose)
            CommentDetail.internalBinaryWrite(message.upClose, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        /* string title = 4; */
        if (message.title !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointComment
 */
export const ThreePointComment = new ThreePointComment$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointDefault$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointDefault", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "id", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "toast", kind: "message", T: () => ThreePointDefaultToast }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", uri: "", id: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string uri */ 3:
                    message.uri = reader.string();
                    break;
                case /* string id */ 4:
                    message.id = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointDefaultToast toast */ 5:
                    message.toast = ThreePointDefaultToast.internalBinaryRead(reader, reader.uint32(), options, message.toast);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string uri = 3; */
        if (message.uri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.uri);
        /* string id = 4; */
        if (message.id !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.id);
        /* bilibili.app.dynamic.v2.ThreePointDefaultToast toast = 5; */
        if (message.toast)
            ThreePointDefaultToast.internalBinaryWrite(message.toast, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointDefault
 */
export const ThreePointDefault = new ThreePointDefault$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointDefaultToast$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointDefaultToast", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", desc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string desc */ 2:
                    message.desc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string desc = 2; */
        if (message.desc !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.desc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointDefaultToast
 */
export const ThreePointDefaultToast = new ThreePointDefaultToast$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointDislike$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointDislike", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointDislike
 */
export const ThreePointDislike = new ThreePointDislike$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointFavorite$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointFavorite", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "is_favourite", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 5, name: "cancel_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "cancel_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", id: 0n, isFavourite: false, cancelIcon: "", cancelTitle: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int64 id */ 3:
                    message.id = reader.int64().toBigInt();
                    break;
                case /* bool is_favourite */ 4:
                    message.isFavourite = reader.bool();
                    break;
                case /* string cancel_icon */ 5:
                    message.cancelIcon = reader.string();
                    break;
                case /* string cancel_title */ 6:
                    message.cancelTitle = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int64 id = 3; */
        if (message.id !== 0n)
            writer.tag(3, WireType.Varint).int64(message.id);
        /* bool is_favourite = 4; */
        if (message.isFavourite !== false)
            writer.tag(4, WireType.Varint).bool(message.isFavourite);
        /* string cancel_icon = 5; */
        if (message.cancelIcon !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.cancelIcon);
        /* string cancel_title = 6; */
        if (message.cancelTitle !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.cancelTitle);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointFavorite
 */
export const ThreePointFavorite = new ThreePointFavorite$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointHide$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointHide", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "interactive", kind: "message", T: () => ThreePointHideInteractive },
            { no: 4, name: "blook_fid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "blook_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", blookFid: 0n, blookType: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointHideInteractive interactive */ 3:
                    message.interactive = ThreePointHideInteractive.internalBinaryRead(reader, reader.uint32(), options, message.interactive);
                    break;
                case /* int64 blook_fid */ 4:
                    message.blookFid = reader.int64().toBigInt();
                    break;
                case /* string blook_type */ 5:
                    message.blookType = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.ThreePointHideInteractive interactive = 3; */
        if (message.interactive)
            ThreePointHideInteractive.internalBinaryWrite(message.interactive, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* int64 blook_fid = 4; */
        if (message.blookFid !== 0n)
            writer.tag(4, WireType.Varint).int64(message.blookFid);
        /* string blook_type = 5; */
        if (message.blookType !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.blookType);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointHide
 */
export const ThreePointHide = new ThreePointHide$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointHideInteractive$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointHideInteractive", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "confirm", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "cancel", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", confirm: "", cancel: "", toast: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string confirm */ 2:
                    message.confirm = reader.string();
                    break;
                case /* string cancel */ 3:
                    message.cancel = reader.string();
                    break;
                case /* string toast */ 4:
                    message.toast = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string confirm = 2; */
        if (message.confirm !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.confirm);
        /* string cancel = 3; */
        if (message.cancel !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.cancel);
        /* string toast = 4; */
        if (message.toast !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.toast);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointHideInteractive
 */
export const ThreePointHideInteractive = new ThreePointHideInteractive$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointItem", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.ThreePointType", ThreePointType] },
            { no: 2, name: "default", kind: "message", oneof: "item", T: () => ThreePointDefault },
            { no: 3, name: "auto_player", kind: "message", oneof: "item", T: () => ThreePointAutoPlay },
            { no: 4, name: "share", kind: "message", oneof: "item", T: () => ThreePointShare },
            { no: 5, name: "attention", kind: "message", oneof: "item", T: () => ThreePointAttention },
            { no: 6, name: "wait", kind: "message", oneof: "item", T: () => ThreePointWait },
            { no: 7, name: "dislike", kind: "message", oneof: "item", T: () => ThreePointDislike },
            { no: 8, name: "favorite", kind: "message", oneof: "item", T: () => ThreePointFavorite },
            { no: 9, name: "top", kind: "message", oneof: "item", T: () => ThreePointTop },
            { no: 10, name: "comment", kind: "message", oneof: "item", T: () => ThreePointComment },
            { no: 11, name: "hide", kind: "message", oneof: "item", T: () => ThreePointHide },
            { no: 12, name: "topic_irrelevant", kind: "message", oneof: "item", T: () => ThreePointTopicIrrelevant }
        ]);
    }
    create(value) {
        const message = { type: 0, item: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.ThreePointType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointDefault default */ 2:
                    message.item = {
                        oneofKind: "default",
                        default: ThreePointDefault.internalBinaryRead(reader, reader.uint32(), options, message.item.default)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointAutoPlay auto_player */ 3:
                    message.item = {
                        oneofKind: "autoPlayer",
                        autoPlayer: ThreePointAutoPlay.internalBinaryRead(reader, reader.uint32(), options, message.item.autoPlayer)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointShare share */ 4:
                    message.item = {
                        oneofKind: "share",
                        share: ThreePointShare.internalBinaryRead(reader, reader.uint32(), options, message.item.share)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointAttention attention */ 5:
                    message.item = {
                        oneofKind: "attention",
                        attention: ThreePointAttention.internalBinaryRead(reader, reader.uint32(), options, message.item.attention)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointWait wait */ 6:
                    message.item = {
                        oneofKind: "wait",
                        wait: ThreePointWait.internalBinaryRead(reader, reader.uint32(), options, message.item.wait)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointDislike dislike */ 7:
                    message.item = {
                        oneofKind: "dislike",
                        dislike: ThreePointDislike.internalBinaryRead(reader, reader.uint32(), options, message.item.dislike)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointFavorite favorite */ 8:
                    message.item = {
                        oneofKind: "favorite",
                        favorite: ThreePointFavorite.internalBinaryRead(reader, reader.uint32(), options, message.item.favorite)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointTop top */ 9:
                    message.item = {
                        oneofKind: "top",
                        top: ThreePointTop.internalBinaryRead(reader, reader.uint32(), options, message.item.top)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointComment comment */ 10:
                    message.item = {
                        oneofKind: "comment",
                        comment: ThreePointComment.internalBinaryRead(reader, reader.uint32(), options, message.item.comment)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointHide hide */ 11:
                    message.item = {
                        oneofKind: "hide",
                        hide: ThreePointHide.internalBinaryRead(reader, reader.uint32(), options, message.item.hide)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.ThreePointTopicIrrelevant topic_irrelevant */ 12:
                    message.item = {
                        oneofKind: "topicIrrelevant",
                        topicIrrelevant: ThreePointTopicIrrelevant.internalBinaryRead(reader, reader.uint32(), options, message.item.topicIrrelevant)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.ThreePointType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.ThreePointDefault default = 2; */
        if (message.item.oneofKind === "default")
            ThreePointDefault.internalBinaryWrite(message.item.default, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointAutoPlay auto_player = 3; */
        if (message.item.oneofKind === "autoPlayer")
            ThreePointAutoPlay.internalBinaryWrite(message.item.autoPlayer, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointShare share = 4; */
        if (message.item.oneofKind === "share")
            ThreePointShare.internalBinaryWrite(message.item.share, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointAttention attention = 5; */
        if (message.item.oneofKind === "attention")
            ThreePointAttention.internalBinaryWrite(message.item.attention, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointWait wait = 6; */
        if (message.item.oneofKind === "wait")
            ThreePointWait.internalBinaryWrite(message.item.wait, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointDislike dislike = 7; */
        if (message.item.oneofKind === "dislike")
            ThreePointDislike.internalBinaryWrite(message.item.dislike, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointFavorite favorite = 8; */
        if (message.item.oneofKind === "favorite")
            ThreePointFavorite.internalBinaryWrite(message.item.favorite, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointTop top = 9; */
        if (message.item.oneofKind === "top")
            ThreePointTop.internalBinaryWrite(message.item.top, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointComment comment = 10; */
        if (message.item.oneofKind === "comment")
            ThreePointComment.internalBinaryWrite(message.item.comment, writer.tag(10, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointHide hide = 11; */
        if (message.item.oneofKind === "hide")
            ThreePointHide.internalBinaryWrite(message.item.hide, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.ThreePointTopicIrrelevant topic_irrelevant = 12; */
        if (message.item.oneofKind === "topicIrrelevant")
            ThreePointTopicIrrelevant.internalBinaryWrite(message.item.topicIrrelevant, writer.tag(12, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointItem
 */
export const ThreePointItem = new ThreePointItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointShare$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointShare", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "channel", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => ThreePointShareChannel },
            { no: 4, name: "channel_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "reserve", kind: "message", T: () => ShareReserve }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", channel: [], channelName: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.ThreePointShareChannel channel */ 3:
                    message.channel.push(ThreePointShareChannel.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string channel_name */ 4:
                    message.channelName = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.ShareReserve reserve */ 5:
                    message.reserve = ShareReserve.internalBinaryRead(reader, reader.uint32(), options, message.reserve);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.ThreePointShareChannel channel = 3; */
        for (let i = 0; i < message.channel.length; i++)
            ThreePointShareChannel.internalBinaryWrite(message.channel[i], writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* string channel_name = 4; */
        if (message.channelName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.channelName);
        /* bilibili.app.dynamic.v2.ShareReserve reserve = 5; */
        if (message.reserve)
            ShareReserve.internalBinaryWrite(message.reserve, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointShare
 */
export const ThreePointShare = new ThreePointShare$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointShareChannel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointShareChannel", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointShareChannel
 */
export const ThreePointShareChannel = new ThreePointShareChannel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointTop$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointTop", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.TopType", TopType] }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", type: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.TopType type */ 3:
                    message.type = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.TopType type = 3; */
        if (message.type !== 0)
            writer.tag(3, WireType.Varint).int32(message.type);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointTop
 */
export const ThreePointTop = new ThreePointTop$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointTopicIrrelevant$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointTopicIrrelevant", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "toast", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "topic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "res_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "res_type", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "reason", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", toast: "", topicId: 0n, resId: 0n, resType: 0n, reason: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string toast */ 3:
                    message.toast = reader.string();
                    break;
                case /* int64 topic_id */ 4:
                    message.topicId = reader.int64().toBigInt();
                    break;
                case /* int64 res_id */ 5:
                    message.resId = reader.int64().toBigInt();
                    break;
                case /* int64 res_type */ 6:
                    message.resType = reader.int64().toBigInt();
                    break;
                case /* string reason */ 7:
                    message.reason = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string toast = 3; */
        if (message.toast !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.toast);
        /* int64 topic_id = 4; */
        if (message.topicId !== 0n)
            writer.tag(4, WireType.Varint).int64(message.topicId);
        /* int64 res_id = 5; */
        if (message.resId !== 0n)
            writer.tag(5, WireType.Varint).int64(message.resId);
        /* int64 res_type = 6; */
        if (message.resType !== 0n)
            writer.tag(6, WireType.Varint).int64(message.resType);
        /* string reason = 7; */
        if (message.reason !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.reason);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointTopicIrrelevant
 */
export const ThreePointTopicIrrelevant = new ThreePointTopicIrrelevant$Type();
// @generated message type with reflection information, may provide speed optimized methods
class ThreePointWait$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.ThreePointWait", [
            { no: 1, name: "addition_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "addition_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "no_addition_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "no_addition_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { additionIcon: "", additionText: "", noAdditionIcon: "", noAdditionText: "", id: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string addition_icon */ 1:
                    message.additionIcon = reader.string();
                    break;
                case /* string addition_text */ 2:
                    message.additionText = reader.string();
                    break;
                case /* string no_addition_icon */ 3:
                    message.noAdditionIcon = reader.string();
                    break;
                case /* string no_addition_text */ 4:
                    message.noAdditionText = reader.string();
                    break;
                case /* int64 id */ 5:
                    message.id = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string addition_icon = 1; */
        if (message.additionIcon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.additionIcon);
        /* string addition_text = 2; */
        if (message.additionText !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.additionText);
        /* string no_addition_icon = 3; */
        if (message.noAdditionIcon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.noAdditionIcon);
        /* string no_addition_text = 4; */
        if (message.noAdditionText !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.noAdditionText);
        /* int64 id = 5; */
        if (message.id !== 0n)
            writer.tag(5, WireType.Varint).int64(message.id);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.ThreePointWait
 */
export const ThreePointWait = new ThreePointWait$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopAdditionUP$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopAdditionUP", [
            { no: 1, name: "up", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => AdditionUP },
            { no: 2, name: "has_fold", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { up: [], hasFold: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.AdditionUP up */ 1:
                    message.up.push(AdditionUP.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int32 has_fold */ 2:
                    message.hasFold = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.AdditionUP up = 1; */
        for (let i = 0; i < message.up.length; i++)
            AdditionUP.internalBinaryWrite(message.up[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* int32 has_fold = 2; */
        if (message.hasFold !== 0)
            writer.tag(2, WireType.Varint).int32(message.hasFold);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopAdditionUP
 */
export const TopAdditionUP = new TopAdditionUP$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicButton", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "jump_uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "red_dot", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", title: "", jumpUri: "", redDot: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* string jump_uri */ 3:
                    message.jumpUri = reader.string();
                    break;
                case /* bool red_dot */ 4:
                    message.redDot = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* string jump_uri = 3; */
        if (message.jumpUri !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.jumpUri);
        /* bool red_dot = 4; */
        if (message.redDot !== false)
            writer.tag(4, WireType.Varint).bool(message.redDot);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicButton
 */
export const TopicButton = new TopicButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicItem", [
            { no: 1, name: "topic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "topic_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "rcmd_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { topicId: 0n, topicName: "", url: "", desc: "", desc2: "", rcmdDesc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 topic_id */ 1:
                    message.topicId = reader.int64().toBigInt();
                    break;
                case /* string topic_name */ 2:
                    message.topicName = reader.string();
                    break;
                case /* string url */ 3:
                    message.url = reader.string();
                    break;
                case /* string desc */ 4:
                    message.desc = reader.string();
                    break;
                case /* string desc2 */ 5:
                    message.desc2 = reader.string();
                    break;
                case /* string rcmd_desc */ 6:
                    message.rcmdDesc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 topic_id = 1; */
        if (message.topicId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.topicId);
        /* string topic_name = 2; */
        if (message.topicName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.topicName);
        /* string url = 3; */
        if (message.url !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.url);
        /* string desc = 4; */
        if (message.desc !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.desc);
        /* string desc2 = 5; */
        if (message.desc2 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.desc2);
        /* string rcmd_desc = 6; */
        if (message.rcmdDesc !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.rcmdDesc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicItem
 */
export const TopicItem = new TopicItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicList$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicList", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "topic_list_item", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TopicListItem },
            { no: 3, name: "act_button", kind: "message", T: () => TopicButton },
            { no: 4, name: "more_button", kind: "message", T: () => TopicButton },
            { no: 5, name: "server_info", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", topicListItem: [], serverInfo: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.TopicListItem topic_list_item */ 2:
                    message.topicListItem.push(TopicListItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bilibili.app.dynamic.v2.TopicButton act_button */ 3:
                    message.actButton = TopicButton.internalBinaryRead(reader, reader.uint32(), options, message.actButton);
                    break;
                case /* bilibili.app.dynamic.v2.TopicButton more_button */ 4:
                    message.moreButton = TopicButton.internalBinaryRead(reader, reader.uint32(), options, message.moreButton);
                    break;
                case /* string server_info */ 5:
                    message.serverInfo = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.TopicListItem topic_list_item = 2; */
        for (let i = 0; i < message.topicListItem.length; i++)
            TopicListItem.internalBinaryWrite(message.topicListItem[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopicButton act_button = 3; */
        if (message.actButton)
            TopicButton.internalBinaryWrite(message.actButton, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopicButton more_button = 4; */
        if (message.moreButton)
            TopicButton.internalBinaryWrite(message.moreButton, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string server_info = 5; */
        if (message.serverInfo !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.serverInfo);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicList
 */
export const TopicList = new TopicList$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicListItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicListItem", [
            { no: 1, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "icon_title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "topic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "topic_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "pos", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 7, name: "server_info", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "head_icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "up_mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "tail_icon_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "extension", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { icon: "", iconTitle: "", topicId: 0n, topicName: "", url: "", pos: 0n, serverInfo: "", headIconUrl: "", upMid: 0n, tailIconUrl: "", extension: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string icon */ 1:
                    message.icon = reader.string();
                    break;
                case /* string icon_title */ 2:
                    message.iconTitle = reader.string();
                    break;
                case /* int64 topic_id */ 3:
                    message.topicId = reader.int64().toBigInt();
                    break;
                case /* string topic_name */ 4:
                    message.topicName = reader.string();
                    break;
                case /* string url */ 5:
                    message.url = reader.string();
                    break;
                case /* int64 pos */ 6:
                    message.pos = reader.int64().toBigInt();
                    break;
                case /* string server_info */ 7:
                    message.serverInfo = reader.string();
                    break;
                case /* string head_icon_url */ 8:
                    message.headIconUrl = reader.string();
                    break;
                case /* int64 up_mid */ 9:
                    message.upMid = reader.int64().toBigInt();
                    break;
                case /* string tail_icon_url */ 10:
                    message.tailIconUrl = reader.string();
                    break;
                case /* string extension */ 11:
                    message.extension = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string icon = 1; */
        if (message.icon !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.icon);
        /* string icon_title = 2; */
        if (message.iconTitle !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.iconTitle);
        /* int64 topic_id = 3; */
        if (message.topicId !== 0n)
            writer.tag(3, WireType.Varint).int64(message.topicId);
        /* string topic_name = 4; */
        if (message.topicName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.topicName);
        /* string url = 5; */
        if (message.url !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.url);
        /* int64 pos = 6; */
        if (message.pos !== 0n)
            writer.tag(6, WireType.Varint).int64(message.pos);
        /* string server_info = 7; */
        if (message.serverInfo !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.serverInfo);
        /* string head_icon_url = 8; */
        if (message.headIconUrl !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.headIconUrl);
        /* int64 up_mid = 9; */
        if (message.upMid !== 0n)
            writer.tag(9, WireType.Varint).int64(message.upMid);
        /* string tail_icon_url = 10; */
        if (message.tailIconUrl !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.tailIconUrl);
        /* string extension = 11; */
        if (message.extension !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.extension);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicListItem
 */
export const TopicListItem = new TopicListItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicListReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicListReply", [
            { no: 1, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => TopicItem },
            { no: 2, name: "has_more", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 3, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { items: [], hasMore: false, offset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* repeated bilibili.app.dynamic.v2.TopicItem items */ 1:
                    message.items.push(TopicItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* bool has_more */ 2:
                    message.hasMore = reader.bool();
                    break;
                case /* string offset */ 3:
                    message.offset = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* repeated bilibili.app.dynamic.v2.TopicItem items = 1; */
        for (let i = 0; i < message.items.length; i++)
            TopicItem.internalBinaryWrite(message.items[i], writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        /* bool has_more = 2; */
        if (message.hasMore !== false)
            writer.tag(2, WireType.Varint).bool(message.hasMore);
        /* string offset = 3; */
        if (message.offset !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicListReply
 */
export const TopicListReply = new TopicListReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicListReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicListReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "offset", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n, offset: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                case /* string offset */ 2:
                    message.offset = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        /* string offset = 2; */
        if (message.offset !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.offset);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicListReq
 */
export const TopicListReq = new TopicListReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicRcmdCard$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicRcmdCard", [
            { no: 1, name: "topic_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "topic_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "button", kind: "message", T: () => CampusLabel },
            { no: 5, name: "desc1", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "desc2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "update_desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { topicId: 0n, topicName: "", url: "", desc1: "", desc2: "", updateDesc: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 topic_id */ 1:
                    message.topicId = reader.int64().toBigInt();
                    break;
                case /* string topic_name */ 2:
                    message.topicName = reader.string();
                    break;
                case /* string url */ 3:
                    message.url = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel button */ 4:
                    message.button = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string desc1 */ 5:
                    message.desc1 = reader.string();
                    break;
                case /* string desc2 */ 6:
                    message.desc2 = reader.string();
                    break;
                case /* string update_desc */ 7:
                    message.updateDesc = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 topic_id = 1; */
        if (message.topicId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.topicId);
        /* string topic_name = 2; */
        if (message.topicName !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.topicName);
        /* string url = 3; */
        if (message.url !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.url);
        /* bilibili.app.dynamic.v2.CampusLabel button = 4; */
        if (message.button)
            CampusLabel.internalBinaryWrite(message.button, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* string desc1 = 5; */
        if (message.desc1 !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.desc1);
        /* string desc2 = 6; */
        if (message.desc2 !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.desc2);
        /* string update_desc = 7; */
        if (message.updateDesc !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.updateDesc);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicRcmdCard
 */
export const TopicRcmdCard = new TopicRcmdCard$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicSquareInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicSquareInfo", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "button", kind: "message", T: () => CampusLabel },
            { no: 3, name: "rcmd", kind: "message", T: () => TopicRcmdCard }
        ]);
    }
    create(value) {
        const message = { title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.CampusLabel button */ 2:
                    message.button = CampusLabel.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* bilibili.app.dynamic.v2.TopicRcmdCard rcmd */ 3:
                    message.rcmd = TopicRcmdCard.internalBinaryRead(reader, reader.uint32(), options, message.rcmd);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* bilibili.app.dynamic.v2.CampusLabel button = 2; */
        if (message.button)
            CampusLabel.internalBinaryWrite(message.button, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.TopicRcmdCard rcmd = 3; */
        if (message.rcmd)
            TopicRcmdCard.internalBinaryWrite(message.rcmd, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicSquareInfo
 */
export const TopicSquareInfo = new TopicSquareInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicSquareReply$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicSquareReply", [
            { no: 1, name: "info", kind: "message", T: () => TopicSquareInfo }
        ]);
    }
    create(value) {
        const message = {};
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.TopicSquareInfo info */ 1:
                    message.info = TopicSquareInfo.internalBinaryRead(reader, reader.uint32(), options, message.info);
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.TopicSquareInfo info = 1; */
        if (message.info)
            TopicSquareInfo.internalBinaryWrite(message.info, writer.tag(1, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicSquareReply
 */
export const TopicSquareReply = new TopicSquareReply$Type();
// @generated message type with reflection information, may provide speed optimized methods
class TopicSquareReq$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.TopicSquareReq", [
            { no: 1, name: "campus_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { campusId: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 campus_id */ 1:
                    message.campusId = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 campus_id = 1; */
        if (message.campusId !== 0n)
            writer.tag(1, WireType.Varint).int64(message.campusId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.TopicSquareReq
 */
export const TopicSquareReq = new TopicSquareReq$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Unfollow$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Unfollow", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "list", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => UnfollowUserItem },
            { no: 3, name: "TrackId", kind: "scalar", jsonName: "TrackId", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", list: [], trackId: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.UnfollowUserItem list */ 2:
                    message.list.push(UnfollowUserItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string TrackId = 3 [json_name = "TrackId"];*/ 3:
                    message.trackId = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.UnfollowUserItem list = 2; */
        for (let i = 0; i < message.list.length; i++)
            UnfollowUserItem.internalBinaryWrite(message.list[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string TrackId = 3 [json_name = "TrackId"]; */
        if (message.trackId !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.trackId);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Unfollow
 */
export const Unfollow = new Unfollow$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UnfollowUserItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UnfollowUserItem", [
            { no: 1, name: "has_update", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "pos", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "live_state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LiveState", LiveState] },
            { no: 7, name: "official", kind: "message", T: () => OfficialVerify },
            { no: 8, name: "vip", kind: "message", T: () => VipInfo },
            { no: 9, name: "sign", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 10, name: "label", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "button", kind: "message", T: () => AdditionalButton },
            { no: 12, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { hasUpdate: false, face: "", name: "", uid: 0n, pos: 0, liveState: 0, sign: "", label: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool has_update */ 1:
                    message.hasUpdate = reader.bool();
                    break;
                case /* string face */ 2:
                    message.face = reader.string();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* int64 uid */ 4:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* int32 pos */ 5:
                    message.pos = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.LiveState live_state */ 6:
                    message.liveState = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.OfficialVerify official */ 7:
                    message.official = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.official);
                    break;
                case /* bilibili.app.dynamic.v2.VipInfo vip */ 8:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* string sign */ 9:
                    message.sign = reader.string();
                    break;
                case /* string label */ 10:
                    message.label = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.AdditionalButton button */ 11:
                    message.button = AdditionalButton.internalBinaryRead(reader, reader.uint32(), options, message.button);
                    break;
                case /* string uri */ 12:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool has_update = 1; */
        if (message.hasUpdate !== false)
            writer.tag(1, WireType.Varint).bool(message.hasUpdate);
        /* string face = 2; */
        if (message.face !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.face);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* int64 uid = 4; */
        if (message.uid !== 0n)
            writer.tag(4, WireType.Varint).int64(message.uid);
        /* int32 pos = 5; */
        if (message.pos !== 0)
            writer.tag(5, WireType.Varint).int32(message.pos);
        /* bilibili.app.dynamic.v2.LiveState live_state = 6; */
        if (message.liveState !== 0)
            writer.tag(6, WireType.Varint).int32(message.liveState);
        /* bilibili.app.dynamic.v2.OfficialVerify official = 7; */
        if (message.official)
            OfficialVerify.internalBinaryWrite(message.official, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.VipInfo vip = 8; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* string sign = 9; */
        if (message.sign !== "")
            writer.tag(9, WireType.LengthDelimited).string(message.sign);
        /* string label = 10; */
        if (message.label !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.label);
        /* bilibili.app.dynamic.v2.AdditionalButton button = 11; */
        if (message.button)
            AdditionalButton.internalBinaryWrite(message.button, writer.tag(11, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 12; */
        if (message.uri !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UnfollowUserItem
 */
export const UnfollowUserItem = new UnfollowUserItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpListItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UpListItem", [
            { no: 1, name: "has_update", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 2, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "uid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 5, name: "pos", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "user_item_type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.UserItemType", UserItemType] },
            { no: 7, name: "display_style_day", kind: "message", T: () => UserItemStyle },
            { no: 8, name: "display_style_night", kind: "message", T: () => UserItemStyle },
            { no: 9, name: "style_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "live_state", kind: "enum", T: () => ["bilibili.app.dynamic.v2.LiveState", LiveState] },
            { no: 11, name: "separator", kind: "scalar", T: 8 /*ScalarType.BOOL*/ },
            { no: 12, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 13, name: "is_recall", kind: "scalar", T: 8 /*ScalarType.BOOL*/ }
        ]);
    }
    create(value) {
        const message = { hasUpdate: false, face: "", name: "", uid: 0n, pos: 0n, userItemType: 0, styleId: 0n, liveState: 0, separator: false, uri: "", isRecall: false };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bool has_update */ 1:
                    message.hasUpdate = reader.bool();
                    break;
                case /* string face */ 2:
                    message.face = reader.string();
                    break;
                case /* string name */ 3:
                    message.name = reader.string();
                    break;
                case /* int64 uid */ 4:
                    message.uid = reader.int64().toBigInt();
                    break;
                case /* int64 pos */ 5:
                    message.pos = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.UserItemType user_item_type */ 6:
                    message.userItemType = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.UserItemStyle display_style_day */ 7:
                    message.displayStyleDay = UserItemStyle.internalBinaryRead(reader, reader.uint32(), options, message.displayStyleDay);
                    break;
                case /* bilibili.app.dynamic.v2.UserItemStyle display_style_night */ 8:
                    message.displayStyleNight = UserItemStyle.internalBinaryRead(reader, reader.uint32(), options, message.displayStyleNight);
                    break;
                case /* int64 style_id */ 9:
                    message.styleId = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.LiveState live_state */ 10:
                    message.liveState = reader.int32();
                    break;
                case /* bool separator */ 11:
                    message.separator = reader.bool();
                    break;
                case /* string uri */ 12:
                    message.uri = reader.string();
                    break;
                case /* bool is_recall */ 13:
                    message.isRecall = reader.bool();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bool has_update = 1; */
        if (message.hasUpdate !== false)
            writer.tag(1, WireType.Varint).bool(message.hasUpdate);
        /* string face = 2; */
        if (message.face !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.face);
        /* string name = 3; */
        if (message.name !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.name);
        /* int64 uid = 4; */
        if (message.uid !== 0n)
            writer.tag(4, WireType.Varint).int64(message.uid);
        /* int64 pos = 5; */
        if (message.pos !== 0n)
            writer.tag(5, WireType.Varint).int64(message.pos);
        /* bilibili.app.dynamic.v2.UserItemType user_item_type = 6; */
        if (message.userItemType !== 0)
            writer.tag(6, WireType.Varint).int32(message.userItemType);
        /* bilibili.app.dynamic.v2.UserItemStyle display_style_day = 7; */
        if (message.displayStyleDay)
            UserItemStyle.internalBinaryWrite(message.displayStyleDay, writer.tag(7, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.UserItemStyle display_style_night = 8; */
        if (message.displayStyleNight)
            UserItemStyle.internalBinaryWrite(message.displayStyleNight, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* int64 style_id = 9; */
        if (message.styleId !== 0n)
            writer.tag(9, WireType.Varint).int64(message.styleId);
        /* bilibili.app.dynamic.v2.LiveState live_state = 10; */
        if (message.liveState !== 0)
            writer.tag(10, WireType.Varint).int32(message.liveState);
        /* bool separator = 11; */
        if (message.separator !== false)
            writer.tag(11, WireType.Varint).bool(message.separator);
        /* string uri = 12; */
        if (message.uri !== "")
            writer.tag(12, WireType.LengthDelimited).string(message.uri);
        /* bool is_recall = 13; */
        if (message.isRecall !== false)
            writer.tag(13, WireType.Varint).bool(message.isRecall);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UpListItem
 */
export const UpListItem = new UpListItem$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UpListMoreLabel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UpListMoreLabel", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", uri: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* string uri */ 2:
                    message.uri = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* string uri = 2; */
        if (message.uri !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.uri);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UpListMoreLabel
 */
export const UpListMoreLabel = new UpListMoreLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UserInfo", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "official", kind: "message", T: () => OfficialVerify },
            { no: 5, name: "vip", kind: "message", T: () => VipInfo },
            { no: 6, name: "live", kind: "message", T: () => LiveInfo },
            { no: 7, name: "uri", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "pendant", kind: "message", T: () => UserPendant },
            { no: 9, name: "nameplate", kind: "message", T: () => Nameplate },
            { no: 10, name: "level", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "sign", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 12, name: "face_nft", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "face_nft_new", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, name: "", face: "", uri: "", level: 0, sign: "", faceNft: 0, faceNftNew: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string face */ 3:
                    message.face = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.OfficialVerify official */ 4:
                    message.official = OfficialVerify.internalBinaryRead(reader, reader.uint32(), options, message.official);
                    break;
                case /* bilibili.app.dynamic.v2.VipInfo vip */ 5:
                    message.vip = VipInfo.internalBinaryRead(reader, reader.uint32(), options, message.vip);
                    break;
                case /* bilibili.app.dynamic.v2.LiveInfo live */ 6:
                    message.live = LiveInfo.internalBinaryRead(reader, reader.uint32(), options, message.live);
                    break;
                case /* string uri */ 7:
                    message.uri = reader.string();
                    break;
                case /* bilibili.app.dynamic.v2.UserPendant pendant */ 8:
                    message.pendant = UserPendant.internalBinaryRead(reader, reader.uint32(), options, message.pendant);
                    break;
                case /* bilibili.app.dynamic.v2.Nameplate nameplate */ 9:
                    message.nameplate = Nameplate.internalBinaryRead(reader, reader.uint32(), options, message.nameplate);
                    break;
                case /* int32 level */ 10:
                    message.level = reader.int32();
                    break;
                case /* string sign */ 11:
                    message.sign = reader.string();
                    break;
                case /* int32 face_nft */ 12:
                    message.faceNft = reader.int32();
                    break;
                case /* int32 face_nft_new */ 13:
                    message.faceNftNew = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string face = 3; */
        if (message.face !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.face);
        /* bilibili.app.dynamic.v2.OfficialVerify official = 4; */
        if (message.official)
            OfficialVerify.internalBinaryWrite(message.official, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.VipInfo vip = 5; */
        if (message.vip)
            VipInfo.internalBinaryWrite(message.vip, writer.tag(5, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.LiveInfo live = 6; */
        if (message.live)
            LiveInfo.internalBinaryWrite(message.live, writer.tag(6, WireType.LengthDelimited).fork(), options).join();
        /* string uri = 7; */
        if (message.uri !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.uri);
        /* bilibili.app.dynamic.v2.UserPendant pendant = 8; */
        if (message.pendant)
            UserPendant.internalBinaryWrite(message.pendant, writer.tag(8, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.Nameplate nameplate = 9; */
        if (message.nameplate)
            Nameplate.internalBinaryWrite(message.nameplate, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* int32 level = 10; */
        if (message.level !== 0)
            writer.tag(10, WireType.Varint).int32(message.level);
        /* string sign = 11; */
        if (message.sign !== "")
            writer.tag(11, WireType.LengthDelimited).string(message.sign);
        /* int32 face_nft = 12; */
        if (message.faceNft !== 0)
            writer.tag(12, WireType.Varint).int32(message.faceNft);
        /* int32 face_nft_new = 13; */
        if (message.faceNftNew !== 0)
            writer.tag(13, WireType.Varint).int32(message.faceNftNew);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UserInfo
 */
export const UserInfo = new UserInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserItemStyle$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UserItemStyle", [
            { no: 1, name: "rect_text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "rect_text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "rect_icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "rect_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "outer_animation", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { rectText: "", rectTextColor: "", rectIcon: "", rectBgColor: "", outerAnimation: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string rect_text */ 1:
                    message.rectText = reader.string();
                    break;
                case /* string rect_text_color */ 2:
                    message.rectTextColor = reader.string();
                    break;
                case /* string rect_icon */ 3:
                    message.rectIcon = reader.string();
                    break;
                case /* string rect_bg_color */ 4:
                    message.rectBgColor = reader.string();
                    break;
                case /* string outer_animation */ 5:
                    message.outerAnimation = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string rect_text = 1; */
        if (message.rectText !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.rectText);
        /* string rect_text_color = 2; */
        if (message.rectTextColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.rectTextColor);
        /* string rect_icon = 3; */
        if (message.rectIcon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.rectIcon);
        /* string rect_bg_color = 4; */
        if (message.rectBgColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.rectBgColor);
        /* string outer_animation = 5; */
        if (message.outerAnimation !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.outerAnimation);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UserItemStyle
 */
export const UserItemStyle = new UserItemStyle$Type();
// @generated message type with reflection information, may provide speed optimized methods
class UserPendant$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.UserPendant", [
            { no: 1, name: "pid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "image", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "expire", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { pid: 0n, name: "", image: "", expire: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 pid */ 1:
                    message.pid = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string image */ 3:
                    message.image = reader.string();
                    break;
                case /* int64 expire */ 4:
                    message.expire = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 pid = 1; */
        if (message.pid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.pid);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string image = 3; */
        if (message.image !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.image);
        /* int64 expire = 4; */
        if (message.expire !== 0n)
            writer.tag(4, WireType.Varint).int64(message.expire);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.UserPendant
 */
export const UserPendant = new UserPendant$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VideoBadge$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.VideoBadge", [
            { no: 1, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "bg_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 6, name: "border_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "border_color_night", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "bg_style", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "bg_alpha", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "bg_alpha_night", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { text: "", textColor: "", textColorNight: "", bgColor: "", bgColorNight: "", borderColor: "", borderColorNight: "", bgStyle: 0, bgAlpha: 0, bgAlphaNight: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string text */ 1:
                    message.text = reader.string();
                    break;
                case /* string text_color */ 2:
                    message.textColor = reader.string();
                    break;
                case /* string text_color_night */ 3:
                    message.textColorNight = reader.string();
                    break;
                case /* string bg_color */ 4:
                    message.bgColor = reader.string();
                    break;
                case /* string bg_color_night */ 5:
                    message.bgColorNight = reader.string();
                    break;
                case /* string border_color */ 6:
                    message.borderColor = reader.string();
                    break;
                case /* string border_color_night */ 7:
                    message.borderColorNight = reader.string();
                    break;
                case /* int32 bg_style */ 8:
                    message.bgStyle = reader.int32();
                    break;
                case /* int32 bg_alpha */ 9:
                    message.bgAlpha = reader.int32();
                    break;
                case /* int32 bg_alpha_night */ 10:
                    message.bgAlphaNight = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string text = 1; */
        if (message.text !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.text);
        /* string text_color = 2; */
        if (message.textColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.textColor);
        /* string text_color_night = 3; */
        if (message.textColorNight !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColorNight);
        /* string bg_color = 4; */
        if (message.bgColor !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.bgColor);
        /* string bg_color_night = 5; */
        if (message.bgColorNight !== "")
            writer.tag(5, WireType.LengthDelimited).string(message.bgColorNight);
        /* string border_color = 6; */
        if (message.borderColor !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.borderColor);
        /* string border_color_night = 7; */
        if (message.borderColorNight !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.borderColorNight);
        /* int32 bg_style = 8; */
        if (message.bgStyle !== 0)
            writer.tag(8, WireType.Varint).int32(message.bgStyle);
        /* int32 bg_alpha = 9; */
        if (message.bgAlpha !== 0)
            writer.tag(9, WireType.Varint).int32(message.bgAlpha);
        /* int32 bg_alpha_night = 10; */
        if (message.bgAlphaNight !== 0)
            writer.tag(10, WireType.Varint).int32(message.bgAlphaNight);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.VideoBadge
 */
export const VideoBadge = new VideoBadge$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VipInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.VipInfo", [
            { no: 1, name: "Type", kind: "scalar", jsonName: "Type", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "status", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "due_date", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 4, name: "label", kind: "message", T: () => VipLabel },
            { no: 5, name: "theme_type", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "avatar_subscript", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "nickname_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { type: 0, status: 0, dueDate: 0n, themeType: 0, avatarSubscript: 0, nicknameColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 Type = 1 [json_name = "Type"];*/ 1:
                    message.type = reader.int32();
                    break;
                case /* int32 status */ 2:
                    message.status = reader.int32();
                    break;
                case /* int64 due_date */ 3:
                    message.dueDate = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.dynamic.v2.VipLabel label */ 4:
                    message.label = VipLabel.internalBinaryRead(reader, reader.uint32(), options, message.label);
                    break;
                case /* int32 theme_type */ 5:
                    message.themeType = reader.int32();
                    break;
                case /* int32 avatar_subscript */ 6:
                    message.avatarSubscript = reader.int32();
                    break;
                case /* string nickname_color */ 7:
                    message.nicknameColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 Type = 1 [json_name = "Type"]; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* int32 status = 2; */
        if (message.status !== 0)
            writer.tag(2, WireType.Varint).int32(message.status);
        /* int64 due_date = 3; */
        if (message.dueDate !== 0n)
            writer.tag(3, WireType.Varint).int64(message.dueDate);
        /* bilibili.app.dynamic.v2.VipLabel label = 4; */
        if (message.label)
            VipLabel.internalBinaryWrite(message.label, writer.tag(4, WireType.LengthDelimited).fork(), options).join();
        /* int32 theme_type = 5; */
        if (message.themeType !== 0)
            writer.tag(5, WireType.Varint).int32(message.themeType);
        /* int32 avatar_subscript = 6; */
        if (message.avatarSubscript !== 0)
            writer.tag(6, WireType.Varint).int32(message.avatarSubscript);
        /* string nickname_color = 7; */
        if (message.nicknameColor !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.nicknameColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.VipInfo
 */
export const VipInfo = new VipInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class VipLabel$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.VipLabel", [
            { no: 1, name: "path", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "text", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "label_theme", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { path: "", text: "", labelTheme: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string path */ 1:
                    message.path = reader.string();
                    break;
                case /* string text */ 2:
                    message.text = reader.string();
                    break;
                case /* string label_theme */ 3:
                    message.labelTheme = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string path = 1; */
        if (message.path !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.path);
        /* string text = 2; */
        if (message.text !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.text);
        /* string label_theme = 3; */
        if (message.labelTheme !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.labelTheme);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.VipLabel
 */
export const VipLabel = new VipLabel$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Weight$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.Weight", [
            { no: 1, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "items", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => WeightItem },
            { no: 3, name: "icon", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { title: "", items: [], icon: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string title */ 1:
                    message.title = reader.string();
                    break;
                case /* repeated bilibili.app.dynamic.v2.WeightItem items */ 2:
                    message.items.push(WeightItem.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* string icon */ 3:
                    message.icon = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string title = 1; */
        if (message.title !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.title);
        /* repeated bilibili.app.dynamic.v2.WeightItem items = 2; */
        for (let i = 0; i < message.items.length; i++)
            WeightItem.internalBinaryWrite(message.items[i], writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* string icon = 3; */
        if (message.icon !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.icon);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.Weight
 */
export const Weight = new Weight$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WeightButton$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.WeightButton", [
            { no: 1, name: "jump_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { jumpUrl: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string jump_url */ 1:
                    message.jumpUrl = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string jump_url = 1; */
        if (message.jumpUrl !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.jumpUrl);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.WeightButton
 */
export const WeightButton = new WeightButton$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WeightDislike$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.WeightDislike", [
            { no: 1, name: "feed_back_type", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { feedBackType: "", title: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string feed_back_type */ 1:
                    message.feedBackType = reader.string();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string feed_back_type = 1; */
        if (message.feedBackType !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.feedBackType);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.WeightDislike
 */
export const WeightDislike = new WeightDislike$Type();
// @generated message type with reflection information, may provide speed optimized methods
class WeightItem$Type extends MessageType {
    constructor() {
        super("bilibili.app.dynamic.v2.WeightItem", [
            { no: 1, name: "type", kind: "enum", T: () => ["bilibili.app.dynamic.v2.WeightType", WeightType] },
            { no: 2, name: "button", kind: "message", oneof: "item", T: () => WeightButton },
            { no: 3, name: "dislike", kind: "message", oneof: "item", T: () => WeightDislike }
        ]);
    }
    create(value) {
        const message = { type: 0, item: { oneofKind: undefined } };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* bilibili.app.dynamic.v2.WeightType type */ 1:
                    message.type = reader.int32();
                    break;
                case /* bilibili.app.dynamic.v2.WeightButton button */ 2:
                    message.item = {
                        oneofKind: "button",
                        button: WeightButton.internalBinaryRead(reader, reader.uint32(), options, message.item.button)
                    };
                    break;
                case /* bilibili.app.dynamic.v2.WeightDislike dislike */ 3:
                    message.item = {
                        oneofKind: "dislike",
                        dislike: WeightDislike.internalBinaryRead(reader, reader.uint32(), options, message.item.dislike)
                    };
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* bilibili.app.dynamic.v2.WeightType type = 1; */
        if (message.type !== 0)
            writer.tag(1, WireType.Varint).int32(message.type);
        /* bilibili.app.dynamic.v2.WeightButton button = 2; */
        if (message.item.oneofKind === "button")
            WeightButton.internalBinaryWrite(message.item.button, writer.tag(2, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.dynamic.v2.WeightDislike dislike = 3; */
        if (message.item.oneofKind === "dislike")
            WeightDislike.internalBinaryWrite(message.item.dislike, writer.tag(3, WireType.LengthDelimited).fork(), options).join();
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.dynamic.v2.WeightItem
 */
export const WeightItem = new WeightItem$Type();
/**
 * @generated ServiceType for protobuf service bilibili.app.dynamic.v2.Dynamic
 */
export const Dynamic = new ServiceType("bilibili.app.dynamic.v2.Dynamic", [
    { name: "DynVideo", options: {}, I: DynVideoReq, O: DynVideoReply },
    { name: "DynAll", options: {}, I: DynAllReq, O: DynAllReply },
    { name: "DynDetails", options: {}, I: DynDetailsReq, O: DynDetailsReply },
    { name: "DynVideoPersonal", options: {}, I: DynVideoPersonalReq, O: DynVideoPersonalReply },
    { name: "DynVideoUpdOffset", options: {}, I: DynVideoUpdOffsetReq, O: NoReply },
    { name: "DynAdditionCommonFollow", options: {}, I: DynAdditionCommonFollowReq, O: DynAdditionCommonFollowReply },
    { name: "DynThumb", options: {}, I: DynThumbReq, O: NoReply },
    { name: "DynFakeCard", options: {}, I: DynFakeCardReq, O: DynFakeCardReply },
    { name: "DynRcmdUpExchange", options: {}, I: DynRcmdUpExchangeReq, O: DynRcmdUpExchangeReply },
    { name: "DynAllPersonal", options: {}, I: DynAllPersonalReq, O: DynAllPersonalReply },
    { name: "DynAllUpdOffset", options: {}, I: DynAllUpdOffsetReq, O: NoReply },
    { name: "DynVote", options: {}, I: DynVoteReq, O: DynVoteReply },
    { name: "DynMixUpListViewMore", options: {}, I: DynMixUpListViewMoreReq, O: DynMixUpListViewMoreReply },
    { name: "DynLight", options: {}, I: DynLightReq, O: DynLightReply },
    { name: "DynDetail", options: {}, I: DynDetailReq, O: DynDetailReply },
    { name: "LikeList", options: {}, I: LikeListReq, O: LikeListReply },
    { name: "RepostList", options: {}, I: RepostListReq, O: RepostListRsp },
    { name: "ReactionList", options: {}, I: ReactionListReq, O: ReactionListReply },
    { name: "DynSpace", options: {}, I: DynSpaceReq, O: DynSpaceRsp },
    { name: "DynUnLoginRcmd", options: {}, I: DynRcmdReq, O: DynRcmdReply },
    { name: "DynServerDetails", options: {}, I: DynServerDetailsReq, O: DynServerDetailsReply },
    { name: "DynSearch", options: {}, I: DynSearchReq, O: DynSearchReply },
    { name: "SetDecision", options: {}, I: SetDecisionReq, O: NoReply },
    { name: "AlumniDynamics", options: {}, I: AlumniDynamicsReq, O: AlumniDynamicsReply },
    { name: "CampusRcmd", options: {}, I: CampusRcmdReq, O: CampusRcmdReply },
    { name: "SubscribeCampus", options: {}, I: SubscribeCampusReq, O: NoReply },
    { name: "SetRecentCampus", options: {}, I: SetRecentCampusReq, O: NoReply },
    { name: "DynTab", options: {}, I: DynTabReq, O: DynTabReply },
    { name: "SchoolSearch", options: {}, I: SchoolSearchReq, O: SchoolSearchReply },
    { name: "SchoolRecommend", options: {}, I: SchoolRecommendReq, O: SchoolRecommendReply },
    { name: "DynSpaceSearchDetails", options: {}, I: DynSpaceSearchDetailsReq, O: DynSpaceSearchDetailsReply },
    { name: "OfficialAccounts", options: {}, I: OfficialAccountsReq, O: OfficialAccountsReply },
    { name: "OfficialDynamics", options: {}, I: OfficialDynamicsReq, O: OfficialDynamicsReply },
    { name: "CampusRedDot", options: {}, I: CampusRedDotReq, O: CampusRedDotReply },
    { name: "CampusRcmdFeed", options: {}, I: CampusRcmdFeedReq, O: CampusRcmdFeedReply },
    { name: "TopicSquare", options: {}, I: TopicSquareReq, O: TopicSquareReply },
    { name: "TopicList", options: {}, I: TopicListReq, O: TopicListReply },
    { name: "CampusMateLikeList", options: {}, I: CampusMateLikeListReq, O: CampusMateLikeListReply },
    { name: "CampusFeedback", options: {}, I: CampusFeedbackReq, O: CampusFeedbackReply },
    { name: "CampusBillboard", options: {}, I: CampusBillBoardReq, O: CampusBillBoardReply },
    { name: "CampusBillboardInternal", options: {}, I: CampusBillboardInternalReq, O: CampusBillBoardReply },
    { name: "CampusTopicRcmdFeed", options: {}, I: CampusTopicRcmdFeedReq, O: CampusTopicRcmdFeedReply }
]);
