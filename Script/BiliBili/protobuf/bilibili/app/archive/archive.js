// @generated by protobuf-ts 2.9.0 with parameter output_javascript
// @generated from protobuf file "bilibili/app/archive/v1/archive.proto" (package "bilibili.app.archive.v1", syntax proto3)
// tslint:disable
import { WireType } from "@protobuf-ts/runtime";
import { UnknownFieldHandler } from "@protobuf-ts/runtime";
import { reflectionMergePartial } from "@protobuf-ts/runtime";
import { MESSAGE_TYPE } from "@protobuf-ts/runtime";
import { MessageType } from "@protobuf-ts/runtime";
// @generated message type with reflection information, may provide speed optimized methods
class Arc$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Arc", [
            { no: 1, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "videos", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "type_id", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "type_name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "copyright", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "pic", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "pubdate", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 9, name: "ctime", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 10, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 11, name: "state", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "access", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "attribute", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "tag", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 15, name: "tags", kind: "scalar", repeat: 2 /*RepeatType.UNPACKED*/, T: 9 /*ScalarType.STRING*/ },
            { no: 16, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 17, name: "mission_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 18, name: "order_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 19, name: "redirect_url", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 20, name: "forward", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 21, name: "rights", kind: "message", T: () => Rights },
            { no: 22, name: "author", kind: "message", T: () => Author },
            { no: 23, name: "stat", kind: "message", T: () => Stat },
            { no: 24, name: "report_result", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 25, name: "dynamic", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 26, name: "first_cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 27, name: "dimension", kind: "message", T: () => Dimension },
            { no: 28, name: "staff_info", kind: "message", repeat: 1 /*RepeatType.PACKED*/, T: () => StaffInfo },
            { no: 29, name: "season_id", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 30, name: "attribute_v2", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 31, name: "season_theme", kind: "message", T: () => SeasonTheme },
            { no: 40, name: "short_link_v2", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 41, name: "up_from_v2", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 42, name: "first_frame", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { aid: 0n, videos: 0n, typeId: 0, typeName: "", copyright: 0, pic: "", title: "", pubdate: 0n, ctime: 0n, desc: "", state: 0, access: 0, attribute: 0, tag: "", tags: [], duration: 0n, missionId: 0n, orderId: 0n, redirectUrl: "", forward: 0n, reportResult: "", dynamic: "", firstCid: 0n, staffInfo: [], seasonId: 0n, attributeV2: 0n, shortLinkV2: "", upFromV2: 0, firstFrame: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 aid */ 1:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int64 videos */ 2:
                    message.videos = reader.int64().toBigInt();
                    break;
                case /* int32 type_id */ 3:
                    message.typeId = reader.int32();
                    break;
                case /* string type_name */ 4:
                    message.typeName = reader.string();
                    break;
                case /* int32 copyright */ 5:
                    message.copyright = reader.int32();
                    break;
                case /* string pic */ 6:
                    message.pic = reader.string();
                    break;
                case /* string title */ 7:
                    message.title = reader.string();
                    break;
                case /* int64 pubdate */ 8:
                    message.pubdate = reader.int64().toBigInt();
                    break;
                case /* int64 ctime */ 9:
                    message.ctime = reader.int64().toBigInt();
                    break;
                case /* string desc */ 10:
                    message.desc = reader.string();
                    break;
                case /* int32 state */ 11:
                    message.state = reader.int32();
                    break;
                case /* int32 access */ 12:
                    message.access = reader.int32();
                    break;
                case /* int32 attribute */ 13:
                    message.attribute = reader.int32();
                    break;
                case /* string tag */ 14:
                    message.tag = reader.string();
                    break;
                case /* repeated string tags */ 15:
                    message.tags.push(reader.string());
                    break;
                case /* int64 duration */ 16:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* int64 mission_id */ 17:
                    message.missionId = reader.int64().toBigInt();
                    break;
                case /* int64 order_id */ 18:
                    message.orderId = reader.int64().toBigInt();
                    break;
                case /* string redirect_url */ 19:
                    message.redirectUrl = reader.string();
                    break;
                case /* int64 forward */ 20:
                    message.forward = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.archive.v1.Rights rights */ 21:
                    message.rights = Rights.internalBinaryRead(reader, reader.uint32(), options, message.rights);
                    break;
                case /* bilibili.app.archive.v1.Author author */ 22:
                    message.author = Author.internalBinaryRead(reader, reader.uint32(), options, message.author);
                    break;
                case /* bilibili.app.archive.v1.Stat stat */ 23:
                    message.stat = Stat.internalBinaryRead(reader, reader.uint32(), options, message.stat);
                    break;
                case /* string report_result */ 24:
                    message.reportResult = reader.string();
                    break;
                case /* string dynamic */ 25:
                    message.dynamic = reader.string();
                    break;
                case /* int64 first_cid */ 26:
                    message.firstCid = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.archive.v1.Dimension dimension */ 27:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* repeated bilibili.app.archive.v1.StaffInfo staff_info */ 28:
                    message.staffInfo.push(StaffInfo.internalBinaryRead(reader, reader.uint32(), options));
                    break;
                case /* int64 season_id */ 29:
                    message.seasonId = reader.int64().toBigInt();
                    break;
                case /* int64 attribute_v2 */ 30:
                    message.attributeV2 = reader.int64().toBigInt();
                    break;
                case /* bilibili.app.archive.v1.SeasonTheme season_theme */ 31:
                    message.seasonTheme = SeasonTheme.internalBinaryRead(reader, reader.uint32(), options, message.seasonTheme);
                    break;
                case /* string short_link_v2 */ 40:
                    message.shortLinkV2 = reader.string();
                    break;
                case /* int32 up_from_v2 */ 41:
                    message.upFromV2 = reader.int32();
                    break;
                case /* string first_frame */ 42:
                    message.firstFrame = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 aid = 1; */
        if (message.aid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.aid);
        /* int64 videos = 2; */
        if (message.videos !== 0n)
            writer.tag(2, WireType.Varint).int64(message.videos);
        /* int32 type_id = 3; */
        if (message.typeId !== 0)
            writer.tag(3, WireType.Varint).int32(message.typeId);
        /* string type_name = 4; */
        if (message.typeName !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.typeName);
        /* int32 copyright = 5; */
        if (message.copyright !== 0)
            writer.tag(5, WireType.Varint).int32(message.copyright);
        /* string pic = 6; */
        if (message.pic !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.pic);
        /* string title = 7; */
        if (message.title !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.title);
        /* int64 pubdate = 8; */
        if (message.pubdate !== 0n)
            writer.tag(8, WireType.Varint).int64(message.pubdate);
        /* int64 ctime = 9; */
        if (message.ctime !== 0n)
            writer.tag(9, WireType.Varint).int64(message.ctime);
        /* string desc = 10; */
        if (message.desc !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.desc);
        /* int32 state = 11; */
        if (message.state !== 0)
            writer.tag(11, WireType.Varint).int32(message.state);
        /* int32 access = 12; */
        if (message.access !== 0)
            writer.tag(12, WireType.Varint).int32(message.access);
        /* int32 attribute = 13; */
        if (message.attribute !== 0)
            writer.tag(13, WireType.Varint).int32(message.attribute);
        /* string tag = 14; */
        if (message.tag !== "")
            writer.tag(14, WireType.LengthDelimited).string(message.tag);
        /* repeated string tags = 15; */
        for (let i = 0; i < message.tags.length; i++)
            writer.tag(15, WireType.LengthDelimited).string(message.tags[i]);
        /* int64 duration = 16; */
        if (message.duration !== 0n)
            writer.tag(16, WireType.Varint).int64(message.duration);
        /* int64 mission_id = 17; */
        if (message.missionId !== 0n)
            writer.tag(17, WireType.Varint).int64(message.missionId);
        /* int64 order_id = 18; */
        if (message.orderId !== 0n)
            writer.tag(18, WireType.Varint).int64(message.orderId);
        /* string redirect_url = 19; */
        if (message.redirectUrl !== "")
            writer.tag(19, WireType.LengthDelimited).string(message.redirectUrl);
        /* int64 forward = 20; */
        if (message.forward !== 0n)
            writer.tag(20, WireType.Varint).int64(message.forward);
        /* bilibili.app.archive.v1.Rights rights = 21; */
        if (message.rights)
            Rights.internalBinaryWrite(message.rights, writer.tag(21, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.archive.v1.Author author = 22; */
        if (message.author)
            Author.internalBinaryWrite(message.author, writer.tag(22, WireType.LengthDelimited).fork(), options).join();
        /* bilibili.app.archive.v1.Stat stat = 23; */
        if (message.stat)
            Stat.internalBinaryWrite(message.stat, writer.tag(23, WireType.LengthDelimited).fork(), options).join();
        /* string report_result = 24; */
        if (message.reportResult !== "")
            writer.tag(24, WireType.LengthDelimited).string(message.reportResult);
        /* string dynamic = 25; */
        if (message.dynamic !== "")
            writer.tag(25, WireType.LengthDelimited).string(message.dynamic);
        /* int64 first_cid = 26; */
        if (message.firstCid !== 0n)
            writer.tag(26, WireType.Varint).int64(message.firstCid);
        /* bilibili.app.archive.v1.Dimension dimension = 27; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(27, WireType.LengthDelimited).fork(), options).join();
        /* repeated bilibili.app.archive.v1.StaffInfo staff_info = 28; */
        for (let i = 0; i < message.staffInfo.length; i++)
            StaffInfo.internalBinaryWrite(message.staffInfo[i], writer.tag(28, WireType.LengthDelimited).fork(), options).join();
        /* int64 season_id = 29; */
        if (message.seasonId !== 0n)
            writer.tag(29, WireType.Varint).int64(message.seasonId);
        /* int64 attribute_v2 = 30; */
        if (message.attributeV2 !== 0n)
            writer.tag(30, WireType.Varint).int64(message.attributeV2);
        /* bilibili.app.archive.v1.SeasonTheme season_theme = 31; */
        if (message.seasonTheme)
            SeasonTheme.internalBinaryWrite(message.seasonTheme, writer.tag(31, WireType.LengthDelimited).fork(), options).join();
        /* string short_link_v2 = 40; */
        if (message.shortLinkV2 !== "")
            writer.tag(40, WireType.LengthDelimited).string(message.shortLinkV2);
        /* int32 up_from_v2 = 41; */
        if (message.upFromV2 !== 0)
            writer.tag(41, WireType.Varint).int32(message.upFromV2);
        /* string first_frame = 42; */
        if (message.firstFrame !== "")
            writer.tag(42, WireType.LengthDelimited).string(message.firstFrame);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Arc
 */
export const Arc = new Arc$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Author$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Author", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "name", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "face", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, name: "", face: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string name */ 2:
                    message.name = reader.string();
                    break;
                case /* string face */ 3:
                    message.face = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string name = 2; */
        if (message.name !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.name);
        /* string face = 3; */
        if (message.face !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.face);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Author
 */
export const Author = new Author$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Dimension$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Dimension", [
            { no: 1, name: "width", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "height", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 3, name: "rotate", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { width: 0n, height: 0n, rotate: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 width */ 1:
                    message.width = reader.int64().toBigInt();
                    break;
                case /* int64 height */ 2:
                    message.height = reader.int64().toBigInt();
                    break;
                case /* int64 rotate */ 3:
                    message.rotate = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 width = 1; */
        if (message.width !== 0n)
            writer.tag(1, WireType.Varint).int64(message.width);
        /* int64 height = 2; */
        if (message.height !== 0n)
            writer.tag(2, WireType.Varint).int64(message.height);
        /* int64 rotate = 3; */
        if (message.rotate !== 0n)
            writer.tag(3, WireType.Varint).int64(message.rotate);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Dimension
 */
export const Dimension = new Dimension$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Page$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Page", [
            { no: 1, name: "cid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "page", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "from", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 4, name: "part", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 5, name: "duration", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 6, name: "vid", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 7, name: "desc", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 8, name: "webLink", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 9, name: "dimension", kind: "message", T: () => Dimension },
            { no: 10, name: "first_frame", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { cid: 0n, page: 0, from: "", part: "", duration: 0n, vid: "", desc: "", webLink: "", firstFrame: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 cid */ 1:
                    message.cid = reader.int64().toBigInt();
                    break;
                case /* int32 page */ 2:
                    message.page = reader.int32();
                    break;
                case /* string from */ 3:
                    message.from = reader.string();
                    break;
                case /* string part */ 4:
                    message.part = reader.string();
                    break;
                case /* int64 duration */ 5:
                    message.duration = reader.int64().toBigInt();
                    break;
                case /* string vid */ 6:
                    message.vid = reader.string();
                    break;
                case /* string desc */ 7:
                    message.desc = reader.string();
                    break;
                case /* string webLink */ 8:
                    message.webLink = reader.string();
                    break;
                case /* bilibili.app.archive.v1.Dimension dimension */ 9:
                    message.dimension = Dimension.internalBinaryRead(reader, reader.uint32(), options, message.dimension);
                    break;
                case /* string first_frame */ 10:
                    message.firstFrame = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 cid = 1; */
        if (message.cid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.cid);
        /* int32 page = 2; */
        if (message.page !== 0)
            writer.tag(2, WireType.Varint).int32(message.page);
        /* string from = 3; */
        if (message.from !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.from);
        /* string part = 4; */
        if (message.part !== "")
            writer.tag(4, WireType.LengthDelimited).string(message.part);
        /* int64 duration = 5; */
        if (message.duration !== 0n)
            writer.tag(5, WireType.Varint).int64(message.duration);
        /* string vid = 6; */
        if (message.vid !== "")
            writer.tag(6, WireType.LengthDelimited).string(message.vid);
        /* string desc = 7; */
        if (message.desc !== "")
            writer.tag(7, WireType.LengthDelimited).string(message.desc);
        /* string webLink = 8; */
        if (message.webLink !== "")
            writer.tag(8, WireType.LengthDelimited).string(message.webLink);
        /* bilibili.app.archive.v1.Dimension dimension = 9; */
        if (message.dimension)
            Dimension.internalBinaryWrite(message.dimension, writer.tag(9, WireType.LengthDelimited).fork(), options).join();
        /* string first_frame = 10; */
        if (message.firstFrame !== "")
            writer.tag(10, WireType.LengthDelimited).string(message.firstFrame);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Page
 */
export const Page = new Page$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Rights$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Rights", [
            { no: 1, name: "bp", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 2, name: "elec", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "download", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "movie", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "pay", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "hd5", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "no_reprint", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "autoplay", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "ugc_pay", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "is_cooperation", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "ugc_pay_preview", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 12, name: "no_background", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 13, name: "arc_pay", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 14, name: "pay_free_watch", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { bp: 0, elec: 0, download: 0, movie: 0, pay: 0, hd5: 0, noReprint: 0, autoplay: 0, ugcPay: 0, isCooperation: 0, ugcPayPreview: 0, noBackground: 0, arcPay: 0, payFreeWatch: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int32 bp */ 1:
                    message.bp = reader.int32();
                    break;
                case /* int32 elec */ 2:
                    message.elec = reader.int32();
                    break;
                case /* int32 download */ 3:
                    message.download = reader.int32();
                    break;
                case /* int32 movie */ 4:
                    message.movie = reader.int32();
                    break;
                case /* int32 pay */ 5:
                    message.pay = reader.int32();
                    break;
                case /* int32 hd5 */ 6:
                    message.hd5 = reader.int32();
                    break;
                case /* int32 no_reprint */ 7:
                    message.noReprint = reader.int32();
                    break;
                case /* int32 autoplay */ 8:
                    message.autoplay = reader.int32();
                    break;
                case /* int32 ugc_pay */ 9:
                    message.ugcPay = reader.int32();
                    break;
                case /* int32 is_cooperation */ 10:
                    message.isCooperation = reader.int32();
                    break;
                case /* int32 ugc_pay_preview */ 11:
                    message.ugcPayPreview = reader.int32();
                    break;
                case /* int32 no_background */ 12:
                    message.noBackground = reader.int32();
                    break;
                case /* int32 arc_pay */ 13:
                    message.arcPay = reader.int32();
                    break;
                case /* int32 pay_free_watch */ 14:
                    message.payFreeWatch = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int32 bp = 1; */
        if (message.bp !== 0)
            writer.tag(1, WireType.Varint).int32(message.bp);
        /* int32 elec = 2; */
        if (message.elec !== 0)
            writer.tag(2, WireType.Varint).int32(message.elec);
        /* int32 download = 3; */
        if (message.download !== 0)
            writer.tag(3, WireType.Varint).int32(message.download);
        /* int32 movie = 4; */
        if (message.movie !== 0)
            writer.tag(4, WireType.Varint).int32(message.movie);
        /* int32 pay = 5; */
        if (message.pay !== 0)
            writer.tag(5, WireType.Varint).int32(message.pay);
        /* int32 hd5 = 6; */
        if (message.hd5 !== 0)
            writer.tag(6, WireType.Varint).int32(message.hd5);
        /* int32 no_reprint = 7; */
        if (message.noReprint !== 0)
            writer.tag(7, WireType.Varint).int32(message.noReprint);
        /* int32 autoplay = 8; */
        if (message.autoplay !== 0)
            writer.tag(8, WireType.Varint).int32(message.autoplay);
        /* int32 ugc_pay = 9; */
        if (message.ugcPay !== 0)
            writer.tag(9, WireType.Varint).int32(message.ugcPay);
        /* int32 is_cooperation = 10; */
        if (message.isCooperation !== 0)
            writer.tag(10, WireType.Varint).int32(message.isCooperation);
        /* int32 ugc_pay_preview = 11; */
        if (message.ugcPayPreview !== 0)
            writer.tag(11, WireType.Varint).int32(message.ugcPayPreview);
        /* int32 no_background = 12; */
        if (message.noBackground !== 0)
            writer.tag(12, WireType.Varint).int32(message.noBackground);
        /* int32 arc_pay = 13; */
        if (message.arcPay !== 0)
            writer.tag(13, WireType.Varint).int32(message.arcPay);
        /* int32 pay_free_watch = 14; */
        if (message.payFreeWatch !== 0)
            writer.tag(14, WireType.Varint).int32(message.payFreeWatch);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Rights
 */
export const Rights = new Rights$Type();
// @generated message type with reflection information, may provide speed optimized methods
class SeasonTheme$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.SeasonTheme", [
            { no: 1, name: "bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 2, name: "selected_bg_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "text_color", kind: "scalar", T: 9 /*ScalarType.STRING*/ }
        ]);
    }
    create(value) {
        const message = { bgColor: "", selectedBgColor: "", textColor: "" };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* string bg_color */ 1:
                    message.bgColor = reader.string();
                    break;
                case /* string selected_bg_color */ 2:
                    message.selectedBgColor = reader.string();
                    break;
                case /* string text_color */ 3:
                    message.textColor = reader.string();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* string bg_color = 1; */
        if (message.bgColor !== "")
            writer.tag(1, WireType.LengthDelimited).string(message.bgColor);
        /* string selected_bg_color = 2; */
        if (message.selectedBgColor !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.selectedBgColor);
        /* string text_color = 3; */
        if (message.textColor !== "")
            writer.tag(3, WireType.LengthDelimited).string(message.textColor);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.SeasonTheme
 */
export const SeasonTheme = new SeasonTheme$Type();
// @generated message type with reflection information, may provide speed optimized methods
class StaffInfo$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.StaffInfo", [
            { no: 1, name: "mid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "title", kind: "scalar", T: 9 /*ScalarType.STRING*/ },
            { no: 3, name: "attribute", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ }
        ]);
    }
    create(value) {
        const message = { mid: 0n, title: "", attribute: 0n };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 mid */ 1:
                    message.mid = reader.int64().toBigInt();
                    break;
                case /* string title */ 2:
                    message.title = reader.string();
                    break;
                case /* int64 attribute */ 3:
                    message.attribute = reader.int64().toBigInt();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 mid = 1; */
        if (message.mid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.mid);
        /* string title = 2; */
        if (message.title !== "")
            writer.tag(2, WireType.LengthDelimited).string(message.title);
        /* int64 attribute = 3; */
        if (message.attribute !== 0n)
            writer.tag(3, WireType.Varint).int64(message.attribute);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.StaffInfo
 */
export const StaffInfo = new StaffInfo$Type();
// @generated message type with reflection information, may provide speed optimized methods
class Stat$Type extends MessageType {
    constructor() {
        super("bilibili.app.archive.v1.Stat", [
            { no: 1, name: "aid", kind: "scalar", T: 3 /*ScalarType.INT64*/, L: 0 /*LongType.BIGINT*/ },
            { no: 2, name: "view", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 3, name: "danmaku", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 4, name: "reply", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 5, name: "fav", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 6, name: "coin", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 7, name: "share", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 8, name: "now_rank", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 9, name: "his_rank", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 10, name: "like", kind: "scalar", T: 5 /*ScalarType.INT32*/ },
            { no: 11, name: "dislike", kind: "scalar", T: 5 /*ScalarType.INT32*/ }
        ]);
    }
    create(value) {
        const message = { aid: 0n, view: 0, danmaku: 0, reply: 0, fav: 0, coin: 0, share: 0, nowRank: 0, hisRank: 0, like: 0, dislike: 0 };
        globalThis.Object.defineProperty(message, MESSAGE_TYPE, { enumerable: false, value: this });
        if (value !== undefined)
            reflectionMergePartial(this, message, value);
        return message;
    }
    internalBinaryRead(reader, length, options, target) {
        let message = target ?? this.create(), end = reader.pos + length;
        while (reader.pos < end) {
            let [fieldNo, wireType] = reader.tag();
            switch (fieldNo) {
                case /* int64 aid */ 1:
                    message.aid = reader.int64().toBigInt();
                    break;
                case /* int32 view */ 2:
                    message.view = reader.int32();
                    break;
                case /* int32 danmaku */ 3:
                    message.danmaku = reader.int32();
                    break;
                case /* int32 reply */ 4:
                    message.reply = reader.int32();
                    break;
                case /* int32 fav */ 5:
                    message.fav = reader.int32();
                    break;
                case /* int32 coin */ 6:
                    message.coin = reader.int32();
                    break;
                case /* int32 share */ 7:
                    message.share = reader.int32();
                    break;
                case /* int32 now_rank */ 8:
                    message.nowRank = reader.int32();
                    break;
                case /* int32 his_rank */ 9:
                    message.hisRank = reader.int32();
                    break;
                case /* int32 like */ 10:
                    message.like = reader.int32();
                    break;
                case /* int32 dislike */ 11:
                    message.dislike = reader.int32();
                    break;
                default:
                    let u = options.readUnknownField;
                    if (u === "throw")
                        throw new globalThis.Error(`Unknown field ${fieldNo} (wire type ${wireType}) for ${this.typeName}`);
                    let d = reader.skip(wireType);
                    if (u !== false)
                        (u === true ? UnknownFieldHandler.onRead : u)(this.typeName, message, fieldNo, wireType, d);
            }
        }
        return message;
    }
    internalBinaryWrite(message, writer, options) {
        /* int64 aid = 1; */
        if (message.aid !== 0n)
            writer.tag(1, WireType.Varint).int64(message.aid);
        /* int32 view = 2; */
        if (message.view !== 0)
            writer.tag(2, WireType.Varint).int32(message.view);
        /* int32 danmaku = 3; */
        if (message.danmaku !== 0)
            writer.tag(3, WireType.Varint).int32(message.danmaku);
        /* int32 reply = 4; */
        if (message.reply !== 0)
            writer.tag(4, WireType.Varint).int32(message.reply);
        /* int32 fav = 5; */
        if (message.fav !== 0)
            writer.tag(5, WireType.Varint).int32(message.fav);
        /* int32 coin = 6; */
        if (message.coin !== 0)
            writer.tag(6, WireType.Varint).int32(message.coin);
        /* int32 share = 7; */
        if (message.share !== 0)
            writer.tag(7, WireType.Varint).int32(message.share);
        /* int32 now_rank = 8; */
        if (message.nowRank !== 0)
            writer.tag(8, WireType.Varint).int32(message.nowRank);
        /* int32 his_rank = 9; */
        if (message.hisRank !== 0)
            writer.tag(9, WireType.Varint).int32(message.hisRank);
        /* int32 like = 10; */
        if (message.like !== 0)
            writer.tag(10, WireType.Varint).int32(message.like);
        /* int32 dislike = 11; */
        if (message.dislike !== 0)
            writer.tag(11, WireType.Varint).int32(message.dislike);
        let u = options.writeUnknownFields;
        if (u !== false)
            (u == true ? UnknownFieldHandler.onWrite : u)(this.typeName, message, writer);
        return writer;
    }
}
/**
 * @generated MessageType for protobuf message bilibili.app.archive.v1.Stat
 */
export const Stat = new Stat$Type();
